
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  acceptConditions: 'acceptConditions',
  role: 'role',
  qualiCarriere: 'qualiCarriere',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FileScalarFieldEnum = {
  id: 'id',
  name: 'name',
  originalName: 'originalName',
  extension: 'extension',
  usage: 'usage',
  userId: 'userId',
  cvMinuteId: 'cvMinuteId',
  sectionInfoId: 'sectionInfoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvMinuteScalarFieldEnum = {
  id: 'id',
  name: 'name',
  position: 'position',
  primaryBg: 'primaryBg',
  secondaryBg: 'secondaryBg',
  tertiaryBg: 'tertiaryBg',
  visible: 'visible',
  qualiCarriereRef: 'qualiCarriereRef',
  generated: 'generated',
  score: 'score',
  userId: 'userId',
  cvThequeCritereId: 'cvThequeCritereId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvMinuteDomainScalarFieldEnum = {
  id: 'id',
  content: 'content',
  cvMinuteId: 'cvMinuteId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SectionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  editable: 'editable',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvMinuteSectionScalarFieldEnum = {
  id: 'id',
  sectionOrder: 'sectionOrder',
  sectionTitle: 'sectionTitle',
  cvMinuteId: 'cvMinuteId',
  sectionId: 'sectionId'
};

exports.Prisma.SectionInfoScalarFieldEnum = {
  id: 'id',
  order: 'order',
  content: 'content',
  title: 'title',
  company: 'company',
  date: 'date',
  contrat: 'contrat',
  icon: 'icon',
  iconSize: 'iconSize',
  cvMinuteSectionId: 'cvMinuteSectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdviceScalarFieldEnum = {
  id: 'id',
  type: 'type',
  content: 'content',
  cvMinuteId: 'cvMinuteId',
  sectionInfoId: 'sectionInfoId',
  cvMinuteSectionId: 'cvMinuteSectionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EvaluationScalarFieldEnum = {
  id: 'id',
  initialScore: 'initialScore',
  actualScore: 'actualScore',
  content: 'content',
  weakContent: 'weakContent',
  cvMinuteId: 'cvMinuteId',
  sectionInfoId: 'sectionInfoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OpenaiResponseScalarFieldEnum = {
  id: 'id',
  responseId: 'responseId',
  request: 'request',
  response: 'response',
  index: 'index',
  cvMinuteId: 'cvMinuteId',
  userId: 'userId',
  cvThequeCritereId: 'cvThequeCritereId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QualiCarriereQuestionScalarFieldEnum = {
  id: 'id',
  order: 'order',
  content: 'content',
  sectionInfoId: 'sectionInfoId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QualiCarriereResponseScalarFieldEnum = {
  id: 'id',
  content: 'content',
  questionId: 'questionId',
  sectionInfoId: 'sectionInfoId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QualiCarriereResumeScalarFieldEnum = {
  id: 'id',
  content: 'content',
  sectionInfoId: 'sectionInfoId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QualiCarriereCompetenceScalarFieldEnum = {
  id: 'id',
  content: 'content',
  sectionInfoId: 'sectionInfoId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.QualiCarriereChatScalarFieldEnum = {
  id: 'id',
  role: 'role',
  content: 'content',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvThequeCritereScalarFieldEnum = {
  id: 'id',
  position: 'position',
  domain: 'domain',
  description: 'description',
  diplome: 'diplome',
  localisation: 'localisation',
  distance: 'distance',
  experience: 'experience',
  evaluation: 'evaluation',
  saved: 'saved',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvThequeCompetenceScalarFieldEnum = {
  id: 'id',
  content: 'content',
  cvThequeCritereId: 'cvThequeCritereId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvThequeViewScalarFieldEnum = {
  id: 'id',
  count: 'count',
  cvMinuteId: 'cvMinuteId',
  cvThequeCritereId: 'cvThequeCritereId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvThequeUserScalarFieldEnum = {
  id: 'id',
  score: 'score',
  userId: 'userId',
  cvThequeCritereId: 'cvThequeCritereId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvThequeContactScalarFieldEnum = {
  id: 'id',
  type: 'type',
  date: 'date',
  hour: 'hour',
  minute: 'minute',
  message: 'message',
  status: 'status',
  userId: 'userId',
  recruiterId: 'recruiterId',
  cvMinuteId: 'cvMinuteId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CvThequeContactViewScalarFieldEnum = {
  id: 'id',
  count: 'count',
  userId: 'userId',
  cvThequeContactId: 'cvThequeContactId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  File: 'File',
  CvMinute: 'CvMinute',
  CvMinuteDomain: 'CvMinuteDomain',
  Section: 'Section',
  CvMinuteSection: 'CvMinuteSection',
  SectionInfo: 'SectionInfo',
  Advice: 'Advice',
  Evaluation: 'Evaluation',
  OpenaiResponse: 'OpenaiResponse',
  QualiCarriereQuestion: 'QualiCarriereQuestion',
  QualiCarriereResponse: 'QualiCarriereResponse',
  QualiCarriereResume: 'QualiCarriereResume',
  QualiCarriereCompetence: 'QualiCarriereCompetence',
  QualiCarriereChat: 'QualiCarriereChat',
  CvThequeCritere: 'CvThequeCritere',
  CvThequeCompetence: 'CvThequeCompetence',
  CvThequeView: 'CvThequeView',
  CvThequeUser: 'CvThequeUser',
  CvThequeContact: 'CvThequeContact',
  CvThequeContactView: 'CvThequeContactView'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
