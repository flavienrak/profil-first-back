
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model File
 * 
 */
export type File = $Result.DefaultSelection<Prisma.$FilePayload>
/**
 * Model CvMinute
 * 
 */
export type CvMinute = $Result.DefaultSelection<Prisma.$CvMinutePayload>
/**
 * Model CvMinuteDomain
 * 
 */
export type CvMinuteDomain = $Result.DefaultSelection<Prisma.$CvMinuteDomainPayload>
/**
 * Model Section
 * 
 */
export type Section = $Result.DefaultSelection<Prisma.$SectionPayload>
/**
 * Model CvMinuteSection
 * 
 */
export type CvMinuteSection = $Result.DefaultSelection<Prisma.$CvMinuteSectionPayload>
/**
 * Model SectionInfo
 * 
 */
export type SectionInfo = $Result.DefaultSelection<Prisma.$SectionInfoPayload>
/**
 * Model Advice
 * 
 */
export type Advice = $Result.DefaultSelection<Prisma.$AdvicePayload>
/**
 * Model Evaluation
 * 
 */
export type Evaluation = $Result.DefaultSelection<Prisma.$EvaluationPayload>
/**
 * Model OpenaiResponse
 * 
 */
export type OpenaiResponse = $Result.DefaultSelection<Prisma.$OpenaiResponsePayload>
/**
 * Model QualiCarriereQuestion
 * 
 */
export type QualiCarriereQuestion = $Result.DefaultSelection<Prisma.$QualiCarriereQuestionPayload>
/**
 * Model QualiCarriereResponse
 * 
 */
export type QualiCarriereResponse = $Result.DefaultSelection<Prisma.$QualiCarriereResponsePayload>
/**
 * Model QualiCarriereResume
 * 
 */
export type QualiCarriereResume = $Result.DefaultSelection<Prisma.$QualiCarriereResumePayload>
/**
 * Model QualiCarriereCompetence
 * 
 */
export type QualiCarriereCompetence = $Result.DefaultSelection<Prisma.$QualiCarriereCompetencePayload>
/**
 * Model QualiCarriereChat
 * 
 */
export type QualiCarriereChat = $Result.DefaultSelection<Prisma.$QualiCarriereChatPayload>
/**
 * Model CvThequeCritere
 * 
 */
export type CvThequeCritere = $Result.DefaultSelection<Prisma.$CvThequeCriterePayload>
/**
 * Model CvThequeCompetence
 * 
 */
export type CvThequeCompetence = $Result.DefaultSelection<Prisma.$CvThequeCompetencePayload>
/**
 * Model CvThequeView
 * 
 */
export type CvThequeView = $Result.DefaultSelection<Prisma.$CvThequeViewPayload>
/**
 * Model CvThequeUser
 * 
 */
export type CvThequeUser = $Result.DefaultSelection<Prisma.$CvThequeUserPayload>
/**
 * Model CvThequeContact
 * 
 */
export type CvThequeContact = $Result.DefaultSelection<Prisma.$CvThequeContactPayload>
/**
 * Model CvThequeContactView
 * 
 */
export type CvThequeContactView = $Result.DefaultSelection<Prisma.$CvThequeContactViewPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.file`: Exposes CRUD operations for the **File** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Files
    * const files = await prisma.file.findMany()
    * ```
    */
  get file(): Prisma.FileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvMinute`: Exposes CRUD operations for the **CvMinute** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvMinutes
    * const cvMinutes = await prisma.cvMinute.findMany()
    * ```
    */
  get cvMinute(): Prisma.CvMinuteDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvMinuteDomain`: Exposes CRUD operations for the **CvMinuteDomain** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvMinuteDomains
    * const cvMinuteDomains = await prisma.cvMinuteDomain.findMany()
    * ```
    */
  get cvMinuteDomain(): Prisma.CvMinuteDomainDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.section`: Exposes CRUD operations for the **Section** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sections
    * const sections = await prisma.section.findMany()
    * ```
    */
  get section(): Prisma.SectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvMinuteSection`: Exposes CRUD operations for the **CvMinuteSection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvMinuteSections
    * const cvMinuteSections = await prisma.cvMinuteSection.findMany()
    * ```
    */
  get cvMinuteSection(): Prisma.CvMinuteSectionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sectionInfo`: Exposes CRUD operations for the **SectionInfo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SectionInfos
    * const sectionInfos = await prisma.sectionInfo.findMany()
    * ```
    */
  get sectionInfo(): Prisma.SectionInfoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.advice`: Exposes CRUD operations for the **Advice** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Advice
    * const advice = await prisma.advice.findMany()
    * ```
    */
  get advice(): Prisma.AdviceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evaluation`: Exposes CRUD operations for the **Evaluation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Evaluations
    * const evaluations = await prisma.evaluation.findMany()
    * ```
    */
  get evaluation(): Prisma.EvaluationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.openaiResponse`: Exposes CRUD operations for the **OpenaiResponse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OpenaiResponses
    * const openaiResponses = await prisma.openaiResponse.findMany()
    * ```
    */
  get openaiResponse(): Prisma.OpenaiResponseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.qualiCarriereQuestion`: Exposes CRUD operations for the **QualiCarriereQuestion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QualiCarriereQuestions
    * const qualiCarriereQuestions = await prisma.qualiCarriereQuestion.findMany()
    * ```
    */
  get qualiCarriereQuestion(): Prisma.QualiCarriereQuestionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.qualiCarriereResponse`: Exposes CRUD operations for the **QualiCarriereResponse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QualiCarriereResponses
    * const qualiCarriereResponses = await prisma.qualiCarriereResponse.findMany()
    * ```
    */
  get qualiCarriereResponse(): Prisma.QualiCarriereResponseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.qualiCarriereResume`: Exposes CRUD operations for the **QualiCarriereResume** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QualiCarriereResumes
    * const qualiCarriereResumes = await prisma.qualiCarriereResume.findMany()
    * ```
    */
  get qualiCarriereResume(): Prisma.QualiCarriereResumeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.qualiCarriereCompetence`: Exposes CRUD operations for the **QualiCarriereCompetence** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QualiCarriereCompetences
    * const qualiCarriereCompetences = await prisma.qualiCarriereCompetence.findMany()
    * ```
    */
  get qualiCarriereCompetence(): Prisma.QualiCarriereCompetenceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.qualiCarriereChat`: Exposes CRUD operations for the **QualiCarriereChat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more QualiCarriereChats
    * const qualiCarriereChats = await prisma.qualiCarriereChat.findMany()
    * ```
    */
  get qualiCarriereChat(): Prisma.QualiCarriereChatDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvThequeCritere`: Exposes CRUD operations for the **CvThequeCritere** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvThequeCriteres
    * const cvThequeCriteres = await prisma.cvThequeCritere.findMany()
    * ```
    */
  get cvThequeCritere(): Prisma.CvThequeCritereDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvThequeCompetence`: Exposes CRUD operations for the **CvThequeCompetence** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvThequeCompetences
    * const cvThequeCompetences = await prisma.cvThequeCompetence.findMany()
    * ```
    */
  get cvThequeCompetence(): Prisma.CvThequeCompetenceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvThequeView`: Exposes CRUD operations for the **CvThequeView** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvThequeViews
    * const cvThequeViews = await prisma.cvThequeView.findMany()
    * ```
    */
  get cvThequeView(): Prisma.CvThequeViewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvThequeUser`: Exposes CRUD operations for the **CvThequeUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvThequeUsers
    * const cvThequeUsers = await prisma.cvThequeUser.findMany()
    * ```
    */
  get cvThequeUser(): Prisma.CvThequeUserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvThequeContact`: Exposes CRUD operations for the **CvThequeContact** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvThequeContacts
    * const cvThequeContacts = await prisma.cvThequeContact.findMany()
    * ```
    */
  get cvThequeContact(): Prisma.CvThequeContactDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cvThequeContactView`: Exposes CRUD operations for the **CvThequeContactView** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CvThequeContactViews
    * const cvThequeContactViews = await prisma.cvThequeContactView.findMany()
    * ```
    */
  get cvThequeContactView(): Prisma.CvThequeContactViewDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    File: 'File',
    CvMinute: 'CvMinute',
    CvMinuteDomain: 'CvMinuteDomain',
    Section: 'Section',
    CvMinuteSection: 'CvMinuteSection',
    SectionInfo: 'SectionInfo',
    Advice: 'Advice',
    Evaluation: 'Evaluation',
    OpenaiResponse: 'OpenaiResponse',
    QualiCarriereQuestion: 'QualiCarriereQuestion',
    QualiCarriereResponse: 'QualiCarriereResponse',
    QualiCarriereResume: 'QualiCarriereResume',
    QualiCarriereCompetence: 'QualiCarriereCompetence',
    QualiCarriereChat: 'QualiCarriereChat',
    CvThequeCritere: 'CvThequeCritere',
    CvThequeCompetence: 'CvThequeCompetence',
    CvThequeView: 'CvThequeView',
    CvThequeUser: 'CvThequeUser',
    CvThequeContact: 'CvThequeContact',
    CvThequeContactView: 'CvThequeContactView'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "file" | "cvMinute" | "cvMinuteDomain" | "section" | "cvMinuteSection" | "sectionInfo" | "advice" | "evaluation" | "openaiResponse" | "qualiCarriereQuestion" | "qualiCarriereResponse" | "qualiCarriereResume" | "qualiCarriereCompetence" | "qualiCarriereChat" | "cvThequeCritere" | "cvThequeCompetence" | "cvThequeView" | "cvThequeUser" | "cvThequeContact" | "cvThequeContactView"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      File: {
        payload: Prisma.$FilePayload<ExtArgs>
        fields: Prisma.FileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          findFirst: {
            args: Prisma.FileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          findMany: {
            args: Prisma.FileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>[]
          }
          create: {
            args: Prisma.FileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          createMany: {
            args: Prisma.FileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>[]
          }
          delete: {
            args: Prisma.FileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          update: {
            args: Prisma.FileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          deleteMany: {
            args: Prisma.FileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>[]
          }
          upsert: {
            args: Prisma.FileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          aggregate: {
            args: Prisma.FileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFile>
          }
          groupBy: {
            args: Prisma.FileGroupByArgs<ExtArgs>
            result: $Utils.Optional<FileGroupByOutputType>[]
          }
          count: {
            args: Prisma.FileCountArgs<ExtArgs>
            result: $Utils.Optional<FileCountAggregateOutputType> | number
          }
        }
      }
      CvMinute: {
        payload: Prisma.$CvMinutePayload<ExtArgs>
        fields: Prisma.CvMinuteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvMinuteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvMinuteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>
          }
          findFirst: {
            args: Prisma.CvMinuteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvMinuteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>
          }
          findMany: {
            args: Prisma.CvMinuteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>[]
          }
          create: {
            args: Prisma.CvMinuteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>
          }
          createMany: {
            args: Prisma.CvMinuteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvMinuteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>[]
          }
          delete: {
            args: Prisma.CvMinuteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>
          }
          update: {
            args: Prisma.CvMinuteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>
          }
          deleteMany: {
            args: Prisma.CvMinuteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvMinuteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvMinuteUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>[]
          }
          upsert: {
            args: Prisma.CvMinuteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinutePayload>
          }
          aggregate: {
            args: Prisma.CvMinuteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvMinute>
          }
          groupBy: {
            args: Prisma.CvMinuteGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvMinuteGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvMinuteCountArgs<ExtArgs>
            result: $Utils.Optional<CvMinuteCountAggregateOutputType> | number
          }
        }
      }
      CvMinuteDomain: {
        payload: Prisma.$CvMinuteDomainPayload<ExtArgs>
        fields: Prisma.CvMinuteDomainFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvMinuteDomainFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvMinuteDomainFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>
          }
          findFirst: {
            args: Prisma.CvMinuteDomainFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvMinuteDomainFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>
          }
          findMany: {
            args: Prisma.CvMinuteDomainFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>[]
          }
          create: {
            args: Prisma.CvMinuteDomainCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>
          }
          createMany: {
            args: Prisma.CvMinuteDomainCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvMinuteDomainCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>[]
          }
          delete: {
            args: Prisma.CvMinuteDomainDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>
          }
          update: {
            args: Prisma.CvMinuteDomainUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>
          }
          deleteMany: {
            args: Prisma.CvMinuteDomainDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvMinuteDomainUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvMinuteDomainUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>[]
          }
          upsert: {
            args: Prisma.CvMinuteDomainUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteDomainPayload>
          }
          aggregate: {
            args: Prisma.CvMinuteDomainAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvMinuteDomain>
          }
          groupBy: {
            args: Prisma.CvMinuteDomainGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvMinuteDomainGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvMinuteDomainCountArgs<ExtArgs>
            result: $Utils.Optional<CvMinuteDomainCountAggregateOutputType> | number
          }
        }
      }
      Section: {
        payload: Prisma.$SectionPayload<ExtArgs>
        fields: Prisma.SectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>
          }
          findFirst: {
            args: Prisma.SectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>
          }
          findMany: {
            args: Prisma.SectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>[]
          }
          create: {
            args: Prisma.SectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>
          }
          createMany: {
            args: Prisma.SectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SectionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>[]
          }
          delete: {
            args: Prisma.SectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>
          }
          update: {
            args: Prisma.SectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>
          }
          deleteMany: {
            args: Prisma.SectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SectionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>[]
          }
          upsert: {
            args: Prisma.SectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionPayload>
          }
          aggregate: {
            args: Prisma.SectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSection>
          }
          groupBy: {
            args: Prisma.SectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SectionCountArgs<ExtArgs>
            result: $Utils.Optional<SectionCountAggregateOutputType> | number
          }
        }
      }
      CvMinuteSection: {
        payload: Prisma.$CvMinuteSectionPayload<ExtArgs>
        fields: Prisma.CvMinuteSectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvMinuteSectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvMinuteSectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>
          }
          findFirst: {
            args: Prisma.CvMinuteSectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvMinuteSectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>
          }
          findMany: {
            args: Prisma.CvMinuteSectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>[]
          }
          create: {
            args: Prisma.CvMinuteSectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>
          }
          createMany: {
            args: Prisma.CvMinuteSectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvMinuteSectionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>[]
          }
          delete: {
            args: Prisma.CvMinuteSectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>
          }
          update: {
            args: Prisma.CvMinuteSectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>
          }
          deleteMany: {
            args: Prisma.CvMinuteSectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvMinuteSectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvMinuteSectionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>[]
          }
          upsert: {
            args: Prisma.CvMinuteSectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvMinuteSectionPayload>
          }
          aggregate: {
            args: Prisma.CvMinuteSectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvMinuteSection>
          }
          groupBy: {
            args: Prisma.CvMinuteSectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvMinuteSectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvMinuteSectionCountArgs<ExtArgs>
            result: $Utils.Optional<CvMinuteSectionCountAggregateOutputType> | number
          }
        }
      }
      SectionInfo: {
        payload: Prisma.$SectionInfoPayload<ExtArgs>
        fields: Prisma.SectionInfoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SectionInfoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SectionInfoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>
          }
          findFirst: {
            args: Prisma.SectionInfoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SectionInfoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>
          }
          findMany: {
            args: Prisma.SectionInfoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>[]
          }
          create: {
            args: Prisma.SectionInfoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>
          }
          createMany: {
            args: Prisma.SectionInfoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SectionInfoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>[]
          }
          delete: {
            args: Prisma.SectionInfoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>
          }
          update: {
            args: Prisma.SectionInfoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>
          }
          deleteMany: {
            args: Prisma.SectionInfoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SectionInfoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SectionInfoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>[]
          }
          upsert: {
            args: Prisma.SectionInfoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SectionInfoPayload>
          }
          aggregate: {
            args: Prisma.SectionInfoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSectionInfo>
          }
          groupBy: {
            args: Prisma.SectionInfoGroupByArgs<ExtArgs>
            result: $Utils.Optional<SectionInfoGroupByOutputType>[]
          }
          count: {
            args: Prisma.SectionInfoCountArgs<ExtArgs>
            result: $Utils.Optional<SectionInfoCountAggregateOutputType> | number
          }
        }
      }
      Advice: {
        payload: Prisma.$AdvicePayload<ExtArgs>
        fields: Prisma.AdviceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdviceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdviceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>
          }
          findFirst: {
            args: Prisma.AdviceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdviceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>
          }
          findMany: {
            args: Prisma.AdviceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>[]
          }
          create: {
            args: Prisma.AdviceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>
          }
          createMany: {
            args: Prisma.AdviceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdviceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>[]
          }
          delete: {
            args: Prisma.AdviceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>
          }
          update: {
            args: Prisma.AdviceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>
          }
          deleteMany: {
            args: Prisma.AdviceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdviceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AdviceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>[]
          }
          upsert: {
            args: Prisma.AdviceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdvicePayload>
          }
          aggregate: {
            args: Prisma.AdviceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdvice>
          }
          groupBy: {
            args: Prisma.AdviceGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdviceGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdviceCountArgs<ExtArgs>
            result: $Utils.Optional<AdviceCountAggregateOutputType> | number
          }
        }
      }
      Evaluation: {
        payload: Prisma.$EvaluationPayload<ExtArgs>
        fields: Prisma.EvaluationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EvaluationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EvaluationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>
          }
          findFirst: {
            args: Prisma.EvaluationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EvaluationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>
          }
          findMany: {
            args: Prisma.EvaluationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>[]
          }
          create: {
            args: Prisma.EvaluationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>
          }
          createMany: {
            args: Prisma.EvaluationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EvaluationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>[]
          }
          delete: {
            args: Prisma.EvaluationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>
          }
          update: {
            args: Prisma.EvaluationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>
          }
          deleteMany: {
            args: Prisma.EvaluationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EvaluationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EvaluationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>[]
          }
          upsert: {
            args: Prisma.EvaluationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EvaluationPayload>
          }
          aggregate: {
            args: Prisma.EvaluationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvaluation>
          }
          groupBy: {
            args: Prisma.EvaluationGroupByArgs<ExtArgs>
            result: $Utils.Optional<EvaluationGroupByOutputType>[]
          }
          count: {
            args: Prisma.EvaluationCountArgs<ExtArgs>
            result: $Utils.Optional<EvaluationCountAggregateOutputType> | number
          }
        }
      }
      OpenaiResponse: {
        payload: Prisma.$OpenaiResponsePayload<ExtArgs>
        fields: Prisma.OpenaiResponseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OpenaiResponseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OpenaiResponseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>
          }
          findFirst: {
            args: Prisma.OpenaiResponseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OpenaiResponseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>
          }
          findMany: {
            args: Prisma.OpenaiResponseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>[]
          }
          create: {
            args: Prisma.OpenaiResponseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>
          }
          createMany: {
            args: Prisma.OpenaiResponseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OpenaiResponseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>[]
          }
          delete: {
            args: Prisma.OpenaiResponseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>
          }
          update: {
            args: Prisma.OpenaiResponseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>
          }
          deleteMany: {
            args: Prisma.OpenaiResponseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OpenaiResponseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OpenaiResponseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>[]
          }
          upsert: {
            args: Prisma.OpenaiResponseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpenaiResponsePayload>
          }
          aggregate: {
            args: Prisma.OpenaiResponseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOpenaiResponse>
          }
          groupBy: {
            args: Prisma.OpenaiResponseGroupByArgs<ExtArgs>
            result: $Utils.Optional<OpenaiResponseGroupByOutputType>[]
          }
          count: {
            args: Prisma.OpenaiResponseCountArgs<ExtArgs>
            result: $Utils.Optional<OpenaiResponseCountAggregateOutputType> | number
          }
        }
      }
      QualiCarriereQuestion: {
        payload: Prisma.$QualiCarriereQuestionPayload<ExtArgs>
        fields: Prisma.QualiCarriereQuestionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QualiCarriereQuestionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QualiCarriereQuestionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>
          }
          findFirst: {
            args: Prisma.QualiCarriereQuestionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QualiCarriereQuestionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>
          }
          findMany: {
            args: Prisma.QualiCarriereQuestionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>[]
          }
          create: {
            args: Prisma.QualiCarriereQuestionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>
          }
          createMany: {
            args: Prisma.QualiCarriereQuestionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QualiCarriereQuestionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>[]
          }
          delete: {
            args: Prisma.QualiCarriereQuestionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>
          }
          update: {
            args: Prisma.QualiCarriereQuestionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>
          }
          deleteMany: {
            args: Prisma.QualiCarriereQuestionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QualiCarriereQuestionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.QualiCarriereQuestionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>[]
          }
          upsert: {
            args: Prisma.QualiCarriereQuestionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereQuestionPayload>
          }
          aggregate: {
            args: Prisma.QualiCarriereQuestionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQualiCarriereQuestion>
          }
          groupBy: {
            args: Prisma.QualiCarriereQuestionGroupByArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereQuestionGroupByOutputType>[]
          }
          count: {
            args: Prisma.QualiCarriereQuestionCountArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereQuestionCountAggregateOutputType> | number
          }
        }
      }
      QualiCarriereResponse: {
        payload: Prisma.$QualiCarriereResponsePayload<ExtArgs>
        fields: Prisma.QualiCarriereResponseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QualiCarriereResponseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QualiCarriereResponseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>
          }
          findFirst: {
            args: Prisma.QualiCarriereResponseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QualiCarriereResponseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>
          }
          findMany: {
            args: Prisma.QualiCarriereResponseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>[]
          }
          create: {
            args: Prisma.QualiCarriereResponseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>
          }
          createMany: {
            args: Prisma.QualiCarriereResponseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QualiCarriereResponseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>[]
          }
          delete: {
            args: Prisma.QualiCarriereResponseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>
          }
          update: {
            args: Prisma.QualiCarriereResponseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>
          }
          deleteMany: {
            args: Prisma.QualiCarriereResponseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QualiCarriereResponseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.QualiCarriereResponseUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>[]
          }
          upsert: {
            args: Prisma.QualiCarriereResponseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResponsePayload>
          }
          aggregate: {
            args: Prisma.QualiCarriereResponseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQualiCarriereResponse>
          }
          groupBy: {
            args: Prisma.QualiCarriereResponseGroupByArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereResponseGroupByOutputType>[]
          }
          count: {
            args: Prisma.QualiCarriereResponseCountArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereResponseCountAggregateOutputType> | number
          }
        }
      }
      QualiCarriereResume: {
        payload: Prisma.$QualiCarriereResumePayload<ExtArgs>
        fields: Prisma.QualiCarriereResumeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QualiCarriereResumeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QualiCarriereResumeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>
          }
          findFirst: {
            args: Prisma.QualiCarriereResumeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QualiCarriereResumeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>
          }
          findMany: {
            args: Prisma.QualiCarriereResumeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>[]
          }
          create: {
            args: Prisma.QualiCarriereResumeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>
          }
          createMany: {
            args: Prisma.QualiCarriereResumeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QualiCarriereResumeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>[]
          }
          delete: {
            args: Prisma.QualiCarriereResumeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>
          }
          update: {
            args: Prisma.QualiCarriereResumeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>
          }
          deleteMany: {
            args: Prisma.QualiCarriereResumeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QualiCarriereResumeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.QualiCarriereResumeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>[]
          }
          upsert: {
            args: Prisma.QualiCarriereResumeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereResumePayload>
          }
          aggregate: {
            args: Prisma.QualiCarriereResumeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQualiCarriereResume>
          }
          groupBy: {
            args: Prisma.QualiCarriereResumeGroupByArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereResumeGroupByOutputType>[]
          }
          count: {
            args: Prisma.QualiCarriereResumeCountArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereResumeCountAggregateOutputType> | number
          }
        }
      }
      QualiCarriereCompetence: {
        payload: Prisma.$QualiCarriereCompetencePayload<ExtArgs>
        fields: Prisma.QualiCarriereCompetenceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QualiCarriereCompetenceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QualiCarriereCompetenceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>
          }
          findFirst: {
            args: Prisma.QualiCarriereCompetenceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QualiCarriereCompetenceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>
          }
          findMany: {
            args: Prisma.QualiCarriereCompetenceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>[]
          }
          create: {
            args: Prisma.QualiCarriereCompetenceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>
          }
          createMany: {
            args: Prisma.QualiCarriereCompetenceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QualiCarriereCompetenceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>[]
          }
          delete: {
            args: Prisma.QualiCarriereCompetenceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>
          }
          update: {
            args: Prisma.QualiCarriereCompetenceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>
          }
          deleteMany: {
            args: Prisma.QualiCarriereCompetenceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QualiCarriereCompetenceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.QualiCarriereCompetenceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>[]
          }
          upsert: {
            args: Prisma.QualiCarriereCompetenceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereCompetencePayload>
          }
          aggregate: {
            args: Prisma.QualiCarriereCompetenceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQualiCarriereCompetence>
          }
          groupBy: {
            args: Prisma.QualiCarriereCompetenceGroupByArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereCompetenceGroupByOutputType>[]
          }
          count: {
            args: Prisma.QualiCarriereCompetenceCountArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereCompetenceCountAggregateOutputType> | number
          }
        }
      }
      QualiCarriereChat: {
        payload: Prisma.$QualiCarriereChatPayload<ExtArgs>
        fields: Prisma.QualiCarriereChatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.QualiCarriereChatFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.QualiCarriereChatFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>
          }
          findFirst: {
            args: Prisma.QualiCarriereChatFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.QualiCarriereChatFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>
          }
          findMany: {
            args: Prisma.QualiCarriereChatFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>[]
          }
          create: {
            args: Prisma.QualiCarriereChatCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>
          }
          createMany: {
            args: Prisma.QualiCarriereChatCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.QualiCarriereChatCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>[]
          }
          delete: {
            args: Prisma.QualiCarriereChatDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>
          }
          update: {
            args: Prisma.QualiCarriereChatUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>
          }
          deleteMany: {
            args: Prisma.QualiCarriereChatDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.QualiCarriereChatUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.QualiCarriereChatUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>[]
          }
          upsert: {
            args: Prisma.QualiCarriereChatUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$QualiCarriereChatPayload>
          }
          aggregate: {
            args: Prisma.QualiCarriereChatAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateQualiCarriereChat>
          }
          groupBy: {
            args: Prisma.QualiCarriereChatGroupByArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereChatGroupByOutputType>[]
          }
          count: {
            args: Prisma.QualiCarriereChatCountArgs<ExtArgs>
            result: $Utils.Optional<QualiCarriereChatCountAggregateOutputType> | number
          }
        }
      }
      CvThequeCritere: {
        payload: Prisma.$CvThequeCriterePayload<ExtArgs>
        fields: Prisma.CvThequeCritereFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvThequeCritereFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvThequeCritereFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>
          }
          findFirst: {
            args: Prisma.CvThequeCritereFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvThequeCritereFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>
          }
          findMany: {
            args: Prisma.CvThequeCritereFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>[]
          }
          create: {
            args: Prisma.CvThequeCritereCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>
          }
          createMany: {
            args: Prisma.CvThequeCritereCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvThequeCritereCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>[]
          }
          delete: {
            args: Prisma.CvThequeCritereDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>
          }
          update: {
            args: Prisma.CvThequeCritereUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>
          }
          deleteMany: {
            args: Prisma.CvThequeCritereDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvThequeCritereUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvThequeCritereUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>[]
          }
          upsert: {
            args: Prisma.CvThequeCritereUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCriterePayload>
          }
          aggregate: {
            args: Prisma.CvThequeCritereAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvThequeCritere>
          }
          groupBy: {
            args: Prisma.CvThequeCritereGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvThequeCritereGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvThequeCritereCountArgs<ExtArgs>
            result: $Utils.Optional<CvThequeCritereCountAggregateOutputType> | number
          }
        }
      }
      CvThequeCompetence: {
        payload: Prisma.$CvThequeCompetencePayload<ExtArgs>
        fields: Prisma.CvThequeCompetenceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvThequeCompetenceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvThequeCompetenceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>
          }
          findFirst: {
            args: Prisma.CvThequeCompetenceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvThequeCompetenceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>
          }
          findMany: {
            args: Prisma.CvThequeCompetenceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>[]
          }
          create: {
            args: Prisma.CvThequeCompetenceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>
          }
          createMany: {
            args: Prisma.CvThequeCompetenceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvThequeCompetenceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>[]
          }
          delete: {
            args: Prisma.CvThequeCompetenceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>
          }
          update: {
            args: Prisma.CvThequeCompetenceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>
          }
          deleteMany: {
            args: Prisma.CvThequeCompetenceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvThequeCompetenceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvThequeCompetenceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>[]
          }
          upsert: {
            args: Prisma.CvThequeCompetenceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeCompetencePayload>
          }
          aggregate: {
            args: Prisma.CvThequeCompetenceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvThequeCompetence>
          }
          groupBy: {
            args: Prisma.CvThequeCompetenceGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvThequeCompetenceGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvThequeCompetenceCountArgs<ExtArgs>
            result: $Utils.Optional<CvThequeCompetenceCountAggregateOutputType> | number
          }
        }
      }
      CvThequeView: {
        payload: Prisma.$CvThequeViewPayload<ExtArgs>
        fields: Prisma.CvThequeViewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvThequeViewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvThequeViewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>
          }
          findFirst: {
            args: Prisma.CvThequeViewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvThequeViewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>
          }
          findMany: {
            args: Prisma.CvThequeViewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>[]
          }
          create: {
            args: Prisma.CvThequeViewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>
          }
          createMany: {
            args: Prisma.CvThequeViewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvThequeViewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>[]
          }
          delete: {
            args: Prisma.CvThequeViewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>
          }
          update: {
            args: Prisma.CvThequeViewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>
          }
          deleteMany: {
            args: Prisma.CvThequeViewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvThequeViewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvThequeViewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>[]
          }
          upsert: {
            args: Prisma.CvThequeViewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeViewPayload>
          }
          aggregate: {
            args: Prisma.CvThequeViewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvThequeView>
          }
          groupBy: {
            args: Prisma.CvThequeViewGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvThequeViewGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvThequeViewCountArgs<ExtArgs>
            result: $Utils.Optional<CvThequeViewCountAggregateOutputType> | number
          }
        }
      }
      CvThequeUser: {
        payload: Prisma.$CvThequeUserPayload<ExtArgs>
        fields: Prisma.CvThequeUserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvThequeUserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvThequeUserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>
          }
          findFirst: {
            args: Prisma.CvThequeUserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvThequeUserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>
          }
          findMany: {
            args: Prisma.CvThequeUserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>[]
          }
          create: {
            args: Prisma.CvThequeUserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>
          }
          createMany: {
            args: Prisma.CvThequeUserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvThequeUserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>[]
          }
          delete: {
            args: Prisma.CvThequeUserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>
          }
          update: {
            args: Prisma.CvThequeUserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>
          }
          deleteMany: {
            args: Prisma.CvThequeUserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvThequeUserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvThequeUserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>[]
          }
          upsert: {
            args: Prisma.CvThequeUserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeUserPayload>
          }
          aggregate: {
            args: Prisma.CvThequeUserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvThequeUser>
          }
          groupBy: {
            args: Prisma.CvThequeUserGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvThequeUserGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvThequeUserCountArgs<ExtArgs>
            result: $Utils.Optional<CvThequeUserCountAggregateOutputType> | number
          }
        }
      }
      CvThequeContact: {
        payload: Prisma.$CvThequeContactPayload<ExtArgs>
        fields: Prisma.CvThequeContactFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvThequeContactFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvThequeContactFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>
          }
          findFirst: {
            args: Prisma.CvThequeContactFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvThequeContactFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>
          }
          findMany: {
            args: Prisma.CvThequeContactFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>[]
          }
          create: {
            args: Prisma.CvThequeContactCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>
          }
          createMany: {
            args: Prisma.CvThequeContactCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvThequeContactCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>[]
          }
          delete: {
            args: Prisma.CvThequeContactDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>
          }
          update: {
            args: Prisma.CvThequeContactUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>
          }
          deleteMany: {
            args: Prisma.CvThequeContactDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvThequeContactUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvThequeContactUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>[]
          }
          upsert: {
            args: Prisma.CvThequeContactUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactPayload>
          }
          aggregate: {
            args: Prisma.CvThequeContactAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvThequeContact>
          }
          groupBy: {
            args: Prisma.CvThequeContactGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvThequeContactGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvThequeContactCountArgs<ExtArgs>
            result: $Utils.Optional<CvThequeContactCountAggregateOutputType> | number
          }
        }
      }
      CvThequeContactView: {
        payload: Prisma.$CvThequeContactViewPayload<ExtArgs>
        fields: Prisma.CvThequeContactViewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CvThequeContactViewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CvThequeContactViewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>
          }
          findFirst: {
            args: Prisma.CvThequeContactViewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CvThequeContactViewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>
          }
          findMany: {
            args: Prisma.CvThequeContactViewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>[]
          }
          create: {
            args: Prisma.CvThequeContactViewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>
          }
          createMany: {
            args: Prisma.CvThequeContactViewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CvThequeContactViewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>[]
          }
          delete: {
            args: Prisma.CvThequeContactViewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>
          }
          update: {
            args: Prisma.CvThequeContactViewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>
          }
          deleteMany: {
            args: Prisma.CvThequeContactViewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CvThequeContactViewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CvThequeContactViewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>[]
          }
          upsert: {
            args: Prisma.CvThequeContactViewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CvThequeContactViewPayload>
          }
          aggregate: {
            args: Prisma.CvThequeContactViewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCvThequeContactView>
          }
          groupBy: {
            args: Prisma.CvThequeContactViewGroupByArgs<ExtArgs>
            result: $Utils.Optional<CvThequeContactViewGroupByOutputType>[]
          }
          count: {
            args: Prisma.CvThequeContactViewCountArgs<ExtArgs>
            result: $Utils.Optional<CvThequeContactViewCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    file?: FileOmit
    cvMinute?: CvMinuteOmit
    cvMinuteDomain?: CvMinuteDomainOmit
    section?: SectionOmit
    cvMinuteSection?: CvMinuteSectionOmit
    sectionInfo?: SectionInfoOmit
    advice?: AdviceOmit
    evaluation?: EvaluationOmit
    openaiResponse?: OpenaiResponseOmit
    qualiCarriereQuestion?: QualiCarriereQuestionOmit
    qualiCarriereResponse?: QualiCarriereResponseOmit
    qualiCarriereResume?: QualiCarriereResumeOmit
    qualiCarriereCompetence?: QualiCarriereCompetenceOmit
    qualiCarriereChat?: QualiCarriereChatOmit
    cvThequeCritere?: CvThequeCritereOmit
    cvThequeCompetence?: CvThequeCompetenceOmit
    cvThequeView?: CvThequeViewOmit
    cvThequeUser?: CvThequeUserOmit
    cvThequeContact?: CvThequeContactOmit
    cvThequeContactView?: CvThequeContactViewOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    files: number
    cvMinutes: number
    cvMinuteDomains: number
    qualiCarriereQuestions: number
    qualiCarriereResponses: number
    openaiResponses: number
    qualiCarriereChat: number
    qualiCarriereResumes: number
    qualiCarriereCompetences: number
    cvThequeCriteres: number
    cvThequeUsers: number
    userCvThequeContacts: number
    recruiterCvThequeContacts: number
    cvThequeContactViews: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | UserCountOutputTypeCountFilesArgs
    cvMinutes?: boolean | UserCountOutputTypeCountCvMinutesArgs
    cvMinuteDomains?: boolean | UserCountOutputTypeCountCvMinuteDomainsArgs
    qualiCarriereQuestions?: boolean | UserCountOutputTypeCountQualiCarriereQuestionsArgs
    qualiCarriereResponses?: boolean | UserCountOutputTypeCountQualiCarriereResponsesArgs
    openaiResponses?: boolean | UserCountOutputTypeCountOpenaiResponsesArgs
    qualiCarriereChat?: boolean | UserCountOutputTypeCountQualiCarriereChatArgs
    qualiCarriereResumes?: boolean | UserCountOutputTypeCountQualiCarriereResumesArgs
    qualiCarriereCompetences?: boolean | UserCountOutputTypeCountQualiCarriereCompetencesArgs
    cvThequeCriteres?: boolean | UserCountOutputTypeCountCvThequeCriteresArgs
    cvThequeUsers?: boolean | UserCountOutputTypeCountCvThequeUsersArgs
    userCvThequeContacts?: boolean | UserCountOutputTypeCountUserCvThequeContactsArgs
    recruiterCvThequeContacts?: boolean | UserCountOutputTypeCountRecruiterCvThequeContactsArgs
    cvThequeContactViews?: boolean | UserCountOutputTypeCountCvThequeContactViewsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCvMinutesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCvMinuteDomainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteDomainWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountQualiCarriereQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereQuestionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountQualiCarriereResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereResponseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOpenaiResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpenaiResponseWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountQualiCarriereChatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereChatWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountQualiCarriereResumesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereResumeWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountQualiCarriereCompetencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereCompetenceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCvThequeCriteresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeCritereWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCvThequeUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeUserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserCvThequeContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeContactWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRecruiterCvThequeContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeContactWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCvThequeContactViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeContactViewWhereInput
  }


  /**
   * Count Type CvMinuteCountOutputType
   */

  export type CvMinuteCountOutputType = {
    files: number
    advices: number
    cvMinuteSections: number
    openaiResponses: number
    cvThequeViews: number
    cvMinuteDomains: number
    cvThequeContacts: number
  }

  export type CvMinuteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | CvMinuteCountOutputTypeCountFilesArgs
    advices?: boolean | CvMinuteCountOutputTypeCountAdvicesArgs
    cvMinuteSections?: boolean | CvMinuteCountOutputTypeCountCvMinuteSectionsArgs
    openaiResponses?: boolean | CvMinuteCountOutputTypeCountOpenaiResponsesArgs
    cvThequeViews?: boolean | CvMinuteCountOutputTypeCountCvThequeViewsArgs
    cvMinuteDomains?: boolean | CvMinuteCountOutputTypeCountCvMinuteDomainsArgs
    cvThequeContacts?: boolean | CvMinuteCountOutputTypeCountCvThequeContactsArgs
  }

  // Custom InputTypes
  /**
   * CvMinuteCountOutputType without action
   */
  export type CvMinuteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteCountOutputType
     */
    select?: CvMinuteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CvMinuteCountOutputType without action
   */
  export type CvMinuteCountOutputTypeCountFilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileWhereInput
  }

  /**
   * CvMinuteCountOutputType without action
   */
  export type CvMinuteCountOutputTypeCountAdvicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdviceWhereInput
  }

  /**
   * CvMinuteCountOutputType without action
   */
  export type CvMinuteCountOutputTypeCountCvMinuteSectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteSectionWhereInput
  }

  /**
   * CvMinuteCountOutputType without action
   */
  export type CvMinuteCountOutputTypeCountOpenaiResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpenaiResponseWhereInput
  }

  /**
   * CvMinuteCountOutputType without action
   */
  export type CvMinuteCountOutputTypeCountCvThequeViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeViewWhereInput
  }

  /**
   * CvMinuteCountOutputType without action
   */
  export type CvMinuteCountOutputTypeCountCvMinuteDomainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteDomainWhereInput
  }

  /**
   * CvMinuteCountOutputType without action
   */
  export type CvMinuteCountOutputTypeCountCvThequeContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeContactWhereInput
  }


  /**
   * Count Type SectionCountOutputType
   */

  export type SectionCountOutputType = {
    cvMinuteSections: number
  }

  export type SectionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinuteSections?: boolean | SectionCountOutputTypeCountCvMinuteSectionsArgs
  }

  // Custom InputTypes
  /**
   * SectionCountOutputType without action
   */
  export type SectionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionCountOutputType
     */
    select?: SectionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SectionCountOutputType without action
   */
  export type SectionCountOutputTypeCountCvMinuteSectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteSectionWhereInput
  }


  /**
   * Count Type CvMinuteSectionCountOutputType
   */

  export type CvMinuteSectionCountOutputType = {
    advices: number
    sectionInfos: number
  }

  export type CvMinuteSectionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    advices?: boolean | CvMinuteSectionCountOutputTypeCountAdvicesArgs
    sectionInfos?: boolean | CvMinuteSectionCountOutputTypeCountSectionInfosArgs
  }

  // Custom InputTypes
  /**
   * CvMinuteSectionCountOutputType without action
   */
  export type CvMinuteSectionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSectionCountOutputType
     */
    select?: CvMinuteSectionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CvMinuteSectionCountOutputType without action
   */
  export type CvMinuteSectionCountOutputTypeCountAdvicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdviceWhereInput
  }

  /**
   * CvMinuteSectionCountOutputType without action
   */
  export type CvMinuteSectionCountOutputTypeCountSectionInfosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SectionInfoWhereInput
  }


  /**
   * Count Type SectionInfoCountOutputType
   */

  export type SectionInfoCountOutputType = {
    advices: number
    qualiCarriereQuestions: number
    qualiCarriereResponses: number
    qualiCarriereResumes: number
    qualiCarriereCompetences: number
  }

  export type SectionInfoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    advices?: boolean | SectionInfoCountOutputTypeCountAdvicesArgs
    qualiCarriereQuestions?: boolean | SectionInfoCountOutputTypeCountQualiCarriereQuestionsArgs
    qualiCarriereResponses?: boolean | SectionInfoCountOutputTypeCountQualiCarriereResponsesArgs
    qualiCarriereResumes?: boolean | SectionInfoCountOutputTypeCountQualiCarriereResumesArgs
    qualiCarriereCompetences?: boolean | SectionInfoCountOutputTypeCountQualiCarriereCompetencesArgs
  }

  // Custom InputTypes
  /**
   * SectionInfoCountOutputType without action
   */
  export type SectionInfoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfoCountOutputType
     */
    select?: SectionInfoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SectionInfoCountOutputType without action
   */
  export type SectionInfoCountOutputTypeCountAdvicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdviceWhereInput
  }

  /**
   * SectionInfoCountOutputType without action
   */
  export type SectionInfoCountOutputTypeCountQualiCarriereQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereQuestionWhereInput
  }

  /**
   * SectionInfoCountOutputType without action
   */
  export type SectionInfoCountOutputTypeCountQualiCarriereResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereResponseWhereInput
  }

  /**
   * SectionInfoCountOutputType without action
   */
  export type SectionInfoCountOutputTypeCountQualiCarriereResumesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereResumeWhereInput
  }

  /**
   * SectionInfoCountOutputType without action
   */
  export type SectionInfoCountOutputTypeCountQualiCarriereCompetencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereCompetenceWhereInput
  }


  /**
   * Count Type CvThequeCritereCountOutputType
   */

  export type CvThequeCritereCountOutputType = {
    cvThequeCompetences: number
    cvThequeViews: number
    cvThequeUsers: number
    cvMinutes: number
    openaiResponses: number
  }

  export type CvThequeCritereCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvThequeCompetences?: boolean | CvThequeCritereCountOutputTypeCountCvThequeCompetencesArgs
    cvThequeViews?: boolean | CvThequeCritereCountOutputTypeCountCvThequeViewsArgs
    cvThequeUsers?: boolean | CvThequeCritereCountOutputTypeCountCvThequeUsersArgs
    cvMinutes?: boolean | CvThequeCritereCountOutputTypeCountCvMinutesArgs
    openaiResponses?: boolean | CvThequeCritereCountOutputTypeCountOpenaiResponsesArgs
  }

  // Custom InputTypes
  /**
   * CvThequeCritereCountOutputType without action
   */
  export type CvThequeCritereCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritereCountOutputType
     */
    select?: CvThequeCritereCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CvThequeCritereCountOutputType without action
   */
  export type CvThequeCritereCountOutputTypeCountCvThequeCompetencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeCompetenceWhereInput
  }

  /**
   * CvThequeCritereCountOutputType without action
   */
  export type CvThequeCritereCountOutputTypeCountCvThequeViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeViewWhereInput
  }

  /**
   * CvThequeCritereCountOutputType without action
   */
  export type CvThequeCritereCountOutputTypeCountCvThequeUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeUserWhereInput
  }

  /**
   * CvThequeCritereCountOutputType without action
   */
  export type CvThequeCritereCountOutputTypeCountCvMinutesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteWhereInput
  }

  /**
   * CvThequeCritereCountOutputType without action
   */
  export type CvThequeCritereCountOutputTypeCountOpenaiResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpenaiResponseWhereInput
  }


  /**
   * Count Type CvThequeContactCountOutputType
   */

  export type CvThequeContactCountOutputType = {
    cvThequeContactViews: number
  }

  export type CvThequeContactCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvThequeContactViews?: boolean | CvThequeContactCountOutputTypeCountCvThequeContactViewsArgs
  }

  // Custom InputTypes
  /**
   * CvThequeContactCountOutputType without action
   */
  export type CvThequeContactCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactCountOutputType
     */
    select?: CvThequeContactCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CvThequeContactCountOutputType without action
   */
  export type CvThequeContactCountOutputTypeCountCvThequeContactViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeContactViewWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    acceptConditions: boolean | null
    role: string | null
    qualiCarriere: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    acceptConditions: boolean | null
    role: string | null
    qualiCarriere: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    acceptConditions: number
    role: number
    qualiCarriere: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    acceptConditions?: true
    role?: true
    qualiCarriere?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    acceptConditions?: true
    role?: true
    qualiCarriere?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    acceptConditions?: true
    role?: true
    qualiCarriere?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    name: string
    email: string
    password: string
    acceptConditions: boolean
    role: string
    qualiCarriere: string
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    acceptConditions?: boolean
    role?: boolean
    qualiCarriere?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    files?: boolean | User$filesArgs<ExtArgs>
    cvMinutes?: boolean | User$cvMinutesArgs<ExtArgs>
    cvMinuteDomains?: boolean | User$cvMinuteDomainsArgs<ExtArgs>
    qualiCarriereQuestions?: boolean | User$qualiCarriereQuestionsArgs<ExtArgs>
    qualiCarriereResponses?: boolean | User$qualiCarriereResponsesArgs<ExtArgs>
    openaiResponses?: boolean | User$openaiResponsesArgs<ExtArgs>
    qualiCarriereChat?: boolean | User$qualiCarriereChatArgs<ExtArgs>
    qualiCarriereResumes?: boolean | User$qualiCarriereResumesArgs<ExtArgs>
    qualiCarriereCompetences?: boolean | User$qualiCarriereCompetencesArgs<ExtArgs>
    cvThequeCriteres?: boolean | User$cvThequeCriteresArgs<ExtArgs>
    cvThequeUsers?: boolean | User$cvThequeUsersArgs<ExtArgs>
    userCvThequeContacts?: boolean | User$userCvThequeContactsArgs<ExtArgs>
    recruiterCvThequeContacts?: boolean | User$recruiterCvThequeContactsArgs<ExtArgs>
    cvThequeContactViews?: boolean | User$cvThequeContactViewsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    acceptConditions?: boolean
    role?: boolean
    qualiCarriere?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    acceptConditions?: boolean
    role?: boolean
    qualiCarriere?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    acceptConditions?: boolean
    role?: boolean
    qualiCarriere?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password" | "acceptConditions" | "role" | "qualiCarriere" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | User$filesArgs<ExtArgs>
    cvMinutes?: boolean | User$cvMinutesArgs<ExtArgs>
    cvMinuteDomains?: boolean | User$cvMinuteDomainsArgs<ExtArgs>
    qualiCarriereQuestions?: boolean | User$qualiCarriereQuestionsArgs<ExtArgs>
    qualiCarriereResponses?: boolean | User$qualiCarriereResponsesArgs<ExtArgs>
    openaiResponses?: boolean | User$openaiResponsesArgs<ExtArgs>
    qualiCarriereChat?: boolean | User$qualiCarriereChatArgs<ExtArgs>
    qualiCarriereResumes?: boolean | User$qualiCarriereResumesArgs<ExtArgs>
    qualiCarriereCompetences?: boolean | User$qualiCarriereCompetencesArgs<ExtArgs>
    cvThequeCriteres?: boolean | User$cvThequeCriteresArgs<ExtArgs>
    cvThequeUsers?: boolean | User$cvThequeUsersArgs<ExtArgs>
    userCvThequeContacts?: boolean | User$userCvThequeContactsArgs<ExtArgs>
    recruiterCvThequeContacts?: boolean | User$recruiterCvThequeContactsArgs<ExtArgs>
    cvThequeContactViews?: boolean | User$cvThequeContactViewsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      files: Prisma.$FilePayload<ExtArgs>[]
      cvMinutes: Prisma.$CvMinutePayload<ExtArgs>[]
      cvMinuteDomains: Prisma.$CvMinuteDomainPayload<ExtArgs>[]
      qualiCarriereQuestions: Prisma.$QualiCarriereQuestionPayload<ExtArgs>[]
      qualiCarriereResponses: Prisma.$QualiCarriereResponsePayload<ExtArgs>[]
      openaiResponses: Prisma.$OpenaiResponsePayload<ExtArgs>[]
      qualiCarriereChat: Prisma.$QualiCarriereChatPayload<ExtArgs>[]
      qualiCarriereResumes: Prisma.$QualiCarriereResumePayload<ExtArgs>[]
      qualiCarriereCompetences: Prisma.$QualiCarriereCompetencePayload<ExtArgs>[]
      cvThequeCriteres: Prisma.$CvThequeCriterePayload<ExtArgs>[]
      cvThequeUsers: Prisma.$CvThequeUserPayload<ExtArgs>[]
      userCvThequeContacts: Prisma.$CvThequeContactPayload<ExtArgs>[]
      recruiterCvThequeContacts: Prisma.$CvThequeContactPayload<ExtArgs>[]
      cvThequeContactViews: Prisma.$CvThequeContactViewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      password: string
      acceptConditions: boolean
      role: string
      qualiCarriere: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    files<T extends User$filesArgs<ExtArgs> = {}>(args?: Subset<T, User$filesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvMinutes<T extends User$cvMinutesArgs<ExtArgs> = {}>(args?: Subset<T, User$cvMinutesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvMinuteDomains<T extends User$cvMinuteDomainsArgs<ExtArgs> = {}>(args?: Subset<T, User$cvMinuteDomainsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualiCarriereQuestions<T extends User$qualiCarriereQuestionsArgs<ExtArgs> = {}>(args?: Subset<T, User$qualiCarriereQuestionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualiCarriereResponses<T extends User$qualiCarriereResponsesArgs<ExtArgs> = {}>(args?: Subset<T, User$qualiCarriereResponsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    openaiResponses<T extends User$openaiResponsesArgs<ExtArgs> = {}>(args?: Subset<T, User$openaiResponsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualiCarriereChat<T extends User$qualiCarriereChatArgs<ExtArgs> = {}>(args?: Subset<T, User$qualiCarriereChatArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualiCarriereResumes<T extends User$qualiCarriereResumesArgs<ExtArgs> = {}>(args?: Subset<T, User$qualiCarriereResumesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualiCarriereCompetences<T extends User$qualiCarriereCompetencesArgs<ExtArgs> = {}>(args?: Subset<T, User$qualiCarriereCompetencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvThequeCriteres<T extends User$cvThequeCriteresArgs<ExtArgs> = {}>(args?: Subset<T, User$cvThequeCriteresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvThequeUsers<T extends User$cvThequeUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$cvThequeUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userCvThequeContacts<T extends User$userCvThequeContactsArgs<ExtArgs> = {}>(args?: Subset<T, User$userCvThequeContactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    recruiterCvThequeContacts<T extends User$recruiterCvThequeContactsArgs<ExtArgs> = {}>(args?: Subset<T, User$recruiterCvThequeContactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvThequeContactViews<T extends User$cvThequeContactViewsArgs<ExtArgs> = {}>(args?: Subset<T, User$cvThequeContactViewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly acceptConditions: FieldRef<"User", 'Boolean'>
    readonly role: FieldRef<"User", 'String'>
    readonly qualiCarriere: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.files
   */
  export type User$filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * User.cvMinutes
   */
  export type User$cvMinutesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    where?: CvMinuteWhereInput
    orderBy?: CvMinuteOrderByWithRelationInput | CvMinuteOrderByWithRelationInput[]
    cursor?: CvMinuteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvMinuteScalarFieldEnum | CvMinuteScalarFieldEnum[]
  }

  /**
   * User.cvMinuteDomains
   */
  export type User$cvMinuteDomainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    where?: CvMinuteDomainWhereInput
    orderBy?: CvMinuteDomainOrderByWithRelationInput | CvMinuteDomainOrderByWithRelationInput[]
    cursor?: CvMinuteDomainWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvMinuteDomainScalarFieldEnum | CvMinuteDomainScalarFieldEnum[]
  }

  /**
   * User.qualiCarriereQuestions
   */
  export type User$qualiCarriereQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    where?: QualiCarriereQuestionWhereInput
    orderBy?: QualiCarriereQuestionOrderByWithRelationInput | QualiCarriereQuestionOrderByWithRelationInput[]
    cursor?: QualiCarriereQuestionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereQuestionScalarFieldEnum | QualiCarriereQuestionScalarFieldEnum[]
  }

  /**
   * User.qualiCarriereResponses
   */
  export type User$qualiCarriereResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    where?: QualiCarriereResponseWhereInput
    orderBy?: QualiCarriereResponseOrderByWithRelationInput | QualiCarriereResponseOrderByWithRelationInput[]
    cursor?: QualiCarriereResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereResponseScalarFieldEnum | QualiCarriereResponseScalarFieldEnum[]
  }

  /**
   * User.openaiResponses
   */
  export type User$openaiResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    where?: OpenaiResponseWhereInput
    orderBy?: OpenaiResponseOrderByWithRelationInput | OpenaiResponseOrderByWithRelationInput[]
    cursor?: OpenaiResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpenaiResponseScalarFieldEnum | OpenaiResponseScalarFieldEnum[]
  }

  /**
   * User.qualiCarriereChat
   */
  export type User$qualiCarriereChatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    where?: QualiCarriereChatWhereInput
    orderBy?: QualiCarriereChatOrderByWithRelationInput | QualiCarriereChatOrderByWithRelationInput[]
    cursor?: QualiCarriereChatWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereChatScalarFieldEnum | QualiCarriereChatScalarFieldEnum[]
  }

  /**
   * User.qualiCarriereResumes
   */
  export type User$qualiCarriereResumesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    where?: QualiCarriereResumeWhereInput
    orderBy?: QualiCarriereResumeOrderByWithRelationInput | QualiCarriereResumeOrderByWithRelationInput[]
    cursor?: QualiCarriereResumeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereResumeScalarFieldEnum | QualiCarriereResumeScalarFieldEnum[]
  }

  /**
   * User.qualiCarriereCompetences
   */
  export type User$qualiCarriereCompetencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    where?: QualiCarriereCompetenceWhereInput
    orderBy?: QualiCarriereCompetenceOrderByWithRelationInput | QualiCarriereCompetenceOrderByWithRelationInput[]
    cursor?: QualiCarriereCompetenceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereCompetenceScalarFieldEnum | QualiCarriereCompetenceScalarFieldEnum[]
  }

  /**
   * User.cvThequeCriteres
   */
  export type User$cvThequeCriteresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    where?: CvThequeCritereWhereInput
    orderBy?: CvThequeCritereOrderByWithRelationInput | CvThequeCritereOrderByWithRelationInput[]
    cursor?: CvThequeCritereWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeCritereScalarFieldEnum | CvThequeCritereScalarFieldEnum[]
  }

  /**
   * User.cvThequeUsers
   */
  export type User$cvThequeUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    where?: CvThequeUserWhereInput
    orderBy?: CvThequeUserOrderByWithRelationInput | CvThequeUserOrderByWithRelationInput[]
    cursor?: CvThequeUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeUserScalarFieldEnum | CvThequeUserScalarFieldEnum[]
  }

  /**
   * User.userCvThequeContacts
   */
  export type User$userCvThequeContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    where?: CvThequeContactWhereInput
    orderBy?: CvThequeContactOrderByWithRelationInput | CvThequeContactOrderByWithRelationInput[]
    cursor?: CvThequeContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeContactScalarFieldEnum | CvThequeContactScalarFieldEnum[]
  }

  /**
   * User.recruiterCvThequeContacts
   */
  export type User$recruiterCvThequeContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    where?: CvThequeContactWhereInput
    orderBy?: CvThequeContactOrderByWithRelationInput | CvThequeContactOrderByWithRelationInput[]
    cursor?: CvThequeContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeContactScalarFieldEnum | CvThequeContactScalarFieldEnum[]
  }

  /**
   * User.cvThequeContactViews
   */
  export type User$cvThequeContactViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    where?: CvThequeContactViewWhereInput
    orderBy?: CvThequeContactViewOrderByWithRelationInput | CvThequeContactViewOrderByWithRelationInput[]
    cursor?: CvThequeContactViewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeContactViewScalarFieldEnum | CvThequeContactViewScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model File
   */

  export type AggregateFile = {
    _count: FileCountAggregateOutputType | null
    _avg: FileAvgAggregateOutputType | null
    _sum: FileSumAggregateOutputType | null
    _min: FileMinAggregateOutputType | null
    _max: FileMaxAggregateOutputType | null
  }

  export type FileAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    cvMinuteId: number | null
    sectionInfoId: number | null
  }

  export type FileSumAggregateOutputType = {
    id: number | null
    userId: number | null
    cvMinuteId: number | null
    sectionInfoId: number | null
  }

  export type FileMinAggregateOutputType = {
    id: number | null
    name: string | null
    originalName: string | null
    extension: string | null
    usage: string | null
    userId: number | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FileMaxAggregateOutputType = {
    id: number | null
    name: string | null
    originalName: string | null
    extension: string | null
    usage: string | null
    userId: number | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FileCountAggregateOutputType = {
    id: number
    name: number
    originalName: number
    extension: number
    usage: number
    userId: number
    cvMinuteId: number
    sectionInfoId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FileAvgAggregateInputType = {
    id?: true
    userId?: true
    cvMinuteId?: true
    sectionInfoId?: true
  }

  export type FileSumAggregateInputType = {
    id?: true
    userId?: true
    cvMinuteId?: true
    sectionInfoId?: true
  }

  export type FileMinAggregateInputType = {
    id?: true
    name?: true
    originalName?: true
    extension?: true
    usage?: true
    userId?: true
    cvMinuteId?: true
    sectionInfoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FileMaxAggregateInputType = {
    id?: true
    name?: true
    originalName?: true
    extension?: true
    usage?: true
    userId?: true
    cvMinuteId?: true
    sectionInfoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FileCountAggregateInputType = {
    id?: true
    name?: true
    originalName?: true
    extension?: true
    usage?: true
    userId?: true
    cvMinuteId?: true
    sectionInfoId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which File to aggregate.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Files
    **/
    _count?: true | FileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FileMaxAggregateInputType
  }

  export type GetFileAggregateType<T extends FileAggregateArgs> = {
        [P in keyof T & keyof AggregateFile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFile[P]>
      : GetScalarType<T[P], AggregateFile[P]>
  }




  export type FileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileWhereInput
    orderBy?: FileOrderByWithAggregationInput | FileOrderByWithAggregationInput[]
    by: FileScalarFieldEnum[] | FileScalarFieldEnum
    having?: FileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FileCountAggregateInputType | true
    _avg?: FileAvgAggregateInputType
    _sum?: FileSumAggregateInputType
    _min?: FileMinAggregateInputType
    _max?: FileMaxAggregateInputType
  }

  export type FileGroupByOutputType = {
    id: number
    name: string
    originalName: string
    extension: string
    usage: string
    userId: number
    cvMinuteId: number | null
    sectionInfoId: number | null
    createdAt: Date
    updatedAt: Date
    _count: FileCountAggregateOutputType | null
    _avg: FileAvgAggregateOutputType | null
    _sum: FileSumAggregateOutputType | null
    _min: FileMinAggregateOutputType | null
    _max: FileMaxAggregateOutputType | null
  }

  type GetFileGroupByPayload<T extends FileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FileGroupByOutputType[P]>
            : GetScalarType<T[P], FileGroupByOutputType[P]>
        }
      >
    >


  export type FileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    originalName?: boolean
    extension?: boolean
    usage?: boolean
    userId?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | File$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | File$sectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["file"]>

  export type FileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    originalName?: boolean
    extension?: boolean
    usage?: boolean
    userId?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | File$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | File$sectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["file"]>

  export type FileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    originalName?: boolean
    extension?: boolean
    usage?: boolean
    userId?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | File$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | File$sectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["file"]>

  export type FileSelectScalar = {
    id?: boolean
    name?: boolean
    originalName?: boolean
    extension?: boolean
    usage?: boolean
    userId?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "originalName" | "extension" | "usage" | "userId" | "cvMinuteId" | "sectionInfoId" | "createdAt" | "updatedAt", ExtArgs["result"]["file"]>
  export type FileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | File$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | File$sectionInfoArgs<ExtArgs>
  }
  export type FileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | File$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | File$sectionInfoArgs<ExtArgs>
  }
  export type FileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | File$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | File$sectionInfoArgs<ExtArgs>
  }

  export type $FilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "File"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      cvMinute: Prisma.$CvMinutePayload<ExtArgs> | null
      sectionInfo: Prisma.$SectionInfoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      originalName: string
      extension: string
      usage: string
      userId: number
      cvMinuteId: number | null
      sectionInfoId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["file"]>
    composites: {}
  }

  type FileGetPayload<S extends boolean | null | undefined | FileDefaultArgs> = $Result.GetResult<Prisma.$FilePayload, S>

  type FileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FileCountAggregateInputType | true
    }

  export interface FileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['File'], meta: { name: 'File' } }
    /**
     * Find zero or one File that matches the filter.
     * @param {FileFindUniqueArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FileFindUniqueArgs>(args: SelectSubset<T, FileFindUniqueArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one File that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FileFindUniqueOrThrowArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FileFindUniqueOrThrowArgs>(args: SelectSubset<T, FileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first File that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindFirstArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FileFindFirstArgs>(args?: SelectSubset<T, FileFindFirstArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first File that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindFirstOrThrowArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FileFindFirstOrThrowArgs>(args?: SelectSubset<T, FileFindFirstOrThrowArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Files
     * const files = await prisma.file.findMany()
     * 
     * // Get first 10 Files
     * const files = await prisma.file.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fileWithIdOnly = await prisma.file.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FileFindManyArgs>(args?: SelectSubset<T, FileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a File.
     * @param {FileCreateArgs} args - Arguments to create a File.
     * @example
     * // Create one File
     * const File = await prisma.file.create({
     *   data: {
     *     // ... data to create a File
     *   }
     * })
     * 
     */
    create<T extends FileCreateArgs>(args: SelectSubset<T, FileCreateArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Files.
     * @param {FileCreateManyArgs} args - Arguments to create many Files.
     * @example
     * // Create many Files
     * const file = await prisma.file.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FileCreateManyArgs>(args?: SelectSubset<T, FileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Files and returns the data saved in the database.
     * @param {FileCreateManyAndReturnArgs} args - Arguments to create many Files.
     * @example
     * // Create many Files
     * const file = await prisma.file.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Files and only return the `id`
     * const fileWithIdOnly = await prisma.file.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FileCreateManyAndReturnArgs>(args?: SelectSubset<T, FileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a File.
     * @param {FileDeleteArgs} args - Arguments to delete one File.
     * @example
     * // Delete one File
     * const File = await prisma.file.delete({
     *   where: {
     *     // ... filter to delete one File
     *   }
     * })
     * 
     */
    delete<T extends FileDeleteArgs>(args: SelectSubset<T, FileDeleteArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one File.
     * @param {FileUpdateArgs} args - Arguments to update one File.
     * @example
     * // Update one File
     * const file = await prisma.file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FileUpdateArgs>(args: SelectSubset<T, FileUpdateArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Files.
     * @param {FileDeleteManyArgs} args - Arguments to filter Files to delete.
     * @example
     * // Delete a few Files
     * const { count } = await prisma.file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FileDeleteManyArgs>(args?: SelectSubset<T, FileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Files
     * const file = await prisma.file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FileUpdateManyArgs>(args: SelectSubset<T, FileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files and returns the data updated in the database.
     * @param {FileUpdateManyAndReturnArgs} args - Arguments to update many Files.
     * @example
     * // Update many Files
     * const file = await prisma.file.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Files and only return the `id`
     * const fileWithIdOnly = await prisma.file.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FileUpdateManyAndReturnArgs>(args: SelectSubset<T, FileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one File.
     * @param {FileUpsertArgs} args - Arguments to update or create a File.
     * @example
     * // Update or create a File
     * const file = await prisma.file.upsert({
     *   create: {
     *     // ... data to create a File
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the File we want to update
     *   }
     * })
     */
    upsert<T extends FileUpsertArgs>(args: SelectSubset<T, FileUpsertArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileCountArgs} args - Arguments to filter Files to count.
     * @example
     * // Count the number of Files
     * const count = await prisma.file.count({
     *   where: {
     *     // ... the filter for the Files we want to count
     *   }
     * })
    **/
    count<T extends FileCountArgs>(
      args?: Subset<T, FileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a File.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FileAggregateArgs>(args: Subset<T, FileAggregateArgs>): Prisma.PrismaPromise<GetFileAggregateType<T>>

    /**
     * Group by File.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FileGroupByArgs['orderBy'] }
        : { orderBy?: FileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the File model
   */
  readonly fields: FileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for File.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvMinute<T extends File$cvMinuteArgs<ExtArgs> = {}>(args?: Subset<T, File$cvMinuteArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sectionInfo<T extends File$sectionInfoArgs<ExtArgs> = {}>(args?: Subset<T, File$sectionInfoArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the File model
   */
  interface FileFieldRefs {
    readonly id: FieldRef<"File", 'Int'>
    readonly name: FieldRef<"File", 'String'>
    readonly originalName: FieldRef<"File", 'String'>
    readonly extension: FieldRef<"File", 'String'>
    readonly usage: FieldRef<"File", 'String'>
    readonly userId: FieldRef<"File", 'Int'>
    readonly cvMinuteId: FieldRef<"File", 'Int'>
    readonly sectionInfoId: FieldRef<"File", 'Int'>
    readonly createdAt: FieldRef<"File", 'DateTime'>
    readonly updatedAt: FieldRef<"File", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * File findUnique
   */
  export type FileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File findUniqueOrThrow
   */
  export type FileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File findFirst
   */
  export type FileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     */
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File findFirstOrThrow
   */
  export type FileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     */
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File findMany
   */
  export type FileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which Files to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File create
   */
  export type FileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * The data needed to create a File.
     */
    data: XOR<FileCreateInput, FileUncheckedCreateInput>
  }

  /**
   * File createMany
   */
  export type FileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Files.
     */
    data: FileCreateManyInput | FileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * File createManyAndReturn
   */
  export type FileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * The data used to create many Files.
     */
    data: FileCreateManyInput | FileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * File update
   */
  export type FileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * The data needed to update a File.
     */
    data: XOR<FileUpdateInput, FileUncheckedUpdateInput>
    /**
     * Choose, which File to update.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File updateMany
   */
  export type FileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Files.
     */
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyInput>
    /**
     * Filter which Files to update
     */
    where?: FileWhereInput
    /**
     * Limit how many Files to update.
     */
    limit?: number
  }

  /**
   * File updateManyAndReturn
   */
  export type FileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * The data used to update Files.
     */
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyInput>
    /**
     * Filter which Files to update
     */
    where?: FileWhereInput
    /**
     * Limit how many Files to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * File upsert
   */
  export type FileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * The filter to search for the File to update in case it exists.
     */
    where: FileWhereUniqueInput
    /**
     * In case the File found by the `where` argument doesn't exist, create a new File with this data.
     */
    create: XOR<FileCreateInput, FileUncheckedCreateInput>
    /**
     * In case the File was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FileUpdateInput, FileUncheckedUpdateInput>
  }

  /**
   * File delete
   */
  export type FileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter which File to delete.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File deleteMany
   */
  export type FileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Files to delete
     */
    where?: FileWhereInput
    /**
     * Limit how many Files to delete.
     */
    limit?: number
  }

  /**
   * File.cvMinute
   */
  export type File$cvMinuteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    where?: CvMinuteWhereInput
  }

  /**
   * File.sectionInfo
   */
  export type File$sectionInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    where?: SectionInfoWhereInput
  }

  /**
   * File without action
   */
  export type FileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
  }


  /**
   * Model CvMinute
   */

  export type AggregateCvMinute = {
    _count: CvMinuteCountAggregateOutputType | null
    _avg: CvMinuteAvgAggregateOutputType | null
    _sum: CvMinuteSumAggregateOutputType | null
    _min: CvMinuteMinAggregateOutputType | null
    _max: CvMinuteMaxAggregateOutputType | null
  }

  export type CvMinuteAvgAggregateOutputType = {
    id: number | null
    score: number | null
    userId: number | null
    cvThequeCritereId: number | null
  }

  export type CvMinuteSumAggregateOutputType = {
    id: number | null
    score: number | null
    userId: number | null
    cvThequeCritereId: number | null
  }

  export type CvMinuteMinAggregateOutputType = {
    id: number | null
    name: string | null
    position: string | null
    primaryBg: string | null
    secondaryBg: string | null
    tertiaryBg: string | null
    visible: boolean | null
    qualiCarriereRef: boolean | null
    generated: string | null
    score: number | null
    userId: number | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvMinuteMaxAggregateOutputType = {
    id: number | null
    name: string | null
    position: string | null
    primaryBg: string | null
    secondaryBg: string | null
    tertiaryBg: string | null
    visible: boolean | null
    qualiCarriereRef: boolean | null
    generated: string | null
    score: number | null
    userId: number | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvMinuteCountAggregateOutputType = {
    id: number
    name: number
    position: number
    primaryBg: number
    secondaryBg: number
    tertiaryBg: number
    visible: number
    qualiCarriereRef: number
    generated: number
    score: number
    userId: number
    cvThequeCritereId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CvMinuteAvgAggregateInputType = {
    id?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
  }

  export type CvMinuteSumAggregateInputType = {
    id?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
  }

  export type CvMinuteMinAggregateInputType = {
    id?: true
    name?: true
    position?: true
    primaryBg?: true
    secondaryBg?: true
    tertiaryBg?: true
    visible?: true
    qualiCarriereRef?: true
    generated?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvMinuteMaxAggregateInputType = {
    id?: true
    name?: true
    position?: true
    primaryBg?: true
    secondaryBg?: true
    tertiaryBg?: true
    visible?: true
    qualiCarriereRef?: true
    generated?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvMinuteCountAggregateInputType = {
    id?: true
    name?: true
    position?: true
    primaryBg?: true
    secondaryBg?: true
    tertiaryBg?: true
    visible?: true
    qualiCarriereRef?: true
    generated?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CvMinuteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvMinute to aggregate.
     */
    where?: CvMinuteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinutes to fetch.
     */
    orderBy?: CvMinuteOrderByWithRelationInput | CvMinuteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvMinuteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvMinutes
    **/
    _count?: true | CvMinuteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvMinuteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvMinuteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvMinuteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvMinuteMaxAggregateInputType
  }

  export type GetCvMinuteAggregateType<T extends CvMinuteAggregateArgs> = {
        [P in keyof T & keyof AggregateCvMinute]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvMinute[P]>
      : GetScalarType<T[P], AggregateCvMinute[P]>
  }




  export type CvMinuteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteWhereInput
    orderBy?: CvMinuteOrderByWithAggregationInput | CvMinuteOrderByWithAggregationInput[]
    by: CvMinuteScalarFieldEnum[] | CvMinuteScalarFieldEnum
    having?: CvMinuteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvMinuteCountAggregateInputType | true
    _avg?: CvMinuteAvgAggregateInputType
    _sum?: CvMinuteSumAggregateInputType
    _min?: CvMinuteMinAggregateInputType
    _max?: CvMinuteMaxAggregateInputType
  }

  export type CvMinuteGroupByOutputType = {
    id: number
    name: string
    position: string
    primaryBg: string
    secondaryBg: string
    tertiaryBg: string
    visible: boolean
    qualiCarriereRef: boolean
    generated: string | null
    score: number
    userId: number
    cvThequeCritereId: number | null
    createdAt: Date
    updatedAt: Date
    _count: CvMinuteCountAggregateOutputType | null
    _avg: CvMinuteAvgAggregateOutputType | null
    _sum: CvMinuteSumAggregateOutputType | null
    _min: CvMinuteMinAggregateOutputType | null
    _max: CvMinuteMaxAggregateOutputType | null
  }

  type GetCvMinuteGroupByPayload<T extends CvMinuteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvMinuteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvMinuteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvMinuteGroupByOutputType[P]>
            : GetScalarType<T[P], CvMinuteGroupByOutputType[P]>
        }
      >
    >


  export type CvMinuteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    position?: boolean
    primaryBg?: boolean
    secondaryBg?: boolean
    tertiaryBg?: boolean
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: boolean
    score?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvMinute$cvThequeCritereArgs<ExtArgs>
    files?: boolean | CvMinute$filesArgs<ExtArgs>
    advices?: boolean | CvMinute$advicesArgs<ExtArgs>
    cvMinuteSections?: boolean | CvMinute$cvMinuteSectionsArgs<ExtArgs>
    openaiResponses?: boolean | CvMinute$openaiResponsesArgs<ExtArgs>
    evaluation?: boolean | CvMinute$evaluationArgs<ExtArgs>
    cvThequeViews?: boolean | CvMinute$cvThequeViewsArgs<ExtArgs>
    cvMinuteDomains?: boolean | CvMinute$cvMinuteDomainsArgs<ExtArgs>
    cvThequeContacts?: boolean | CvMinute$cvThequeContactsArgs<ExtArgs>
    _count?: boolean | CvMinuteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinute"]>

  export type CvMinuteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    position?: boolean
    primaryBg?: boolean
    secondaryBg?: boolean
    tertiaryBg?: boolean
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: boolean
    score?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvMinute$cvThequeCritereArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinute"]>

  export type CvMinuteSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    position?: boolean
    primaryBg?: boolean
    secondaryBg?: boolean
    tertiaryBg?: boolean
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: boolean
    score?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvMinute$cvThequeCritereArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinute"]>

  export type CvMinuteSelectScalar = {
    id?: boolean
    name?: boolean
    position?: boolean
    primaryBg?: boolean
    secondaryBg?: boolean
    tertiaryBg?: boolean
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: boolean
    score?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CvMinuteOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "position" | "primaryBg" | "secondaryBg" | "tertiaryBg" | "visible" | "qualiCarriereRef" | "generated" | "score" | "userId" | "cvThequeCritereId" | "createdAt" | "updatedAt", ExtArgs["result"]["cvMinute"]>
  export type CvMinuteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvMinute$cvThequeCritereArgs<ExtArgs>
    files?: boolean | CvMinute$filesArgs<ExtArgs>
    advices?: boolean | CvMinute$advicesArgs<ExtArgs>
    cvMinuteSections?: boolean | CvMinute$cvMinuteSectionsArgs<ExtArgs>
    openaiResponses?: boolean | CvMinute$openaiResponsesArgs<ExtArgs>
    evaluation?: boolean | CvMinute$evaluationArgs<ExtArgs>
    cvThequeViews?: boolean | CvMinute$cvThequeViewsArgs<ExtArgs>
    cvMinuteDomains?: boolean | CvMinute$cvMinuteDomainsArgs<ExtArgs>
    cvThequeContacts?: boolean | CvMinute$cvThequeContactsArgs<ExtArgs>
    _count?: boolean | CvMinuteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CvMinuteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvMinute$cvThequeCritereArgs<ExtArgs>
  }
  export type CvMinuteIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvMinute$cvThequeCritereArgs<ExtArgs>
  }

  export type $CvMinutePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvMinute"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      cvThequeCritere: Prisma.$CvThequeCriterePayload<ExtArgs> | null
      files: Prisma.$FilePayload<ExtArgs>[]
      advices: Prisma.$AdvicePayload<ExtArgs>[]
      cvMinuteSections: Prisma.$CvMinuteSectionPayload<ExtArgs>[]
      openaiResponses: Prisma.$OpenaiResponsePayload<ExtArgs>[]
      evaluation: Prisma.$EvaluationPayload<ExtArgs> | null
      cvThequeViews: Prisma.$CvThequeViewPayload<ExtArgs>[]
      cvMinuteDomains: Prisma.$CvMinuteDomainPayload<ExtArgs>[]
      cvThequeContacts: Prisma.$CvThequeContactPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      position: string
      primaryBg: string
      secondaryBg: string
      tertiaryBg: string
      visible: boolean
      qualiCarriereRef: boolean
      generated: string | null
      score: number
      userId: number
      cvThequeCritereId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cvMinute"]>
    composites: {}
  }

  type CvMinuteGetPayload<S extends boolean | null | undefined | CvMinuteDefaultArgs> = $Result.GetResult<Prisma.$CvMinutePayload, S>

  type CvMinuteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvMinuteFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvMinuteCountAggregateInputType | true
    }

  export interface CvMinuteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvMinute'], meta: { name: 'CvMinute' } }
    /**
     * Find zero or one CvMinute that matches the filter.
     * @param {CvMinuteFindUniqueArgs} args - Arguments to find a CvMinute
     * @example
     * // Get one CvMinute
     * const cvMinute = await prisma.cvMinute.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvMinuteFindUniqueArgs>(args: SelectSubset<T, CvMinuteFindUniqueArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvMinute that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvMinuteFindUniqueOrThrowArgs} args - Arguments to find a CvMinute
     * @example
     * // Get one CvMinute
     * const cvMinute = await prisma.cvMinute.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvMinuteFindUniqueOrThrowArgs>(args: SelectSubset<T, CvMinuteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvMinute that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteFindFirstArgs} args - Arguments to find a CvMinute
     * @example
     * // Get one CvMinute
     * const cvMinute = await prisma.cvMinute.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvMinuteFindFirstArgs>(args?: SelectSubset<T, CvMinuteFindFirstArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvMinute that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteFindFirstOrThrowArgs} args - Arguments to find a CvMinute
     * @example
     * // Get one CvMinute
     * const cvMinute = await prisma.cvMinute.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvMinuteFindFirstOrThrowArgs>(args?: SelectSubset<T, CvMinuteFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvMinutes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvMinutes
     * const cvMinutes = await prisma.cvMinute.findMany()
     * 
     * // Get first 10 CvMinutes
     * const cvMinutes = await prisma.cvMinute.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvMinuteWithIdOnly = await prisma.cvMinute.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvMinuteFindManyArgs>(args?: SelectSubset<T, CvMinuteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvMinute.
     * @param {CvMinuteCreateArgs} args - Arguments to create a CvMinute.
     * @example
     * // Create one CvMinute
     * const CvMinute = await prisma.cvMinute.create({
     *   data: {
     *     // ... data to create a CvMinute
     *   }
     * })
     * 
     */
    create<T extends CvMinuteCreateArgs>(args: SelectSubset<T, CvMinuteCreateArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvMinutes.
     * @param {CvMinuteCreateManyArgs} args - Arguments to create many CvMinutes.
     * @example
     * // Create many CvMinutes
     * const cvMinute = await prisma.cvMinute.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvMinuteCreateManyArgs>(args?: SelectSubset<T, CvMinuteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvMinutes and returns the data saved in the database.
     * @param {CvMinuteCreateManyAndReturnArgs} args - Arguments to create many CvMinutes.
     * @example
     * // Create many CvMinutes
     * const cvMinute = await prisma.cvMinute.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvMinutes and only return the `id`
     * const cvMinuteWithIdOnly = await prisma.cvMinute.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvMinuteCreateManyAndReturnArgs>(args?: SelectSubset<T, CvMinuteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvMinute.
     * @param {CvMinuteDeleteArgs} args - Arguments to delete one CvMinute.
     * @example
     * // Delete one CvMinute
     * const CvMinute = await prisma.cvMinute.delete({
     *   where: {
     *     // ... filter to delete one CvMinute
     *   }
     * })
     * 
     */
    delete<T extends CvMinuteDeleteArgs>(args: SelectSubset<T, CvMinuteDeleteArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvMinute.
     * @param {CvMinuteUpdateArgs} args - Arguments to update one CvMinute.
     * @example
     * // Update one CvMinute
     * const cvMinute = await prisma.cvMinute.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvMinuteUpdateArgs>(args: SelectSubset<T, CvMinuteUpdateArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvMinutes.
     * @param {CvMinuteDeleteManyArgs} args - Arguments to filter CvMinutes to delete.
     * @example
     * // Delete a few CvMinutes
     * const { count } = await prisma.cvMinute.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvMinuteDeleteManyArgs>(args?: SelectSubset<T, CvMinuteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvMinutes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvMinutes
     * const cvMinute = await prisma.cvMinute.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvMinuteUpdateManyArgs>(args: SelectSubset<T, CvMinuteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvMinutes and returns the data updated in the database.
     * @param {CvMinuteUpdateManyAndReturnArgs} args - Arguments to update many CvMinutes.
     * @example
     * // Update many CvMinutes
     * const cvMinute = await prisma.cvMinute.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvMinutes and only return the `id`
     * const cvMinuteWithIdOnly = await prisma.cvMinute.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvMinuteUpdateManyAndReturnArgs>(args: SelectSubset<T, CvMinuteUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvMinute.
     * @param {CvMinuteUpsertArgs} args - Arguments to update or create a CvMinute.
     * @example
     * // Update or create a CvMinute
     * const cvMinute = await prisma.cvMinute.upsert({
     *   create: {
     *     // ... data to create a CvMinute
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvMinute we want to update
     *   }
     * })
     */
    upsert<T extends CvMinuteUpsertArgs>(args: SelectSubset<T, CvMinuteUpsertArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvMinutes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteCountArgs} args - Arguments to filter CvMinutes to count.
     * @example
     * // Count the number of CvMinutes
     * const count = await prisma.cvMinute.count({
     *   where: {
     *     // ... the filter for the CvMinutes we want to count
     *   }
     * })
    **/
    count<T extends CvMinuteCountArgs>(
      args?: Subset<T, CvMinuteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvMinuteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvMinute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvMinuteAggregateArgs>(args: Subset<T, CvMinuteAggregateArgs>): Prisma.PrismaPromise<GetCvMinuteAggregateType<T>>

    /**
     * Group by CvMinute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvMinuteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvMinuteGroupByArgs['orderBy'] }
        : { orderBy?: CvMinuteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvMinuteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvMinuteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvMinute model
   */
  readonly fields: CvMinuteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvMinute.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvMinuteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvThequeCritere<T extends CvMinute$cvThequeCritereArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$cvThequeCritereArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    files<T extends CvMinute$filesArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$filesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    advices<T extends CvMinute$advicesArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$advicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvMinuteSections<T extends CvMinute$cvMinuteSectionsArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$cvMinuteSectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    openaiResponses<T extends CvMinute$openaiResponsesArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$openaiResponsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    evaluation<T extends CvMinute$evaluationArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$evaluationArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cvThequeViews<T extends CvMinute$cvThequeViewsArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$cvThequeViewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvMinuteDomains<T extends CvMinute$cvMinuteDomainsArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$cvMinuteDomainsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvThequeContacts<T extends CvMinute$cvThequeContactsArgs<ExtArgs> = {}>(args?: Subset<T, CvMinute$cvThequeContactsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvMinute model
   */
  interface CvMinuteFieldRefs {
    readonly id: FieldRef<"CvMinute", 'Int'>
    readonly name: FieldRef<"CvMinute", 'String'>
    readonly position: FieldRef<"CvMinute", 'String'>
    readonly primaryBg: FieldRef<"CvMinute", 'String'>
    readonly secondaryBg: FieldRef<"CvMinute", 'String'>
    readonly tertiaryBg: FieldRef<"CvMinute", 'String'>
    readonly visible: FieldRef<"CvMinute", 'Boolean'>
    readonly qualiCarriereRef: FieldRef<"CvMinute", 'Boolean'>
    readonly generated: FieldRef<"CvMinute", 'String'>
    readonly score: FieldRef<"CvMinute", 'Int'>
    readonly userId: FieldRef<"CvMinute", 'Int'>
    readonly cvThequeCritereId: FieldRef<"CvMinute", 'Int'>
    readonly createdAt: FieldRef<"CvMinute", 'DateTime'>
    readonly updatedAt: FieldRef<"CvMinute", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CvMinute findUnique
   */
  export type CvMinuteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * Filter, which CvMinute to fetch.
     */
    where: CvMinuteWhereUniqueInput
  }

  /**
   * CvMinute findUniqueOrThrow
   */
  export type CvMinuteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * Filter, which CvMinute to fetch.
     */
    where: CvMinuteWhereUniqueInput
  }

  /**
   * CvMinute findFirst
   */
  export type CvMinuteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * Filter, which CvMinute to fetch.
     */
    where?: CvMinuteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinutes to fetch.
     */
    orderBy?: CvMinuteOrderByWithRelationInput | CvMinuteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvMinutes.
     */
    cursor?: CvMinuteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvMinutes.
     */
    distinct?: CvMinuteScalarFieldEnum | CvMinuteScalarFieldEnum[]
  }

  /**
   * CvMinute findFirstOrThrow
   */
  export type CvMinuteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * Filter, which CvMinute to fetch.
     */
    where?: CvMinuteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinutes to fetch.
     */
    orderBy?: CvMinuteOrderByWithRelationInput | CvMinuteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvMinutes.
     */
    cursor?: CvMinuteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinutes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvMinutes.
     */
    distinct?: CvMinuteScalarFieldEnum | CvMinuteScalarFieldEnum[]
  }

  /**
   * CvMinute findMany
   */
  export type CvMinuteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * Filter, which CvMinutes to fetch.
     */
    where?: CvMinuteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinutes to fetch.
     */
    orderBy?: CvMinuteOrderByWithRelationInput | CvMinuteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvMinutes.
     */
    cursor?: CvMinuteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinutes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinutes.
     */
    skip?: number
    distinct?: CvMinuteScalarFieldEnum | CvMinuteScalarFieldEnum[]
  }

  /**
   * CvMinute create
   */
  export type CvMinuteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * The data needed to create a CvMinute.
     */
    data: XOR<CvMinuteCreateInput, CvMinuteUncheckedCreateInput>
  }

  /**
   * CvMinute createMany
   */
  export type CvMinuteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvMinutes.
     */
    data: CvMinuteCreateManyInput | CvMinuteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvMinute createManyAndReturn
   */
  export type CvMinuteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * The data used to create many CvMinutes.
     */
    data: CvMinuteCreateManyInput | CvMinuteCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvMinute update
   */
  export type CvMinuteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * The data needed to update a CvMinute.
     */
    data: XOR<CvMinuteUpdateInput, CvMinuteUncheckedUpdateInput>
    /**
     * Choose, which CvMinute to update.
     */
    where: CvMinuteWhereUniqueInput
  }

  /**
   * CvMinute updateMany
   */
  export type CvMinuteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvMinutes.
     */
    data: XOR<CvMinuteUpdateManyMutationInput, CvMinuteUncheckedUpdateManyInput>
    /**
     * Filter which CvMinutes to update
     */
    where?: CvMinuteWhereInput
    /**
     * Limit how many CvMinutes to update.
     */
    limit?: number
  }

  /**
   * CvMinute updateManyAndReturn
   */
  export type CvMinuteUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * The data used to update CvMinutes.
     */
    data: XOR<CvMinuteUpdateManyMutationInput, CvMinuteUncheckedUpdateManyInput>
    /**
     * Filter which CvMinutes to update
     */
    where?: CvMinuteWhereInput
    /**
     * Limit how many CvMinutes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvMinute upsert
   */
  export type CvMinuteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * The filter to search for the CvMinute to update in case it exists.
     */
    where: CvMinuteWhereUniqueInput
    /**
     * In case the CvMinute found by the `where` argument doesn't exist, create a new CvMinute with this data.
     */
    create: XOR<CvMinuteCreateInput, CvMinuteUncheckedCreateInput>
    /**
     * In case the CvMinute was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvMinuteUpdateInput, CvMinuteUncheckedUpdateInput>
  }

  /**
   * CvMinute delete
   */
  export type CvMinuteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    /**
     * Filter which CvMinute to delete.
     */
    where: CvMinuteWhereUniqueInput
  }

  /**
   * CvMinute deleteMany
   */
  export type CvMinuteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvMinutes to delete
     */
    where?: CvMinuteWhereInput
    /**
     * Limit how many CvMinutes to delete.
     */
    limit?: number
  }

  /**
   * CvMinute.cvThequeCritere
   */
  export type CvMinute$cvThequeCritereArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    where?: CvThequeCritereWhereInput
  }

  /**
   * CvMinute.files
   */
  export type CvMinute$filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * CvMinute.advices
   */
  export type CvMinute$advicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    where?: AdviceWhereInput
    orderBy?: AdviceOrderByWithRelationInput | AdviceOrderByWithRelationInput[]
    cursor?: AdviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdviceScalarFieldEnum | AdviceScalarFieldEnum[]
  }

  /**
   * CvMinute.cvMinuteSections
   */
  export type CvMinute$cvMinuteSectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    where?: CvMinuteSectionWhereInput
    orderBy?: CvMinuteSectionOrderByWithRelationInput | CvMinuteSectionOrderByWithRelationInput[]
    cursor?: CvMinuteSectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvMinuteSectionScalarFieldEnum | CvMinuteSectionScalarFieldEnum[]
  }

  /**
   * CvMinute.openaiResponses
   */
  export type CvMinute$openaiResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    where?: OpenaiResponseWhereInput
    orderBy?: OpenaiResponseOrderByWithRelationInput | OpenaiResponseOrderByWithRelationInput[]
    cursor?: OpenaiResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpenaiResponseScalarFieldEnum | OpenaiResponseScalarFieldEnum[]
  }

  /**
   * CvMinute.evaluation
   */
  export type CvMinute$evaluationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    where?: EvaluationWhereInput
  }

  /**
   * CvMinute.cvThequeViews
   */
  export type CvMinute$cvThequeViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    where?: CvThequeViewWhereInput
    orderBy?: CvThequeViewOrderByWithRelationInput | CvThequeViewOrderByWithRelationInput[]
    cursor?: CvThequeViewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeViewScalarFieldEnum | CvThequeViewScalarFieldEnum[]
  }

  /**
   * CvMinute.cvMinuteDomains
   */
  export type CvMinute$cvMinuteDomainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    where?: CvMinuteDomainWhereInput
    orderBy?: CvMinuteDomainOrderByWithRelationInput | CvMinuteDomainOrderByWithRelationInput[]
    cursor?: CvMinuteDomainWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvMinuteDomainScalarFieldEnum | CvMinuteDomainScalarFieldEnum[]
  }

  /**
   * CvMinute.cvThequeContacts
   */
  export type CvMinute$cvThequeContactsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    where?: CvThequeContactWhereInput
    orderBy?: CvThequeContactOrderByWithRelationInput | CvThequeContactOrderByWithRelationInput[]
    cursor?: CvThequeContactWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeContactScalarFieldEnum | CvThequeContactScalarFieldEnum[]
  }

  /**
   * CvMinute without action
   */
  export type CvMinuteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
  }


  /**
   * Model CvMinuteDomain
   */

  export type AggregateCvMinuteDomain = {
    _count: CvMinuteDomainCountAggregateOutputType | null
    _avg: CvMinuteDomainAvgAggregateOutputType | null
    _sum: CvMinuteDomainSumAggregateOutputType | null
    _min: CvMinuteDomainMinAggregateOutputType | null
    _max: CvMinuteDomainMaxAggregateOutputType | null
  }

  export type CvMinuteDomainAvgAggregateOutputType = {
    id: number | null
    cvMinuteId: number | null
    userId: number | null
  }

  export type CvMinuteDomainSumAggregateOutputType = {
    id: number | null
    cvMinuteId: number | null
    userId: number | null
  }

  export type CvMinuteDomainMinAggregateOutputType = {
    id: number | null
    content: string | null
    cvMinuteId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvMinuteDomainMaxAggregateOutputType = {
    id: number | null
    content: string | null
    cvMinuteId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvMinuteDomainCountAggregateOutputType = {
    id: number
    content: number
    cvMinuteId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CvMinuteDomainAvgAggregateInputType = {
    id?: true
    cvMinuteId?: true
    userId?: true
  }

  export type CvMinuteDomainSumAggregateInputType = {
    id?: true
    cvMinuteId?: true
    userId?: true
  }

  export type CvMinuteDomainMinAggregateInputType = {
    id?: true
    content?: true
    cvMinuteId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvMinuteDomainMaxAggregateInputType = {
    id?: true
    content?: true
    cvMinuteId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvMinuteDomainCountAggregateInputType = {
    id?: true
    content?: true
    cvMinuteId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CvMinuteDomainAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvMinuteDomain to aggregate.
     */
    where?: CvMinuteDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinuteDomains to fetch.
     */
    orderBy?: CvMinuteDomainOrderByWithRelationInput | CvMinuteDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvMinuteDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinuteDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinuteDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvMinuteDomains
    **/
    _count?: true | CvMinuteDomainCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvMinuteDomainAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvMinuteDomainSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvMinuteDomainMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvMinuteDomainMaxAggregateInputType
  }

  export type GetCvMinuteDomainAggregateType<T extends CvMinuteDomainAggregateArgs> = {
        [P in keyof T & keyof AggregateCvMinuteDomain]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvMinuteDomain[P]>
      : GetScalarType<T[P], AggregateCvMinuteDomain[P]>
  }




  export type CvMinuteDomainGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteDomainWhereInput
    orderBy?: CvMinuteDomainOrderByWithAggregationInput | CvMinuteDomainOrderByWithAggregationInput[]
    by: CvMinuteDomainScalarFieldEnum[] | CvMinuteDomainScalarFieldEnum
    having?: CvMinuteDomainScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvMinuteDomainCountAggregateInputType | true
    _avg?: CvMinuteDomainAvgAggregateInputType
    _sum?: CvMinuteDomainSumAggregateInputType
    _min?: CvMinuteDomainMinAggregateInputType
    _max?: CvMinuteDomainMaxAggregateInputType
  }

  export type CvMinuteDomainGroupByOutputType = {
    id: number
    content: string
    cvMinuteId: number
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: CvMinuteDomainCountAggregateOutputType | null
    _avg: CvMinuteDomainAvgAggregateOutputType | null
    _sum: CvMinuteDomainSumAggregateOutputType | null
    _min: CvMinuteDomainMinAggregateOutputType | null
    _max: CvMinuteDomainMaxAggregateOutputType | null
  }

  type GetCvMinuteDomainGroupByPayload<T extends CvMinuteDomainGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvMinuteDomainGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvMinuteDomainGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvMinuteDomainGroupByOutputType[P]>
            : GetScalarType<T[P], CvMinuteDomainGroupByOutputType[P]>
        }
      >
    >


  export type CvMinuteDomainSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    cvMinuteId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinuteDomain"]>

  export type CvMinuteDomainSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    cvMinuteId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinuteDomain"]>

  export type CvMinuteDomainSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    cvMinuteId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinuteDomain"]>

  export type CvMinuteDomainSelectScalar = {
    id?: boolean
    content?: boolean
    cvMinuteId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CvMinuteDomainOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "cvMinuteId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["cvMinuteDomain"]>
  export type CvMinuteDomainInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }
  export type CvMinuteDomainIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }
  export type CvMinuteDomainIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }

  export type $CvMinuteDomainPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvMinuteDomain"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      cvMinute: Prisma.$CvMinutePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      cvMinuteId: number
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cvMinuteDomain"]>
    composites: {}
  }

  type CvMinuteDomainGetPayload<S extends boolean | null | undefined | CvMinuteDomainDefaultArgs> = $Result.GetResult<Prisma.$CvMinuteDomainPayload, S>

  type CvMinuteDomainCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvMinuteDomainFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvMinuteDomainCountAggregateInputType | true
    }

  export interface CvMinuteDomainDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvMinuteDomain'], meta: { name: 'CvMinuteDomain' } }
    /**
     * Find zero or one CvMinuteDomain that matches the filter.
     * @param {CvMinuteDomainFindUniqueArgs} args - Arguments to find a CvMinuteDomain
     * @example
     * // Get one CvMinuteDomain
     * const cvMinuteDomain = await prisma.cvMinuteDomain.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvMinuteDomainFindUniqueArgs>(args: SelectSubset<T, CvMinuteDomainFindUniqueArgs<ExtArgs>>): Prisma__CvMinuteDomainClient<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvMinuteDomain that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvMinuteDomainFindUniqueOrThrowArgs} args - Arguments to find a CvMinuteDomain
     * @example
     * // Get one CvMinuteDomain
     * const cvMinuteDomain = await prisma.cvMinuteDomain.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvMinuteDomainFindUniqueOrThrowArgs>(args: SelectSubset<T, CvMinuteDomainFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvMinuteDomainClient<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvMinuteDomain that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteDomainFindFirstArgs} args - Arguments to find a CvMinuteDomain
     * @example
     * // Get one CvMinuteDomain
     * const cvMinuteDomain = await prisma.cvMinuteDomain.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvMinuteDomainFindFirstArgs>(args?: SelectSubset<T, CvMinuteDomainFindFirstArgs<ExtArgs>>): Prisma__CvMinuteDomainClient<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvMinuteDomain that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteDomainFindFirstOrThrowArgs} args - Arguments to find a CvMinuteDomain
     * @example
     * // Get one CvMinuteDomain
     * const cvMinuteDomain = await prisma.cvMinuteDomain.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvMinuteDomainFindFirstOrThrowArgs>(args?: SelectSubset<T, CvMinuteDomainFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvMinuteDomainClient<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvMinuteDomains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteDomainFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvMinuteDomains
     * const cvMinuteDomains = await prisma.cvMinuteDomain.findMany()
     * 
     * // Get first 10 CvMinuteDomains
     * const cvMinuteDomains = await prisma.cvMinuteDomain.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvMinuteDomainWithIdOnly = await prisma.cvMinuteDomain.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvMinuteDomainFindManyArgs>(args?: SelectSubset<T, CvMinuteDomainFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvMinuteDomain.
     * @param {CvMinuteDomainCreateArgs} args - Arguments to create a CvMinuteDomain.
     * @example
     * // Create one CvMinuteDomain
     * const CvMinuteDomain = await prisma.cvMinuteDomain.create({
     *   data: {
     *     // ... data to create a CvMinuteDomain
     *   }
     * })
     * 
     */
    create<T extends CvMinuteDomainCreateArgs>(args: SelectSubset<T, CvMinuteDomainCreateArgs<ExtArgs>>): Prisma__CvMinuteDomainClient<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvMinuteDomains.
     * @param {CvMinuteDomainCreateManyArgs} args - Arguments to create many CvMinuteDomains.
     * @example
     * // Create many CvMinuteDomains
     * const cvMinuteDomain = await prisma.cvMinuteDomain.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvMinuteDomainCreateManyArgs>(args?: SelectSubset<T, CvMinuteDomainCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvMinuteDomains and returns the data saved in the database.
     * @param {CvMinuteDomainCreateManyAndReturnArgs} args - Arguments to create many CvMinuteDomains.
     * @example
     * // Create many CvMinuteDomains
     * const cvMinuteDomain = await prisma.cvMinuteDomain.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvMinuteDomains and only return the `id`
     * const cvMinuteDomainWithIdOnly = await prisma.cvMinuteDomain.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvMinuteDomainCreateManyAndReturnArgs>(args?: SelectSubset<T, CvMinuteDomainCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvMinuteDomain.
     * @param {CvMinuteDomainDeleteArgs} args - Arguments to delete one CvMinuteDomain.
     * @example
     * // Delete one CvMinuteDomain
     * const CvMinuteDomain = await prisma.cvMinuteDomain.delete({
     *   where: {
     *     // ... filter to delete one CvMinuteDomain
     *   }
     * })
     * 
     */
    delete<T extends CvMinuteDomainDeleteArgs>(args: SelectSubset<T, CvMinuteDomainDeleteArgs<ExtArgs>>): Prisma__CvMinuteDomainClient<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvMinuteDomain.
     * @param {CvMinuteDomainUpdateArgs} args - Arguments to update one CvMinuteDomain.
     * @example
     * // Update one CvMinuteDomain
     * const cvMinuteDomain = await prisma.cvMinuteDomain.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvMinuteDomainUpdateArgs>(args: SelectSubset<T, CvMinuteDomainUpdateArgs<ExtArgs>>): Prisma__CvMinuteDomainClient<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvMinuteDomains.
     * @param {CvMinuteDomainDeleteManyArgs} args - Arguments to filter CvMinuteDomains to delete.
     * @example
     * // Delete a few CvMinuteDomains
     * const { count } = await prisma.cvMinuteDomain.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvMinuteDomainDeleteManyArgs>(args?: SelectSubset<T, CvMinuteDomainDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvMinuteDomains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteDomainUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvMinuteDomains
     * const cvMinuteDomain = await prisma.cvMinuteDomain.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvMinuteDomainUpdateManyArgs>(args: SelectSubset<T, CvMinuteDomainUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvMinuteDomains and returns the data updated in the database.
     * @param {CvMinuteDomainUpdateManyAndReturnArgs} args - Arguments to update many CvMinuteDomains.
     * @example
     * // Update many CvMinuteDomains
     * const cvMinuteDomain = await prisma.cvMinuteDomain.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvMinuteDomains and only return the `id`
     * const cvMinuteDomainWithIdOnly = await prisma.cvMinuteDomain.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvMinuteDomainUpdateManyAndReturnArgs>(args: SelectSubset<T, CvMinuteDomainUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvMinuteDomain.
     * @param {CvMinuteDomainUpsertArgs} args - Arguments to update or create a CvMinuteDomain.
     * @example
     * // Update or create a CvMinuteDomain
     * const cvMinuteDomain = await prisma.cvMinuteDomain.upsert({
     *   create: {
     *     // ... data to create a CvMinuteDomain
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvMinuteDomain we want to update
     *   }
     * })
     */
    upsert<T extends CvMinuteDomainUpsertArgs>(args: SelectSubset<T, CvMinuteDomainUpsertArgs<ExtArgs>>): Prisma__CvMinuteDomainClient<$Result.GetResult<Prisma.$CvMinuteDomainPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvMinuteDomains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteDomainCountArgs} args - Arguments to filter CvMinuteDomains to count.
     * @example
     * // Count the number of CvMinuteDomains
     * const count = await prisma.cvMinuteDomain.count({
     *   where: {
     *     // ... the filter for the CvMinuteDomains we want to count
     *   }
     * })
    **/
    count<T extends CvMinuteDomainCountArgs>(
      args?: Subset<T, CvMinuteDomainCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvMinuteDomainCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvMinuteDomain.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteDomainAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvMinuteDomainAggregateArgs>(args: Subset<T, CvMinuteDomainAggregateArgs>): Prisma.PrismaPromise<GetCvMinuteDomainAggregateType<T>>

    /**
     * Group by CvMinuteDomain.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteDomainGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvMinuteDomainGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvMinuteDomainGroupByArgs['orderBy'] }
        : { orderBy?: CvMinuteDomainGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvMinuteDomainGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvMinuteDomainGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvMinuteDomain model
   */
  readonly fields: CvMinuteDomainFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvMinuteDomain.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvMinuteDomainClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvMinute<T extends CvMinuteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvMinuteDefaultArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvMinuteDomain model
   */
  interface CvMinuteDomainFieldRefs {
    readonly id: FieldRef<"CvMinuteDomain", 'Int'>
    readonly content: FieldRef<"CvMinuteDomain", 'String'>
    readonly cvMinuteId: FieldRef<"CvMinuteDomain", 'Int'>
    readonly userId: FieldRef<"CvMinuteDomain", 'Int'>
    readonly createdAt: FieldRef<"CvMinuteDomain", 'DateTime'>
    readonly updatedAt: FieldRef<"CvMinuteDomain", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CvMinuteDomain findUnique
   */
  export type CvMinuteDomainFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteDomain to fetch.
     */
    where: CvMinuteDomainWhereUniqueInput
  }

  /**
   * CvMinuteDomain findUniqueOrThrow
   */
  export type CvMinuteDomainFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteDomain to fetch.
     */
    where: CvMinuteDomainWhereUniqueInput
  }

  /**
   * CvMinuteDomain findFirst
   */
  export type CvMinuteDomainFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteDomain to fetch.
     */
    where?: CvMinuteDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinuteDomains to fetch.
     */
    orderBy?: CvMinuteDomainOrderByWithRelationInput | CvMinuteDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvMinuteDomains.
     */
    cursor?: CvMinuteDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinuteDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinuteDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvMinuteDomains.
     */
    distinct?: CvMinuteDomainScalarFieldEnum | CvMinuteDomainScalarFieldEnum[]
  }

  /**
   * CvMinuteDomain findFirstOrThrow
   */
  export type CvMinuteDomainFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteDomain to fetch.
     */
    where?: CvMinuteDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinuteDomains to fetch.
     */
    orderBy?: CvMinuteDomainOrderByWithRelationInput | CvMinuteDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvMinuteDomains.
     */
    cursor?: CvMinuteDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinuteDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinuteDomains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvMinuteDomains.
     */
    distinct?: CvMinuteDomainScalarFieldEnum | CvMinuteDomainScalarFieldEnum[]
  }

  /**
   * CvMinuteDomain findMany
   */
  export type CvMinuteDomainFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteDomains to fetch.
     */
    where?: CvMinuteDomainWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinuteDomains to fetch.
     */
    orderBy?: CvMinuteDomainOrderByWithRelationInput | CvMinuteDomainOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvMinuteDomains.
     */
    cursor?: CvMinuteDomainWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinuteDomains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinuteDomains.
     */
    skip?: number
    distinct?: CvMinuteDomainScalarFieldEnum | CvMinuteDomainScalarFieldEnum[]
  }

  /**
   * CvMinuteDomain create
   */
  export type CvMinuteDomainCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * The data needed to create a CvMinuteDomain.
     */
    data: XOR<CvMinuteDomainCreateInput, CvMinuteDomainUncheckedCreateInput>
  }

  /**
   * CvMinuteDomain createMany
   */
  export type CvMinuteDomainCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvMinuteDomains.
     */
    data: CvMinuteDomainCreateManyInput | CvMinuteDomainCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvMinuteDomain createManyAndReturn
   */
  export type CvMinuteDomainCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * The data used to create many CvMinuteDomains.
     */
    data: CvMinuteDomainCreateManyInput | CvMinuteDomainCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvMinuteDomain update
   */
  export type CvMinuteDomainUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * The data needed to update a CvMinuteDomain.
     */
    data: XOR<CvMinuteDomainUpdateInput, CvMinuteDomainUncheckedUpdateInput>
    /**
     * Choose, which CvMinuteDomain to update.
     */
    where: CvMinuteDomainWhereUniqueInput
  }

  /**
   * CvMinuteDomain updateMany
   */
  export type CvMinuteDomainUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvMinuteDomains.
     */
    data: XOR<CvMinuteDomainUpdateManyMutationInput, CvMinuteDomainUncheckedUpdateManyInput>
    /**
     * Filter which CvMinuteDomains to update
     */
    where?: CvMinuteDomainWhereInput
    /**
     * Limit how many CvMinuteDomains to update.
     */
    limit?: number
  }

  /**
   * CvMinuteDomain updateManyAndReturn
   */
  export type CvMinuteDomainUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * The data used to update CvMinuteDomains.
     */
    data: XOR<CvMinuteDomainUpdateManyMutationInput, CvMinuteDomainUncheckedUpdateManyInput>
    /**
     * Filter which CvMinuteDomains to update
     */
    where?: CvMinuteDomainWhereInput
    /**
     * Limit how many CvMinuteDomains to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvMinuteDomain upsert
   */
  export type CvMinuteDomainUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * The filter to search for the CvMinuteDomain to update in case it exists.
     */
    where: CvMinuteDomainWhereUniqueInput
    /**
     * In case the CvMinuteDomain found by the `where` argument doesn't exist, create a new CvMinuteDomain with this data.
     */
    create: XOR<CvMinuteDomainCreateInput, CvMinuteDomainUncheckedCreateInput>
    /**
     * In case the CvMinuteDomain was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvMinuteDomainUpdateInput, CvMinuteDomainUncheckedUpdateInput>
  }

  /**
   * CvMinuteDomain delete
   */
  export type CvMinuteDomainDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
    /**
     * Filter which CvMinuteDomain to delete.
     */
    where: CvMinuteDomainWhereUniqueInput
  }

  /**
   * CvMinuteDomain deleteMany
   */
  export type CvMinuteDomainDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvMinuteDomains to delete
     */
    where?: CvMinuteDomainWhereInput
    /**
     * Limit how many CvMinuteDomains to delete.
     */
    limit?: number
  }

  /**
   * CvMinuteDomain without action
   */
  export type CvMinuteDomainDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteDomain
     */
    select?: CvMinuteDomainSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteDomain
     */
    omit?: CvMinuteDomainOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteDomainInclude<ExtArgs> | null
  }


  /**
   * Model Section
   */

  export type AggregateSection = {
    _count: SectionCountAggregateOutputType | null
    _avg: SectionAvgAggregateOutputType | null
    _sum: SectionSumAggregateOutputType | null
    _min: SectionMinAggregateOutputType | null
    _max: SectionMaxAggregateOutputType | null
  }

  export type SectionAvgAggregateOutputType = {
    id: number | null
  }

  export type SectionSumAggregateOutputType = {
    id: number | null
  }

  export type SectionMinAggregateOutputType = {
    id: number | null
    name: string | null
    editable: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SectionMaxAggregateOutputType = {
    id: number | null
    name: string | null
    editable: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SectionCountAggregateOutputType = {
    id: number
    name: number
    editable: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SectionAvgAggregateInputType = {
    id?: true
  }

  export type SectionSumAggregateInputType = {
    id?: true
  }

  export type SectionMinAggregateInputType = {
    id?: true
    name?: true
    editable?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SectionMaxAggregateInputType = {
    id?: true
    name?: true
    editable?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SectionCountAggregateInputType = {
    id?: true
    name?: true
    editable?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Section to aggregate.
     */
    where?: SectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sections to fetch.
     */
    orderBy?: SectionOrderByWithRelationInput | SectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sections
    **/
    _count?: true | SectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SectionMaxAggregateInputType
  }

  export type GetSectionAggregateType<T extends SectionAggregateArgs> = {
        [P in keyof T & keyof AggregateSection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSection[P]>
      : GetScalarType<T[P], AggregateSection[P]>
  }




  export type SectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SectionWhereInput
    orderBy?: SectionOrderByWithAggregationInput | SectionOrderByWithAggregationInput[]
    by: SectionScalarFieldEnum[] | SectionScalarFieldEnum
    having?: SectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SectionCountAggregateInputType | true
    _avg?: SectionAvgAggregateInputType
    _sum?: SectionSumAggregateInputType
    _min?: SectionMinAggregateInputType
    _max?: SectionMaxAggregateInputType
  }

  export type SectionGroupByOutputType = {
    id: number
    name: string
    editable: boolean
    createdAt: Date
    updatedAt: Date
    _count: SectionCountAggregateOutputType | null
    _avg: SectionAvgAggregateOutputType | null
    _sum: SectionSumAggregateOutputType | null
    _min: SectionMinAggregateOutputType | null
    _max: SectionMaxAggregateOutputType | null
  }

  type GetSectionGroupByPayload<T extends SectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SectionGroupByOutputType[P]>
            : GetScalarType<T[P], SectionGroupByOutputType[P]>
        }
      >
    >


  export type SectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    editable?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinuteSections?: boolean | Section$cvMinuteSectionsArgs<ExtArgs>
    _count?: boolean | SectionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["section"]>

  export type SectionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    editable?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["section"]>

  export type SectionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    editable?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["section"]>

  export type SectionSelectScalar = {
    id?: boolean
    name?: boolean
    editable?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "editable" | "createdAt" | "updatedAt", ExtArgs["result"]["section"]>
  export type SectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinuteSections?: boolean | Section$cvMinuteSectionsArgs<ExtArgs>
    _count?: boolean | SectionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SectionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type SectionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Section"
    objects: {
      cvMinuteSections: Prisma.$CvMinuteSectionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      editable: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["section"]>
    composites: {}
  }

  type SectionGetPayload<S extends boolean | null | undefined | SectionDefaultArgs> = $Result.GetResult<Prisma.$SectionPayload, S>

  type SectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SectionCountAggregateInputType | true
    }

  export interface SectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Section'], meta: { name: 'Section' } }
    /**
     * Find zero or one Section that matches the filter.
     * @param {SectionFindUniqueArgs} args - Arguments to find a Section
     * @example
     * // Get one Section
     * const section = await prisma.section.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SectionFindUniqueArgs>(args: SelectSubset<T, SectionFindUniqueArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Section that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SectionFindUniqueOrThrowArgs} args - Arguments to find a Section
     * @example
     * // Get one Section
     * const section = await prisma.section.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SectionFindUniqueOrThrowArgs>(args: SelectSubset<T, SectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Section that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionFindFirstArgs} args - Arguments to find a Section
     * @example
     * // Get one Section
     * const section = await prisma.section.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SectionFindFirstArgs>(args?: SelectSubset<T, SectionFindFirstArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Section that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionFindFirstOrThrowArgs} args - Arguments to find a Section
     * @example
     * // Get one Section
     * const section = await prisma.section.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SectionFindFirstOrThrowArgs>(args?: SelectSubset<T, SectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sections
     * const sections = await prisma.section.findMany()
     * 
     * // Get first 10 Sections
     * const sections = await prisma.section.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sectionWithIdOnly = await prisma.section.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SectionFindManyArgs>(args?: SelectSubset<T, SectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Section.
     * @param {SectionCreateArgs} args - Arguments to create a Section.
     * @example
     * // Create one Section
     * const Section = await prisma.section.create({
     *   data: {
     *     // ... data to create a Section
     *   }
     * })
     * 
     */
    create<T extends SectionCreateArgs>(args: SelectSubset<T, SectionCreateArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sections.
     * @param {SectionCreateManyArgs} args - Arguments to create many Sections.
     * @example
     * // Create many Sections
     * const section = await prisma.section.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SectionCreateManyArgs>(args?: SelectSubset<T, SectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sections and returns the data saved in the database.
     * @param {SectionCreateManyAndReturnArgs} args - Arguments to create many Sections.
     * @example
     * // Create many Sections
     * const section = await prisma.section.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sections and only return the `id`
     * const sectionWithIdOnly = await prisma.section.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SectionCreateManyAndReturnArgs>(args?: SelectSubset<T, SectionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Section.
     * @param {SectionDeleteArgs} args - Arguments to delete one Section.
     * @example
     * // Delete one Section
     * const Section = await prisma.section.delete({
     *   where: {
     *     // ... filter to delete one Section
     *   }
     * })
     * 
     */
    delete<T extends SectionDeleteArgs>(args: SelectSubset<T, SectionDeleteArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Section.
     * @param {SectionUpdateArgs} args - Arguments to update one Section.
     * @example
     * // Update one Section
     * const section = await prisma.section.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SectionUpdateArgs>(args: SelectSubset<T, SectionUpdateArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sections.
     * @param {SectionDeleteManyArgs} args - Arguments to filter Sections to delete.
     * @example
     * // Delete a few Sections
     * const { count } = await prisma.section.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SectionDeleteManyArgs>(args?: SelectSubset<T, SectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sections
     * const section = await prisma.section.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SectionUpdateManyArgs>(args: SelectSubset<T, SectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sections and returns the data updated in the database.
     * @param {SectionUpdateManyAndReturnArgs} args - Arguments to update many Sections.
     * @example
     * // Update many Sections
     * const section = await prisma.section.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sections and only return the `id`
     * const sectionWithIdOnly = await prisma.section.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SectionUpdateManyAndReturnArgs>(args: SelectSubset<T, SectionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Section.
     * @param {SectionUpsertArgs} args - Arguments to update or create a Section.
     * @example
     * // Update or create a Section
     * const section = await prisma.section.upsert({
     *   create: {
     *     // ... data to create a Section
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Section we want to update
     *   }
     * })
     */
    upsert<T extends SectionUpsertArgs>(args: SelectSubset<T, SectionUpsertArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionCountArgs} args - Arguments to filter Sections to count.
     * @example
     * // Count the number of Sections
     * const count = await prisma.section.count({
     *   where: {
     *     // ... the filter for the Sections we want to count
     *   }
     * })
    **/
    count<T extends SectionCountArgs>(
      args?: Subset<T, SectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Section.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SectionAggregateArgs>(args: Subset<T, SectionAggregateArgs>): Prisma.PrismaPromise<GetSectionAggregateType<T>>

    /**
     * Group by Section.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SectionGroupByArgs['orderBy'] }
        : { orderBy?: SectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Section model
   */
  readonly fields: SectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Section.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cvMinuteSections<T extends Section$cvMinuteSectionsArgs<ExtArgs> = {}>(args?: Subset<T, Section$cvMinuteSectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Section model
   */
  interface SectionFieldRefs {
    readonly id: FieldRef<"Section", 'Int'>
    readonly name: FieldRef<"Section", 'String'>
    readonly editable: FieldRef<"Section", 'Boolean'>
    readonly createdAt: FieldRef<"Section", 'DateTime'>
    readonly updatedAt: FieldRef<"Section", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Section findUnique
   */
  export type SectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * Filter, which Section to fetch.
     */
    where: SectionWhereUniqueInput
  }

  /**
   * Section findUniqueOrThrow
   */
  export type SectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * Filter, which Section to fetch.
     */
    where: SectionWhereUniqueInput
  }

  /**
   * Section findFirst
   */
  export type SectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * Filter, which Section to fetch.
     */
    where?: SectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sections to fetch.
     */
    orderBy?: SectionOrderByWithRelationInput | SectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sections.
     */
    cursor?: SectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sections.
     */
    distinct?: SectionScalarFieldEnum | SectionScalarFieldEnum[]
  }

  /**
   * Section findFirstOrThrow
   */
  export type SectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * Filter, which Section to fetch.
     */
    where?: SectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sections to fetch.
     */
    orderBy?: SectionOrderByWithRelationInput | SectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sections.
     */
    cursor?: SectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sections.
     */
    distinct?: SectionScalarFieldEnum | SectionScalarFieldEnum[]
  }

  /**
   * Section findMany
   */
  export type SectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * Filter, which Sections to fetch.
     */
    where?: SectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sections to fetch.
     */
    orderBy?: SectionOrderByWithRelationInput | SectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sections.
     */
    cursor?: SectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sections.
     */
    skip?: number
    distinct?: SectionScalarFieldEnum | SectionScalarFieldEnum[]
  }

  /**
   * Section create
   */
  export type SectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * The data needed to create a Section.
     */
    data: XOR<SectionCreateInput, SectionUncheckedCreateInput>
  }

  /**
   * Section createMany
   */
  export type SectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sections.
     */
    data: SectionCreateManyInput | SectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Section createManyAndReturn
   */
  export type SectionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * The data used to create many Sections.
     */
    data: SectionCreateManyInput | SectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Section update
   */
  export type SectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * The data needed to update a Section.
     */
    data: XOR<SectionUpdateInput, SectionUncheckedUpdateInput>
    /**
     * Choose, which Section to update.
     */
    where: SectionWhereUniqueInput
  }

  /**
   * Section updateMany
   */
  export type SectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sections.
     */
    data: XOR<SectionUpdateManyMutationInput, SectionUncheckedUpdateManyInput>
    /**
     * Filter which Sections to update
     */
    where?: SectionWhereInput
    /**
     * Limit how many Sections to update.
     */
    limit?: number
  }

  /**
   * Section updateManyAndReturn
   */
  export type SectionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * The data used to update Sections.
     */
    data: XOR<SectionUpdateManyMutationInput, SectionUncheckedUpdateManyInput>
    /**
     * Filter which Sections to update
     */
    where?: SectionWhereInput
    /**
     * Limit how many Sections to update.
     */
    limit?: number
  }

  /**
   * Section upsert
   */
  export type SectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * The filter to search for the Section to update in case it exists.
     */
    where: SectionWhereUniqueInput
    /**
     * In case the Section found by the `where` argument doesn't exist, create a new Section with this data.
     */
    create: XOR<SectionCreateInput, SectionUncheckedCreateInput>
    /**
     * In case the Section was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SectionUpdateInput, SectionUncheckedUpdateInput>
  }

  /**
   * Section delete
   */
  export type SectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
    /**
     * Filter which Section to delete.
     */
    where: SectionWhereUniqueInput
  }

  /**
   * Section deleteMany
   */
  export type SectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sections to delete
     */
    where?: SectionWhereInput
    /**
     * Limit how many Sections to delete.
     */
    limit?: number
  }

  /**
   * Section.cvMinuteSections
   */
  export type Section$cvMinuteSectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    where?: CvMinuteSectionWhereInput
    orderBy?: CvMinuteSectionOrderByWithRelationInput | CvMinuteSectionOrderByWithRelationInput[]
    cursor?: CvMinuteSectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvMinuteSectionScalarFieldEnum | CvMinuteSectionScalarFieldEnum[]
  }

  /**
   * Section without action
   */
  export type SectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Section
     */
    select?: SectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Section
     */
    omit?: SectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInclude<ExtArgs> | null
  }


  /**
   * Model CvMinuteSection
   */

  export type AggregateCvMinuteSection = {
    _count: CvMinuteSectionCountAggregateOutputType | null
    _avg: CvMinuteSectionAvgAggregateOutputType | null
    _sum: CvMinuteSectionSumAggregateOutputType | null
    _min: CvMinuteSectionMinAggregateOutputType | null
    _max: CvMinuteSectionMaxAggregateOutputType | null
  }

  export type CvMinuteSectionAvgAggregateOutputType = {
    id: number | null
    sectionOrder: number | null
    cvMinuteId: number | null
    sectionId: number | null
  }

  export type CvMinuteSectionSumAggregateOutputType = {
    id: number | null
    sectionOrder: number | null
    cvMinuteId: number | null
    sectionId: number | null
  }

  export type CvMinuteSectionMinAggregateOutputType = {
    id: number | null
    sectionOrder: number | null
    sectionTitle: string | null
    cvMinuteId: number | null
    sectionId: number | null
  }

  export type CvMinuteSectionMaxAggregateOutputType = {
    id: number | null
    sectionOrder: number | null
    sectionTitle: string | null
    cvMinuteId: number | null
    sectionId: number | null
  }

  export type CvMinuteSectionCountAggregateOutputType = {
    id: number
    sectionOrder: number
    sectionTitle: number
    cvMinuteId: number
    sectionId: number
    _all: number
  }


  export type CvMinuteSectionAvgAggregateInputType = {
    id?: true
    sectionOrder?: true
    cvMinuteId?: true
    sectionId?: true
  }

  export type CvMinuteSectionSumAggregateInputType = {
    id?: true
    sectionOrder?: true
    cvMinuteId?: true
    sectionId?: true
  }

  export type CvMinuteSectionMinAggregateInputType = {
    id?: true
    sectionOrder?: true
    sectionTitle?: true
    cvMinuteId?: true
    sectionId?: true
  }

  export type CvMinuteSectionMaxAggregateInputType = {
    id?: true
    sectionOrder?: true
    sectionTitle?: true
    cvMinuteId?: true
    sectionId?: true
  }

  export type CvMinuteSectionCountAggregateInputType = {
    id?: true
    sectionOrder?: true
    sectionTitle?: true
    cvMinuteId?: true
    sectionId?: true
    _all?: true
  }

  export type CvMinuteSectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvMinuteSection to aggregate.
     */
    where?: CvMinuteSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinuteSections to fetch.
     */
    orderBy?: CvMinuteSectionOrderByWithRelationInput | CvMinuteSectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvMinuteSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinuteSections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinuteSections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvMinuteSections
    **/
    _count?: true | CvMinuteSectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvMinuteSectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvMinuteSectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvMinuteSectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvMinuteSectionMaxAggregateInputType
  }

  export type GetCvMinuteSectionAggregateType<T extends CvMinuteSectionAggregateArgs> = {
        [P in keyof T & keyof AggregateCvMinuteSection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvMinuteSection[P]>
      : GetScalarType<T[P], AggregateCvMinuteSection[P]>
  }




  export type CvMinuteSectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvMinuteSectionWhereInput
    orderBy?: CvMinuteSectionOrderByWithAggregationInput | CvMinuteSectionOrderByWithAggregationInput[]
    by: CvMinuteSectionScalarFieldEnum[] | CvMinuteSectionScalarFieldEnum
    having?: CvMinuteSectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvMinuteSectionCountAggregateInputType | true
    _avg?: CvMinuteSectionAvgAggregateInputType
    _sum?: CvMinuteSectionSumAggregateInputType
    _min?: CvMinuteSectionMinAggregateInputType
    _max?: CvMinuteSectionMaxAggregateInputType
  }

  export type CvMinuteSectionGroupByOutputType = {
    id: number
    sectionOrder: number | null
    sectionTitle: string | null
    cvMinuteId: number
    sectionId: number
    _count: CvMinuteSectionCountAggregateOutputType | null
    _avg: CvMinuteSectionAvgAggregateOutputType | null
    _sum: CvMinuteSectionSumAggregateOutputType | null
    _min: CvMinuteSectionMinAggregateOutputType | null
    _max: CvMinuteSectionMaxAggregateOutputType | null
  }

  type GetCvMinuteSectionGroupByPayload<T extends CvMinuteSectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvMinuteSectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvMinuteSectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvMinuteSectionGroupByOutputType[P]>
            : GetScalarType<T[P], CvMinuteSectionGroupByOutputType[P]>
        }
      >
    >


  export type CvMinuteSectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sectionOrder?: boolean
    sectionTitle?: boolean
    cvMinuteId?: boolean
    sectionId?: boolean
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    section?: boolean | SectionDefaultArgs<ExtArgs>
    advices?: boolean | CvMinuteSection$advicesArgs<ExtArgs>
    sectionInfos?: boolean | CvMinuteSection$sectionInfosArgs<ExtArgs>
    _count?: boolean | CvMinuteSectionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinuteSection"]>

  export type CvMinuteSectionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sectionOrder?: boolean
    sectionTitle?: boolean
    cvMinuteId?: boolean
    sectionId?: boolean
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    section?: boolean | SectionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinuteSection"]>

  export type CvMinuteSectionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sectionOrder?: boolean
    sectionTitle?: boolean
    cvMinuteId?: boolean
    sectionId?: boolean
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    section?: boolean | SectionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvMinuteSection"]>

  export type CvMinuteSectionSelectScalar = {
    id?: boolean
    sectionOrder?: boolean
    sectionTitle?: boolean
    cvMinuteId?: boolean
    sectionId?: boolean
  }

  export type CvMinuteSectionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sectionOrder" | "sectionTitle" | "cvMinuteId" | "sectionId", ExtArgs["result"]["cvMinuteSection"]>
  export type CvMinuteSectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    section?: boolean | SectionDefaultArgs<ExtArgs>
    advices?: boolean | CvMinuteSection$advicesArgs<ExtArgs>
    sectionInfos?: boolean | CvMinuteSection$sectionInfosArgs<ExtArgs>
    _count?: boolean | CvMinuteSectionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CvMinuteSectionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    section?: boolean | SectionDefaultArgs<ExtArgs>
  }
  export type CvMinuteSectionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    section?: boolean | SectionDefaultArgs<ExtArgs>
  }

  export type $CvMinuteSectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvMinuteSection"
    objects: {
      cvMinute: Prisma.$CvMinutePayload<ExtArgs>
      section: Prisma.$SectionPayload<ExtArgs>
      advices: Prisma.$AdvicePayload<ExtArgs>[]
      sectionInfos: Prisma.$SectionInfoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sectionOrder: number | null
      sectionTitle: string | null
      cvMinuteId: number
      sectionId: number
    }, ExtArgs["result"]["cvMinuteSection"]>
    composites: {}
  }

  type CvMinuteSectionGetPayload<S extends boolean | null | undefined | CvMinuteSectionDefaultArgs> = $Result.GetResult<Prisma.$CvMinuteSectionPayload, S>

  type CvMinuteSectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvMinuteSectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvMinuteSectionCountAggregateInputType | true
    }

  export interface CvMinuteSectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvMinuteSection'], meta: { name: 'CvMinuteSection' } }
    /**
     * Find zero or one CvMinuteSection that matches the filter.
     * @param {CvMinuteSectionFindUniqueArgs} args - Arguments to find a CvMinuteSection
     * @example
     * // Get one CvMinuteSection
     * const cvMinuteSection = await prisma.cvMinuteSection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvMinuteSectionFindUniqueArgs>(args: SelectSubset<T, CvMinuteSectionFindUniqueArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvMinuteSection that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvMinuteSectionFindUniqueOrThrowArgs} args - Arguments to find a CvMinuteSection
     * @example
     * // Get one CvMinuteSection
     * const cvMinuteSection = await prisma.cvMinuteSection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvMinuteSectionFindUniqueOrThrowArgs>(args: SelectSubset<T, CvMinuteSectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvMinuteSection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteSectionFindFirstArgs} args - Arguments to find a CvMinuteSection
     * @example
     * // Get one CvMinuteSection
     * const cvMinuteSection = await prisma.cvMinuteSection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvMinuteSectionFindFirstArgs>(args?: SelectSubset<T, CvMinuteSectionFindFirstArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvMinuteSection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteSectionFindFirstOrThrowArgs} args - Arguments to find a CvMinuteSection
     * @example
     * // Get one CvMinuteSection
     * const cvMinuteSection = await prisma.cvMinuteSection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvMinuteSectionFindFirstOrThrowArgs>(args?: SelectSubset<T, CvMinuteSectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvMinuteSections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteSectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvMinuteSections
     * const cvMinuteSections = await prisma.cvMinuteSection.findMany()
     * 
     * // Get first 10 CvMinuteSections
     * const cvMinuteSections = await prisma.cvMinuteSection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvMinuteSectionWithIdOnly = await prisma.cvMinuteSection.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvMinuteSectionFindManyArgs>(args?: SelectSubset<T, CvMinuteSectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvMinuteSection.
     * @param {CvMinuteSectionCreateArgs} args - Arguments to create a CvMinuteSection.
     * @example
     * // Create one CvMinuteSection
     * const CvMinuteSection = await prisma.cvMinuteSection.create({
     *   data: {
     *     // ... data to create a CvMinuteSection
     *   }
     * })
     * 
     */
    create<T extends CvMinuteSectionCreateArgs>(args: SelectSubset<T, CvMinuteSectionCreateArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvMinuteSections.
     * @param {CvMinuteSectionCreateManyArgs} args - Arguments to create many CvMinuteSections.
     * @example
     * // Create many CvMinuteSections
     * const cvMinuteSection = await prisma.cvMinuteSection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvMinuteSectionCreateManyArgs>(args?: SelectSubset<T, CvMinuteSectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvMinuteSections and returns the data saved in the database.
     * @param {CvMinuteSectionCreateManyAndReturnArgs} args - Arguments to create many CvMinuteSections.
     * @example
     * // Create many CvMinuteSections
     * const cvMinuteSection = await prisma.cvMinuteSection.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvMinuteSections and only return the `id`
     * const cvMinuteSectionWithIdOnly = await prisma.cvMinuteSection.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvMinuteSectionCreateManyAndReturnArgs>(args?: SelectSubset<T, CvMinuteSectionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvMinuteSection.
     * @param {CvMinuteSectionDeleteArgs} args - Arguments to delete one CvMinuteSection.
     * @example
     * // Delete one CvMinuteSection
     * const CvMinuteSection = await prisma.cvMinuteSection.delete({
     *   where: {
     *     // ... filter to delete one CvMinuteSection
     *   }
     * })
     * 
     */
    delete<T extends CvMinuteSectionDeleteArgs>(args: SelectSubset<T, CvMinuteSectionDeleteArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvMinuteSection.
     * @param {CvMinuteSectionUpdateArgs} args - Arguments to update one CvMinuteSection.
     * @example
     * // Update one CvMinuteSection
     * const cvMinuteSection = await prisma.cvMinuteSection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvMinuteSectionUpdateArgs>(args: SelectSubset<T, CvMinuteSectionUpdateArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvMinuteSections.
     * @param {CvMinuteSectionDeleteManyArgs} args - Arguments to filter CvMinuteSections to delete.
     * @example
     * // Delete a few CvMinuteSections
     * const { count } = await prisma.cvMinuteSection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvMinuteSectionDeleteManyArgs>(args?: SelectSubset<T, CvMinuteSectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvMinuteSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteSectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvMinuteSections
     * const cvMinuteSection = await prisma.cvMinuteSection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvMinuteSectionUpdateManyArgs>(args: SelectSubset<T, CvMinuteSectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvMinuteSections and returns the data updated in the database.
     * @param {CvMinuteSectionUpdateManyAndReturnArgs} args - Arguments to update many CvMinuteSections.
     * @example
     * // Update many CvMinuteSections
     * const cvMinuteSection = await prisma.cvMinuteSection.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvMinuteSections and only return the `id`
     * const cvMinuteSectionWithIdOnly = await prisma.cvMinuteSection.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvMinuteSectionUpdateManyAndReturnArgs>(args: SelectSubset<T, CvMinuteSectionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvMinuteSection.
     * @param {CvMinuteSectionUpsertArgs} args - Arguments to update or create a CvMinuteSection.
     * @example
     * // Update or create a CvMinuteSection
     * const cvMinuteSection = await prisma.cvMinuteSection.upsert({
     *   create: {
     *     // ... data to create a CvMinuteSection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvMinuteSection we want to update
     *   }
     * })
     */
    upsert<T extends CvMinuteSectionUpsertArgs>(args: SelectSubset<T, CvMinuteSectionUpsertArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvMinuteSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteSectionCountArgs} args - Arguments to filter CvMinuteSections to count.
     * @example
     * // Count the number of CvMinuteSections
     * const count = await prisma.cvMinuteSection.count({
     *   where: {
     *     // ... the filter for the CvMinuteSections we want to count
     *   }
     * })
    **/
    count<T extends CvMinuteSectionCountArgs>(
      args?: Subset<T, CvMinuteSectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvMinuteSectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvMinuteSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteSectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvMinuteSectionAggregateArgs>(args: Subset<T, CvMinuteSectionAggregateArgs>): Prisma.PrismaPromise<GetCvMinuteSectionAggregateType<T>>

    /**
     * Group by CvMinuteSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvMinuteSectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvMinuteSectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvMinuteSectionGroupByArgs['orderBy'] }
        : { orderBy?: CvMinuteSectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvMinuteSectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvMinuteSectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvMinuteSection model
   */
  readonly fields: CvMinuteSectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvMinuteSection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvMinuteSectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cvMinute<T extends CvMinuteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvMinuteDefaultArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    section<T extends SectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SectionDefaultArgs<ExtArgs>>): Prisma__SectionClient<$Result.GetResult<Prisma.$SectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    advices<T extends CvMinuteSection$advicesArgs<ExtArgs> = {}>(args?: Subset<T, CvMinuteSection$advicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sectionInfos<T extends CvMinuteSection$sectionInfosArgs<ExtArgs> = {}>(args?: Subset<T, CvMinuteSection$sectionInfosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvMinuteSection model
   */
  interface CvMinuteSectionFieldRefs {
    readonly id: FieldRef<"CvMinuteSection", 'Int'>
    readonly sectionOrder: FieldRef<"CvMinuteSection", 'Int'>
    readonly sectionTitle: FieldRef<"CvMinuteSection", 'String'>
    readonly cvMinuteId: FieldRef<"CvMinuteSection", 'Int'>
    readonly sectionId: FieldRef<"CvMinuteSection", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CvMinuteSection findUnique
   */
  export type CvMinuteSectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteSection to fetch.
     */
    where: CvMinuteSectionWhereUniqueInput
  }

  /**
   * CvMinuteSection findUniqueOrThrow
   */
  export type CvMinuteSectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteSection to fetch.
     */
    where: CvMinuteSectionWhereUniqueInput
  }

  /**
   * CvMinuteSection findFirst
   */
  export type CvMinuteSectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteSection to fetch.
     */
    where?: CvMinuteSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinuteSections to fetch.
     */
    orderBy?: CvMinuteSectionOrderByWithRelationInput | CvMinuteSectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvMinuteSections.
     */
    cursor?: CvMinuteSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinuteSections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinuteSections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvMinuteSections.
     */
    distinct?: CvMinuteSectionScalarFieldEnum | CvMinuteSectionScalarFieldEnum[]
  }

  /**
   * CvMinuteSection findFirstOrThrow
   */
  export type CvMinuteSectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteSection to fetch.
     */
    where?: CvMinuteSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinuteSections to fetch.
     */
    orderBy?: CvMinuteSectionOrderByWithRelationInput | CvMinuteSectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvMinuteSections.
     */
    cursor?: CvMinuteSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinuteSections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinuteSections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvMinuteSections.
     */
    distinct?: CvMinuteSectionScalarFieldEnum | CvMinuteSectionScalarFieldEnum[]
  }

  /**
   * CvMinuteSection findMany
   */
  export type CvMinuteSectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * Filter, which CvMinuteSections to fetch.
     */
    where?: CvMinuteSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvMinuteSections to fetch.
     */
    orderBy?: CvMinuteSectionOrderByWithRelationInput | CvMinuteSectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvMinuteSections.
     */
    cursor?: CvMinuteSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvMinuteSections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvMinuteSections.
     */
    skip?: number
    distinct?: CvMinuteSectionScalarFieldEnum | CvMinuteSectionScalarFieldEnum[]
  }

  /**
   * CvMinuteSection create
   */
  export type CvMinuteSectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * The data needed to create a CvMinuteSection.
     */
    data: XOR<CvMinuteSectionCreateInput, CvMinuteSectionUncheckedCreateInput>
  }

  /**
   * CvMinuteSection createMany
   */
  export type CvMinuteSectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvMinuteSections.
     */
    data: CvMinuteSectionCreateManyInput | CvMinuteSectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvMinuteSection createManyAndReturn
   */
  export type CvMinuteSectionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * The data used to create many CvMinuteSections.
     */
    data: CvMinuteSectionCreateManyInput | CvMinuteSectionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvMinuteSection update
   */
  export type CvMinuteSectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * The data needed to update a CvMinuteSection.
     */
    data: XOR<CvMinuteSectionUpdateInput, CvMinuteSectionUncheckedUpdateInput>
    /**
     * Choose, which CvMinuteSection to update.
     */
    where: CvMinuteSectionWhereUniqueInput
  }

  /**
   * CvMinuteSection updateMany
   */
  export type CvMinuteSectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvMinuteSections.
     */
    data: XOR<CvMinuteSectionUpdateManyMutationInput, CvMinuteSectionUncheckedUpdateManyInput>
    /**
     * Filter which CvMinuteSections to update
     */
    where?: CvMinuteSectionWhereInput
    /**
     * Limit how many CvMinuteSections to update.
     */
    limit?: number
  }

  /**
   * CvMinuteSection updateManyAndReturn
   */
  export type CvMinuteSectionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * The data used to update CvMinuteSections.
     */
    data: XOR<CvMinuteSectionUpdateManyMutationInput, CvMinuteSectionUncheckedUpdateManyInput>
    /**
     * Filter which CvMinuteSections to update
     */
    where?: CvMinuteSectionWhereInput
    /**
     * Limit how many CvMinuteSections to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvMinuteSection upsert
   */
  export type CvMinuteSectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * The filter to search for the CvMinuteSection to update in case it exists.
     */
    where: CvMinuteSectionWhereUniqueInput
    /**
     * In case the CvMinuteSection found by the `where` argument doesn't exist, create a new CvMinuteSection with this data.
     */
    create: XOR<CvMinuteSectionCreateInput, CvMinuteSectionUncheckedCreateInput>
    /**
     * In case the CvMinuteSection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvMinuteSectionUpdateInput, CvMinuteSectionUncheckedUpdateInput>
  }

  /**
   * CvMinuteSection delete
   */
  export type CvMinuteSectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    /**
     * Filter which CvMinuteSection to delete.
     */
    where: CvMinuteSectionWhereUniqueInput
  }

  /**
   * CvMinuteSection deleteMany
   */
  export type CvMinuteSectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvMinuteSections to delete
     */
    where?: CvMinuteSectionWhereInput
    /**
     * Limit how many CvMinuteSections to delete.
     */
    limit?: number
  }

  /**
   * CvMinuteSection.advices
   */
  export type CvMinuteSection$advicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    where?: AdviceWhereInput
    orderBy?: AdviceOrderByWithRelationInput | AdviceOrderByWithRelationInput[]
    cursor?: AdviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdviceScalarFieldEnum | AdviceScalarFieldEnum[]
  }

  /**
   * CvMinuteSection.sectionInfos
   */
  export type CvMinuteSection$sectionInfosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    where?: SectionInfoWhereInput
    orderBy?: SectionInfoOrderByWithRelationInput | SectionInfoOrderByWithRelationInput[]
    cursor?: SectionInfoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SectionInfoScalarFieldEnum | SectionInfoScalarFieldEnum[]
  }

  /**
   * CvMinuteSection without action
   */
  export type CvMinuteSectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
  }


  /**
   * Model SectionInfo
   */

  export type AggregateSectionInfo = {
    _count: SectionInfoCountAggregateOutputType | null
    _avg: SectionInfoAvgAggregateOutputType | null
    _sum: SectionInfoSumAggregateOutputType | null
    _min: SectionInfoMinAggregateOutputType | null
    _max: SectionInfoMaxAggregateOutputType | null
  }

  export type SectionInfoAvgAggregateOutputType = {
    id: number | null
    order: number | null
    iconSize: number | null
    cvMinuteSectionId: number | null
  }

  export type SectionInfoSumAggregateOutputType = {
    id: number | null
    order: number | null
    iconSize: number | null
    cvMinuteSectionId: number | null
  }

  export type SectionInfoMinAggregateOutputType = {
    id: number | null
    order: number | null
    content: string | null
    title: string | null
    company: string | null
    date: string | null
    contrat: string | null
    icon: string | null
    iconSize: number | null
    cvMinuteSectionId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SectionInfoMaxAggregateOutputType = {
    id: number | null
    order: number | null
    content: string | null
    title: string | null
    company: string | null
    date: string | null
    contrat: string | null
    icon: string | null
    iconSize: number | null
    cvMinuteSectionId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SectionInfoCountAggregateOutputType = {
    id: number
    order: number
    content: number
    title: number
    company: number
    date: number
    contrat: number
    icon: number
    iconSize: number
    cvMinuteSectionId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SectionInfoAvgAggregateInputType = {
    id?: true
    order?: true
    iconSize?: true
    cvMinuteSectionId?: true
  }

  export type SectionInfoSumAggregateInputType = {
    id?: true
    order?: true
    iconSize?: true
    cvMinuteSectionId?: true
  }

  export type SectionInfoMinAggregateInputType = {
    id?: true
    order?: true
    content?: true
    title?: true
    company?: true
    date?: true
    contrat?: true
    icon?: true
    iconSize?: true
    cvMinuteSectionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SectionInfoMaxAggregateInputType = {
    id?: true
    order?: true
    content?: true
    title?: true
    company?: true
    date?: true
    contrat?: true
    icon?: true
    iconSize?: true
    cvMinuteSectionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SectionInfoCountAggregateInputType = {
    id?: true
    order?: true
    content?: true
    title?: true
    company?: true
    date?: true
    contrat?: true
    icon?: true
    iconSize?: true
    cvMinuteSectionId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SectionInfoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SectionInfo to aggregate.
     */
    where?: SectionInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SectionInfos to fetch.
     */
    orderBy?: SectionInfoOrderByWithRelationInput | SectionInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SectionInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SectionInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SectionInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SectionInfos
    **/
    _count?: true | SectionInfoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SectionInfoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SectionInfoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SectionInfoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SectionInfoMaxAggregateInputType
  }

  export type GetSectionInfoAggregateType<T extends SectionInfoAggregateArgs> = {
        [P in keyof T & keyof AggregateSectionInfo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSectionInfo[P]>
      : GetScalarType<T[P], AggregateSectionInfo[P]>
  }




  export type SectionInfoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SectionInfoWhereInput
    orderBy?: SectionInfoOrderByWithAggregationInput | SectionInfoOrderByWithAggregationInput[]
    by: SectionInfoScalarFieldEnum[] | SectionInfoScalarFieldEnum
    having?: SectionInfoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SectionInfoCountAggregateInputType | true
    _avg?: SectionInfoAvgAggregateInputType
    _sum?: SectionInfoSumAggregateInputType
    _min?: SectionInfoMinAggregateInputType
    _max?: SectionInfoMaxAggregateInputType
  }

  export type SectionInfoGroupByOutputType = {
    id: number
    order: number | null
    content: string
    title: string | null
    company: string | null
    date: string | null
    contrat: string | null
    icon: string | null
    iconSize: number | null
    cvMinuteSectionId: number
    createdAt: Date
    updatedAt: Date
    _count: SectionInfoCountAggregateOutputType | null
    _avg: SectionInfoAvgAggregateOutputType | null
    _sum: SectionInfoSumAggregateOutputType | null
    _min: SectionInfoMinAggregateOutputType | null
    _max: SectionInfoMaxAggregateOutputType | null
  }

  type GetSectionInfoGroupByPayload<T extends SectionInfoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SectionInfoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SectionInfoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SectionInfoGroupByOutputType[P]>
            : GetScalarType<T[P], SectionInfoGroupByOutputType[P]>
        }
      >
    >


  export type SectionInfoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    content?: boolean
    title?: boolean
    company?: boolean
    date?: boolean
    contrat?: boolean
    icon?: boolean
    iconSize?: boolean
    cvMinuteSectionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    file?: boolean | SectionInfo$fileArgs<ExtArgs>
    advices?: boolean | SectionInfo$advicesArgs<ExtArgs>
    evaluation?: boolean | SectionInfo$evaluationArgs<ExtArgs>
    cvMinuteSection?: boolean | CvMinuteSectionDefaultArgs<ExtArgs>
    qualiCarriereQuestions?: boolean | SectionInfo$qualiCarriereQuestionsArgs<ExtArgs>
    qualiCarriereResponses?: boolean | SectionInfo$qualiCarriereResponsesArgs<ExtArgs>
    qualiCarriereResumes?: boolean | SectionInfo$qualiCarriereResumesArgs<ExtArgs>
    qualiCarriereCompetences?: boolean | SectionInfo$qualiCarriereCompetencesArgs<ExtArgs>
    _count?: boolean | SectionInfoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sectionInfo"]>

  export type SectionInfoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    content?: boolean
    title?: boolean
    company?: boolean
    date?: boolean
    contrat?: boolean
    icon?: boolean
    iconSize?: boolean
    cvMinuteSectionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinuteSection?: boolean | CvMinuteSectionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sectionInfo"]>

  export type SectionInfoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    content?: boolean
    title?: boolean
    company?: boolean
    date?: boolean
    contrat?: boolean
    icon?: boolean
    iconSize?: boolean
    cvMinuteSectionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinuteSection?: boolean | CvMinuteSectionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sectionInfo"]>

  export type SectionInfoSelectScalar = {
    id?: boolean
    order?: boolean
    content?: boolean
    title?: boolean
    company?: boolean
    date?: boolean
    contrat?: boolean
    icon?: boolean
    iconSize?: boolean
    cvMinuteSectionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SectionInfoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order" | "content" | "title" | "company" | "date" | "contrat" | "icon" | "iconSize" | "cvMinuteSectionId" | "createdAt" | "updatedAt", ExtArgs["result"]["sectionInfo"]>
  export type SectionInfoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    file?: boolean | SectionInfo$fileArgs<ExtArgs>
    advices?: boolean | SectionInfo$advicesArgs<ExtArgs>
    evaluation?: boolean | SectionInfo$evaluationArgs<ExtArgs>
    cvMinuteSection?: boolean | CvMinuteSectionDefaultArgs<ExtArgs>
    qualiCarriereQuestions?: boolean | SectionInfo$qualiCarriereQuestionsArgs<ExtArgs>
    qualiCarriereResponses?: boolean | SectionInfo$qualiCarriereResponsesArgs<ExtArgs>
    qualiCarriereResumes?: boolean | SectionInfo$qualiCarriereResumesArgs<ExtArgs>
    qualiCarriereCompetences?: boolean | SectionInfo$qualiCarriereCompetencesArgs<ExtArgs>
    _count?: boolean | SectionInfoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SectionInfoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinuteSection?: boolean | CvMinuteSectionDefaultArgs<ExtArgs>
  }
  export type SectionInfoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinuteSection?: boolean | CvMinuteSectionDefaultArgs<ExtArgs>
  }

  export type $SectionInfoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SectionInfo"
    objects: {
      file: Prisma.$FilePayload<ExtArgs> | null
      advices: Prisma.$AdvicePayload<ExtArgs>[]
      evaluation: Prisma.$EvaluationPayload<ExtArgs> | null
      cvMinuteSection: Prisma.$CvMinuteSectionPayload<ExtArgs>
      qualiCarriereQuestions: Prisma.$QualiCarriereQuestionPayload<ExtArgs>[]
      qualiCarriereResponses: Prisma.$QualiCarriereResponsePayload<ExtArgs>[]
      qualiCarriereResumes: Prisma.$QualiCarriereResumePayload<ExtArgs>[]
      qualiCarriereCompetences: Prisma.$QualiCarriereCompetencePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      order: number | null
      content: string
      title: string | null
      company: string | null
      date: string | null
      contrat: string | null
      icon: string | null
      iconSize: number | null
      cvMinuteSectionId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["sectionInfo"]>
    composites: {}
  }

  type SectionInfoGetPayload<S extends boolean | null | undefined | SectionInfoDefaultArgs> = $Result.GetResult<Prisma.$SectionInfoPayload, S>

  type SectionInfoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SectionInfoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SectionInfoCountAggregateInputType | true
    }

  export interface SectionInfoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SectionInfo'], meta: { name: 'SectionInfo' } }
    /**
     * Find zero or one SectionInfo that matches the filter.
     * @param {SectionInfoFindUniqueArgs} args - Arguments to find a SectionInfo
     * @example
     * // Get one SectionInfo
     * const sectionInfo = await prisma.sectionInfo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SectionInfoFindUniqueArgs>(args: SelectSubset<T, SectionInfoFindUniqueArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SectionInfo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SectionInfoFindUniqueOrThrowArgs} args - Arguments to find a SectionInfo
     * @example
     * // Get one SectionInfo
     * const sectionInfo = await prisma.sectionInfo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SectionInfoFindUniqueOrThrowArgs>(args: SelectSubset<T, SectionInfoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SectionInfo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionInfoFindFirstArgs} args - Arguments to find a SectionInfo
     * @example
     * // Get one SectionInfo
     * const sectionInfo = await prisma.sectionInfo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SectionInfoFindFirstArgs>(args?: SelectSubset<T, SectionInfoFindFirstArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SectionInfo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionInfoFindFirstOrThrowArgs} args - Arguments to find a SectionInfo
     * @example
     * // Get one SectionInfo
     * const sectionInfo = await prisma.sectionInfo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SectionInfoFindFirstOrThrowArgs>(args?: SelectSubset<T, SectionInfoFindFirstOrThrowArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SectionInfos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionInfoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SectionInfos
     * const sectionInfos = await prisma.sectionInfo.findMany()
     * 
     * // Get first 10 SectionInfos
     * const sectionInfos = await prisma.sectionInfo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sectionInfoWithIdOnly = await prisma.sectionInfo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SectionInfoFindManyArgs>(args?: SelectSubset<T, SectionInfoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SectionInfo.
     * @param {SectionInfoCreateArgs} args - Arguments to create a SectionInfo.
     * @example
     * // Create one SectionInfo
     * const SectionInfo = await prisma.sectionInfo.create({
     *   data: {
     *     // ... data to create a SectionInfo
     *   }
     * })
     * 
     */
    create<T extends SectionInfoCreateArgs>(args: SelectSubset<T, SectionInfoCreateArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SectionInfos.
     * @param {SectionInfoCreateManyArgs} args - Arguments to create many SectionInfos.
     * @example
     * // Create many SectionInfos
     * const sectionInfo = await prisma.sectionInfo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SectionInfoCreateManyArgs>(args?: SelectSubset<T, SectionInfoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SectionInfos and returns the data saved in the database.
     * @param {SectionInfoCreateManyAndReturnArgs} args - Arguments to create many SectionInfos.
     * @example
     * // Create many SectionInfos
     * const sectionInfo = await prisma.sectionInfo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SectionInfos and only return the `id`
     * const sectionInfoWithIdOnly = await prisma.sectionInfo.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SectionInfoCreateManyAndReturnArgs>(args?: SelectSubset<T, SectionInfoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SectionInfo.
     * @param {SectionInfoDeleteArgs} args - Arguments to delete one SectionInfo.
     * @example
     * // Delete one SectionInfo
     * const SectionInfo = await prisma.sectionInfo.delete({
     *   where: {
     *     // ... filter to delete one SectionInfo
     *   }
     * })
     * 
     */
    delete<T extends SectionInfoDeleteArgs>(args: SelectSubset<T, SectionInfoDeleteArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SectionInfo.
     * @param {SectionInfoUpdateArgs} args - Arguments to update one SectionInfo.
     * @example
     * // Update one SectionInfo
     * const sectionInfo = await prisma.sectionInfo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SectionInfoUpdateArgs>(args: SelectSubset<T, SectionInfoUpdateArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SectionInfos.
     * @param {SectionInfoDeleteManyArgs} args - Arguments to filter SectionInfos to delete.
     * @example
     * // Delete a few SectionInfos
     * const { count } = await prisma.sectionInfo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SectionInfoDeleteManyArgs>(args?: SelectSubset<T, SectionInfoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SectionInfos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionInfoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SectionInfos
     * const sectionInfo = await prisma.sectionInfo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SectionInfoUpdateManyArgs>(args: SelectSubset<T, SectionInfoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SectionInfos and returns the data updated in the database.
     * @param {SectionInfoUpdateManyAndReturnArgs} args - Arguments to update many SectionInfos.
     * @example
     * // Update many SectionInfos
     * const sectionInfo = await prisma.sectionInfo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SectionInfos and only return the `id`
     * const sectionInfoWithIdOnly = await prisma.sectionInfo.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SectionInfoUpdateManyAndReturnArgs>(args: SelectSubset<T, SectionInfoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SectionInfo.
     * @param {SectionInfoUpsertArgs} args - Arguments to update or create a SectionInfo.
     * @example
     * // Update or create a SectionInfo
     * const sectionInfo = await prisma.sectionInfo.upsert({
     *   create: {
     *     // ... data to create a SectionInfo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SectionInfo we want to update
     *   }
     * })
     */
    upsert<T extends SectionInfoUpsertArgs>(args: SelectSubset<T, SectionInfoUpsertArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SectionInfos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionInfoCountArgs} args - Arguments to filter SectionInfos to count.
     * @example
     * // Count the number of SectionInfos
     * const count = await prisma.sectionInfo.count({
     *   where: {
     *     // ... the filter for the SectionInfos we want to count
     *   }
     * })
    **/
    count<T extends SectionInfoCountArgs>(
      args?: Subset<T, SectionInfoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SectionInfoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SectionInfo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionInfoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SectionInfoAggregateArgs>(args: Subset<T, SectionInfoAggregateArgs>): Prisma.PrismaPromise<GetSectionInfoAggregateType<T>>

    /**
     * Group by SectionInfo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionInfoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SectionInfoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SectionInfoGroupByArgs['orderBy'] }
        : { orderBy?: SectionInfoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SectionInfoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSectionInfoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SectionInfo model
   */
  readonly fields: SectionInfoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SectionInfo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SectionInfoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    file<T extends SectionInfo$fileArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfo$fileArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    advices<T extends SectionInfo$advicesArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfo$advicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    evaluation<T extends SectionInfo$evaluationArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfo$evaluationArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cvMinuteSection<T extends CvMinuteSectionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvMinuteSectionDefaultArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    qualiCarriereQuestions<T extends SectionInfo$qualiCarriereQuestionsArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfo$qualiCarriereQuestionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualiCarriereResponses<T extends SectionInfo$qualiCarriereResponsesArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfo$qualiCarriereResponsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualiCarriereResumes<T extends SectionInfo$qualiCarriereResumesArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfo$qualiCarriereResumesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    qualiCarriereCompetences<T extends SectionInfo$qualiCarriereCompetencesArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfo$qualiCarriereCompetencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SectionInfo model
   */
  interface SectionInfoFieldRefs {
    readonly id: FieldRef<"SectionInfo", 'Int'>
    readonly order: FieldRef<"SectionInfo", 'Int'>
    readonly content: FieldRef<"SectionInfo", 'String'>
    readonly title: FieldRef<"SectionInfo", 'String'>
    readonly company: FieldRef<"SectionInfo", 'String'>
    readonly date: FieldRef<"SectionInfo", 'String'>
    readonly contrat: FieldRef<"SectionInfo", 'String'>
    readonly icon: FieldRef<"SectionInfo", 'String'>
    readonly iconSize: FieldRef<"SectionInfo", 'Int'>
    readonly cvMinuteSectionId: FieldRef<"SectionInfo", 'Int'>
    readonly createdAt: FieldRef<"SectionInfo", 'DateTime'>
    readonly updatedAt: FieldRef<"SectionInfo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SectionInfo findUnique
   */
  export type SectionInfoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * Filter, which SectionInfo to fetch.
     */
    where: SectionInfoWhereUniqueInput
  }

  /**
   * SectionInfo findUniqueOrThrow
   */
  export type SectionInfoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * Filter, which SectionInfo to fetch.
     */
    where: SectionInfoWhereUniqueInput
  }

  /**
   * SectionInfo findFirst
   */
  export type SectionInfoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * Filter, which SectionInfo to fetch.
     */
    where?: SectionInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SectionInfos to fetch.
     */
    orderBy?: SectionInfoOrderByWithRelationInput | SectionInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SectionInfos.
     */
    cursor?: SectionInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SectionInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SectionInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SectionInfos.
     */
    distinct?: SectionInfoScalarFieldEnum | SectionInfoScalarFieldEnum[]
  }

  /**
   * SectionInfo findFirstOrThrow
   */
  export type SectionInfoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * Filter, which SectionInfo to fetch.
     */
    where?: SectionInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SectionInfos to fetch.
     */
    orderBy?: SectionInfoOrderByWithRelationInput | SectionInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SectionInfos.
     */
    cursor?: SectionInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SectionInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SectionInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SectionInfos.
     */
    distinct?: SectionInfoScalarFieldEnum | SectionInfoScalarFieldEnum[]
  }

  /**
   * SectionInfo findMany
   */
  export type SectionInfoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * Filter, which SectionInfos to fetch.
     */
    where?: SectionInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SectionInfos to fetch.
     */
    orderBy?: SectionInfoOrderByWithRelationInput | SectionInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SectionInfos.
     */
    cursor?: SectionInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SectionInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SectionInfos.
     */
    skip?: number
    distinct?: SectionInfoScalarFieldEnum | SectionInfoScalarFieldEnum[]
  }

  /**
   * SectionInfo create
   */
  export type SectionInfoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * The data needed to create a SectionInfo.
     */
    data: XOR<SectionInfoCreateInput, SectionInfoUncheckedCreateInput>
  }

  /**
   * SectionInfo createMany
   */
  export type SectionInfoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SectionInfos.
     */
    data: SectionInfoCreateManyInput | SectionInfoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SectionInfo createManyAndReturn
   */
  export type SectionInfoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * The data used to create many SectionInfos.
     */
    data: SectionInfoCreateManyInput | SectionInfoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SectionInfo update
   */
  export type SectionInfoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * The data needed to update a SectionInfo.
     */
    data: XOR<SectionInfoUpdateInput, SectionInfoUncheckedUpdateInput>
    /**
     * Choose, which SectionInfo to update.
     */
    where: SectionInfoWhereUniqueInput
  }

  /**
   * SectionInfo updateMany
   */
  export type SectionInfoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SectionInfos.
     */
    data: XOR<SectionInfoUpdateManyMutationInput, SectionInfoUncheckedUpdateManyInput>
    /**
     * Filter which SectionInfos to update
     */
    where?: SectionInfoWhereInput
    /**
     * Limit how many SectionInfos to update.
     */
    limit?: number
  }

  /**
   * SectionInfo updateManyAndReturn
   */
  export type SectionInfoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * The data used to update SectionInfos.
     */
    data: XOR<SectionInfoUpdateManyMutationInput, SectionInfoUncheckedUpdateManyInput>
    /**
     * Filter which SectionInfos to update
     */
    where?: SectionInfoWhereInput
    /**
     * Limit how many SectionInfos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SectionInfo upsert
   */
  export type SectionInfoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * The filter to search for the SectionInfo to update in case it exists.
     */
    where: SectionInfoWhereUniqueInput
    /**
     * In case the SectionInfo found by the `where` argument doesn't exist, create a new SectionInfo with this data.
     */
    create: XOR<SectionInfoCreateInput, SectionInfoUncheckedCreateInput>
    /**
     * In case the SectionInfo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SectionInfoUpdateInput, SectionInfoUncheckedUpdateInput>
  }

  /**
   * SectionInfo delete
   */
  export type SectionInfoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    /**
     * Filter which SectionInfo to delete.
     */
    where: SectionInfoWhereUniqueInput
  }

  /**
   * SectionInfo deleteMany
   */
  export type SectionInfoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SectionInfos to delete
     */
    where?: SectionInfoWhereInput
    /**
     * Limit how many SectionInfos to delete.
     */
    limit?: number
  }

  /**
   * SectionInfo.file
   */
  export type SectionInfo$fileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
  }

  /**
   * SectionInfo.advices
   */
  export type SectionInfo$advicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    where?: AdviceWhereInput
    orderBy?: AdviceOrderByWithRelationInput | AdviceOrderByWithRelationInput[]
    cursor?: AdviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AdviceScalarFieldEnum | AdviceScalarFieldEnum[]
  }

  /**
   * SectionInfo.evaluation
   */
  export type SectionInfo$evaluationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    where?: EvaluationWhereInput
  }

  /**
   * SectionInfo.qualiCarriereQuestions
   */
  export type SectionInfo$qualiCarriereQuestionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    where?: QualiCarriereQuestionWhereInput
    orderBy?: QualiCarriereQuestionOrderByWithRelationInput | QualiCarriereQuestionOrderByWithRelationInput[]
    cursor?: QualiCarriereQuestionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereQuestionScalarFieldEnum | QualiCarriereQuestionScalarFieldEnum[]
  }

  /**
   * SectionInfo.qualiCarriereResponses
   */
  export type SectionInfo$qualiCarriereResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    where?: QualiCarriereResponseWhereInput
    orderBy?: QualiCarriereResponseOrderByWithRelationInput | QualiCarriereResponseOrderByWithRelationInput[]
    cursor?: QualiCarriereResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereResponseScalarFieldEnum | QualiCarriereResponseScalarFieldEnum[]
  }

  /**
   * SectionInfo.qualiCarriereResumes
   */
  export type SectionInfo$qualiCarriereResumesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    where?: QualiCarriereResumeWhereInput
    orderBy?: QualiCarriereResumeOrderByWithRelationInput | QualiCarriereResumeOrderByWithRelationInput[]
    cursor?: QualiCarriereResumeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereResumeScalarFieldEnum | QualiCarriereResumeScalarFieldEnum[]
  }

  /**
   * SectionInfo.qualiCarriereCompetences
   */
  export type SectionInfo$qualiCarriereCompetencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    where?: QualiCarriereCompetenceWhereInput
    orderBy?: QualiCarriereCompetenceOrderByWithRelationInput | QualiCarriereCompetenceOrderByWithRelationInput[]
    cursor?: QualiCarriereCompetenceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: QualiCarriereCompetenceScalarFieldEnum | QualiCarriereCompetenceScalarFieldEnum[]
  }

  /**
   * SectionInfo without action
   */
  export type SectionInfoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
  }


  /**
   * Model Advice
   */

  export type AggregateAdvice = {
    _count: AdviceCountAggregateOutputType | null
    _avg: AdviceAvgAggregateOutputType | null
    _sum: AdviceSumAggregateOutputType | null
    _min: AdviceMinAggregateOutputType | null
    _max: AdviceMaxAggregateOutputType | null
  }

  export type AdviceAvgAggregateOutputType = {
    id: number | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    cvMinuteSectionId: number | null
  }

  export type AdviceSumAggregateOutputType = {
    id: number | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    cvMinuteSectionId: number | null
  }

  export type AdviceMinAggregateOutputType = {
    id: number | null
    type: string | null
    content: string | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    cvMinuteSectionId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AdviceMaxAggregateOutputType = {
    id: number | null
    type: string | null
    content: string | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    cvMinuteSectionId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AdviceCountAggregateOutputType = {
    id: number
    type: number
    content: number
    cvMinuteId: number
    sectionInfoId: number
    cvMinuteSectionId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AdviceAvgAggregateInputType = {
    id?: true
    cvMinuteId?: true
    sectionInfoId?: true
    cvMinuteSectionId?: true
  }

  export type AdviceSumAggregateInputType = {
    id?: true
    cvMinuteId?: true
    sectionInfoId?: true
    cvMinuteSectionId?: true
  }

  export type AdviceMinAggregateInputType = {
    id?: true
    type?: true
    content?: true
    cvMinuteId?: true
    sectionInfoId?: true
    cvMinuteSectionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AdviceMaxAggregateInputType = {
    id?: true
    type?: true
    content?: true
    cvMinuteId?: true
    sectionInfoId?: true
    cvMinuteSectionId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AdviceCountAggregateInputType = {
    id?: true
    type?: true
    content?: true
    cvMinuteId?: true
    sectionInfoId?: true
    cvMinuteSectionId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AdviceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Advice to aggregate.
     */
    where?: AdviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Advice to fetch.
     */
    orderBy?: AdviceOrderByWithRelationInput | AdviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Advice from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Advice.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Advice
    **/
    _count?: true | AdviceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdviceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdviceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdviceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdviceMaxAggregateInputType
  }

  export type GetAdviceAggregateType<T extends AdviceAggregateArgs> = {
        [P in keyof T & keyof AggregateAdvice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdvice[P]>
      : GetScalarType<T[P], AggregateAdvice[P]>
  }




  export type AdviceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdviceWhereInput
    orderBy?: AdviceOrderByWithAggregationInput | AdviceOrderByWithAggregationInput[]
    by: AdviceScalarFieldEnum[] | AdviceScalarFieldEnum
    having?: AdviceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdviceCountAggregateInputType | true
    _avg?: AdviceAvgAggregateInputType
    _sum?: AdviceSumAggregateInputType
    _min?: AdviceMinAggregateInputType
    _max?: AdviceMaxAggregateInputType
  }

  export type AdviceGroupByOutputType = {
    id: number
    type: string
    content: string
    cvMinuteId: number | null
    sectionInfoId: number | null
    cvMinuteSectionId: number | null
    createdAt: Date
    updatedAt: Date
    _count: AdviceCountAggregateOutputType | null
    _avg: AdviceAvgAggregateOutputType | null
    _sum: AdviceSumAggregateOutputType | null
    _min: AdviceMinAggregateOutputType | null
    _max: AdviceMaxAggregateOutputType | null
  }

  type GetAdviceGroupByPayload<T extends AdviceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdviceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdviceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdviceGroupByOutputType[P]>
            : GetScalarType<T[P], AdviceGroupByOutputType[P]>
        }
      >
    >


  export type AdviceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    cvMinuteSectionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | Advice$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Advice$sectionInfoArgs<ExtArgs>
    cvMinuteSection?: boolean | Advice$cvMinuteSectionArgs<ExtArgs>
  }, ExtArgs["result"]["advice"]>

  export type AdviceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    cvMinuteSectionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | Advice$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Advice$sectionInfoArgs<ExtArgs>
    cvMinuteSection?: boolean | Advice$cvMinuteSectionArgs<ExtArgs>
  }, ExtArgs["result"]["advice"]>

  export type AdviceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    cvMinuteSectionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | Advice$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Advice$sectionInfoArgs<ExtArgs>
    cvMinuteSection?: boolean | Advice$cvMinuteSectionArgs<ExtArgs>
  }, ExtArgs["result"]["advice"]>

  export type AdviceSelectScalar = {
    id?: boolean
    type?: boolean
    content?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    cvMinuteSectionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AdviceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "content" | "cvMinuteId" | "sectionInfoId" | "cvMinuteSectionId" | "createdAt" | "updatedAt", ExtArgs["result"]["advice"]>
  export type AdviceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | Advice$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Advice$sectionInfoArgs<ExtArgs>
    cvMinuteSection?: boolean | Advice$cvMinuteSectionArgs<ExtArgs>
  }
  export type AdviceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | Advice$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Advice$sectionInfoArgs<ExtArgs>
    cvMinuteSection?: boolean | Advice$cvMinuteSectionArgs<ExtArgs>
  }
  export type AdviceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | Advice$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Advice$sectionInfoArgs<ExtArgs>
    cvMinuteSection?: boolean | Advice$cvMinuteSectionArgs<ExtArgs>
  }

  export type $AdvicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Advice"
    objects: {
      cvMinute: Prisma.$CvMinutePayload<ExtArgs> | null
      sectionInfo: Prisma.$SectionInfoPayload<ExtArgs> | null
      cvMinuteSection: Prisma.$CvMinuteSectionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: string
      content: string
      cvMinuteId: number | null
      sectionInfoId: number | null
      cvMinuteSectionId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["advice"]>
    composites: {}
  }

  type AdviceGetPayload<S extends boolean | null | undefined | AdviceDefaultArgs> = $Result.GetResult<Prisma.$AdvicePayload, S>

  type AdviceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AdviceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AdviceCountAggregateInputType | true
    }

  export interface AdviceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Advice'], meta: { name: 'Advice' } }
    /**
     * Find zero or one Advice that matches the filter.
     * @param {AdviceFindUniqueArgs} args - Arguments to find a Advice
     * @example
     * // Get one Advice
     * const advice = await prisma.advice.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdviceFindUniqueArgs>(args: SelectSubset<T, AdviceFindUniqueArgs<ExtArgs>>): Prisma__AdviceClient<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Advice that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AdviceFindUniqueOrThrowArgs} args - Arguments to find a Advice
     * @example
     * // Get one Advice
     * const advice = await prisma.advice.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdviceFindUniqueOrThrowArgs>(args: SelectSubset<T, AdviceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdviceClient<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Advice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdviceFindFirstArgs} args - Arguments to find a Advice
     * @example
     * // Get one Advice
     * const advice = await prisma.advice.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdviceFindFirstArgs>(args?: SelectSubset<T, AdviceFindFirstArgs<ExtArgs>>): Prisma__AdviceClient<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Advice that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdviceFindFirstOrThrowArgs} args - Arguments to find a Advice
     * @example
     * // Get one Advice
     * const advice = await prisma.advice.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdviceFindFirstOrThrowArgs>(args?: SelectSubset<T, AdviceFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdviceClient<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Advice that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdviceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Advice
     * const advice = await prisma.advice.findMany()
     * 
     * // Get first 10 Advice
     * const advice = await prisma.advice.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adviceWithIdOnly = await prisma.advice.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdviceFindManyArgs>(args?: SelectSubset<T, AdviceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Advice.
     * @param {AdviceCreateArgs} args - Arguments to create a Advice.
     * @example
     * // Create one Advice
     * const Advice = await prisma.advice.create({
     *   data: {
     *     // ... data to create a Advice
     *   }
     * })
     * 
     */
    create<T extends AdviceCreateArgs>(args: SelectSubset<T, AdviceCreateArgs<ExtArgs>>): Prisma__AdviceClient<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Advice.
     * @param {AdviceCreateManyArgs} args - Arguments to create many Advice.
     * @example
     * // Create many Advice
     * const advice = await prisma.advice.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdviceCreateManyArgs>(args?: SelectSubset<T, AdviceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Advice and returns the data saved in the database.
     * @param {AdviceCreateManyAndReturnArgs} args - Arguments to create many Advice.
     * @example
     * // Create many Advice
     * const advice = await prisma.advice.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Advice and only return the `id`
     * const adviceWithIdOnly = await prisma.advice.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdviceCreateManyAndReturnArgs>(args?: SelectSubset<T, AdviceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Advice.
     * @param {AdviceDeleteArgs} args - Arguments to delete one Advice.
     * @example
     * // Delete one Advice
     * const Advice = await prisma.advice.delete({
     *   where: {
     *     // ... filter to delete one Advice
     *   }
     * })
     * 
     */
    delete<T extends AdviceDeleteArgs>(args: SelectSubset<T, AdviceDeleteArgs<ExtArgs>>): Prisma__AdviceClient<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Advice.
     * @param {AdviceUpdateArgs} args - Arguments to update one Advice.
     * @example
     * // Update one Advice
     * const advice = await prisma.advice.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdviceUpdateArgs>(args: SelectSubset<T, AdviceUpdateArgs<ExtArgs>>): Prisma__AdviceClient<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Advice.
     * @param {AdviceDeleteManyArgs} args - Arguments to filter Advice to delete.
     * @example
     * // Delete a few Advice
     * const { count } = await prisma.advice.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdviceDeleteManyArgs>(args?: SelectSubset<T, AdviceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Advice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdviceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Advice
     * const advice = await prisma.advice.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdviceUpdateManyArgs>(args: SelectSubset<T, AdviceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Advice and returns the data updated in the database.
     * @param {AdviceUpdateManyAndReturnArgs} args - Arguments to update many Advice.
     * @example
     * // Update many Advice
     * const advice = await prisma.advice.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Advice and only return the `id`
     * const adviceWithIdOnly = await prisma.advice.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AdviceUpdateManyAndReturnArgs>(args: SelectSubset<T, AdviceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Advice.
     * @param {AdviceUpsertArgs} args - Arguments to update or create a Advice.
     * @example
     * // Update or create a Advice
     * const advice = await prisma.advice.upsert({
     *   create: {
     *     // ... data to create a Advice
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Advice we want to update
     *   }
     * })
     */
    upsert<T extends AdviceUpsertArgs>(args: SelectSubset<T, AdviceUpsertArgs<ExtArgs>>): Prisma__AdviceClient<$Result.GetResult<Prisma.$AdvicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Advice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdviceCountArgs} args - Arguments to filter Advice to count.
     * @example
     * // Count the number of Advice
     * const count = await prisma.advice.count({
     *   where: {
     *     // ... the filter for the Advice we want to count
     *   }
     * })
    **/
    count<T extends AdviceCountArgs>(
      args?: Subset<T, AdviceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdviceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Advice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdviceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdviceAggregateArgs>(args: Subset<T, AdviceAggregateArgs>): Prisma.PrismaPromise<GetAdviceAggregateType<T>>

    /**
     * Group by Advice.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdviceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdviceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdviceGroupByArgs['orderBy'] }
        : { orderBy?: AdviceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdviceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdviceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Advice model
   */
  readonly fields: AdviceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Advice.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdviceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cvMinute<T extends Advice$cvMinuteArgs<ExtArgs> = {}>(args?: Subset<T, Advice$cvMinuteArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sectionInfo<T extends Advice$sectionInfoArgs<ExtArgs> = {}>(args?: Subset<T, Advice$sectionInfoArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cvMinuteSection<T extends Advice$cvMinuteSectionArgs<ExtArgs> = {}>(args?: Subset<T, Advice$cvMinuteSectionArgs<ExtArgs>>): Prisma__CvMinuteSectionClient<$Result.GetResult<Prisma.$CvMinuteSectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Advice model
   */
  interface AdviceFieldRefs {
    readonly id: FieldRef<"Advice", 'Int'>
    readonly type: FieldRef<"Advice", 'String'>
    readonly content: FieldRef<"Advice", 'String'>
    readonly cvMinuteId: FieldRef<"Advice", 'Int'>
    readonly sectionInfoId: FieldRef<"Advice", 'Int'>
    readonly cvMinuteSectionId: FieldRef<"Advice", 'Int'>
    readonly createdAt: FieldRef<"Advice", 'DateTime'>
    readonly updatedAt: FieldRef<"Advice", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Advice findUnique
   */
  export type AdviceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * Filter, which Advice to fetch.
     */
    where: AdviceWhereUniqueInput
  }

  /**
   * Advice findUniqueOrThrow
   */
  export type AdviceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * Filter, which Advice to fetch.
     */
    where: AdviceWhereUniqueInput
  }

  /**
   * Advice findFirst
   */
  export type AdviceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * Filter, which Advice to fetch.
     */
    where?: AdviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Advice to fetch.
     */
    orderBy?: AdviceOrderByWithRelationInput | AdviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Advice.
     */
    cursor?: AdviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Advice from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Advice.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Advice.
     */
    distinct?: AdviceScalarFieldEnum | AdviceScalarFieldEnum[]
  }

  /**
   * Advice findFirstOrThrow
   */
  export type AdviceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * Filter, which Advice to fetch.
     */
    where?: AdviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Advice to fetch.
     */
    orderBy?: AdviceOrderByWithRelationInput | AdviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Advice.
     */
    cursor?: AdviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Advice from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Advice.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Advice.
     */
    distinct?: AdviceScalarFieldEnum | AdviceScalarFieldEnum[]
  }

  /**
   * Advice findMany
   */
  export type AdviceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * Filter, which Advice to fetch.
     */
    where?: AdviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Advice to fetch.
     */
    orderBy?: AdviceOrderByWithRelationInput | AdviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Advice.
     */
    cursor?: AdviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Advice from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Advice.
     */
    skip?: number
    distinct?: AdviceScalarFieldEnum | AdviceScalarFieldEnum[]
  }

  /**
   * Advice create
   */
  export type AdviceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * The data needed to create a Advice.
     */
    data: XOR<AdviceCreateInput, AdviceUncheckedCreateInput>
  }

  /**
   * Advice createMany
   */
  export type AdviceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Advice.
     */
    data: AdviceCreateManyInput | AdviceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Advice createManyAndReturn
   */
  export type AdviceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * The data used to create many Advice.
     */
    data: AdviceCreateManyInput | AdviceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Advice update
   */
  export type AdviceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * The data needed to update a Advice.
     */
    data: XOR<AdviceUpdateInput, AdviceUncheckedUpdateInput>
    /**
     * Choose, which Advice to update.
     */
    where: AdviceWhereUniqueInput
  }

  /**
   * Advice updateMany
   */
  export type AdviceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Advice.
     */
    data: XOR<AdviceUpdateManyMutationInput, AdviceUncheckedUpdateManyInput>
    /**
     * Filter which Advice to update
     */
    where?: AdviceWhereInput
    /**
     * Limit how many Advice to update.
     */
    limit?: number
  }

  /**
   * Advice updateManyAndReturn
   */
  export type AdviceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * The data used to update Advice.
     */
    data: XOR<AdviceUpdateManyMutationInput, AdviceUncheckedUpdateManyInput>
    /**
     * Filter which Advice to update
     */
    where?: AdviceWhereInput
    /**
     * Limit how many Advice to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Advice upsert
   */
  export type AdviceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * The filter to search for the Advice to update in case it exists.
     */
    where: AdviceWhereUniqueInput
    /**
     * In case the Advice found by the `where` argument doesn't exist, create a new Advice with this data.
     */
    create: XOR<AdviceCreateInput, AdviceUncheckedCreateInput>
    /**
     * In case the Advice was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdviceUpdateInput, AdviceUncheckedUpdateInput>
  }

  /**
   * Advice delete
   */
  export type AdviceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
    /**
     * Filter which Advice to delete.
     */
    where: AdviceWhereUniqueInput
  }

  /**
   * Advice deleteMany
   */
  export type AdviceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Advice to delete
     */
    where?: AdviceWhereInput
    /**
     * Limit how many Advice to delete.
     */
    limit?: number
  }

  /**
   * Advice.cvMinute
   */
  export type Advice$cvMinuteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    where?: CvMinuteWhereInput
  }

  /**
   * Advice.sectionInfo
   */
  export type Advice$sectionInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    where?: SectionInfoWhereInput
  }

  /**
   * Advice.cvMinuteSection
   */
  export type Advice$cvMinuteSectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinuteSection
     */
    select?: CvMinuteSectionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinuteSection
     */
    omit?: CvMinuteSectionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteSectionInclude<ExtArgs> | null
    where?: CvMinuteSectionWhereInput
  }

  /**
   * Advice without action
   */
  export type AdviceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Advice
     */
    select?: AdviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Advice
     */
    omit?: AdviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdviceInclude<ExtArgs> | null
  }


  /**
   * Model Evaluation
   */

  export type AggregateEvaluation = {
    _count: EvaluationCountAggregateOutputType | null
    _avg: EvaluationAvgAggregateOutputType | null
    _sum: EvaluationSumAggregateOutputType | null
    _min: EvaluationMinAggregateOutputType | null
    _max: EvaluationMaxAggregateOutputType | null
  }

  export type EvaluationAvgAggregateOutputType = {
    id: number | null
    initialScore: number | null
    actualScore: number | null
    cvMinuteId: number | null
    sectionInfoId: number | null
  }

  export type EvaluationSumAggregateOutputType = {
    id: number | null
    initialScore: number | null
    actualScore: number | null
    cvMinuteId: number | null
    sectionInfoId: number | null
  }

  export type EvaluationMinAggregateOutputType = {
    id: number | null
    initialScore: number | null
    actualScore: number | null
    content: string | null
    weakContent: string | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EvaluationMaxAggregateOutputType = {
    id: number | null
    initialScore: number | null
    actualScore: number | null
    content: string | null
    weakContent: string | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EvaluationCountAggregateOutputType = {
    id: number
    initialScore: number
    actualScore: number
    content: number
    weakContent: number
    cvMinuteId: number
    sectionInfoId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EvaluationAvgAggregateInputType = {
    id?: true
    initialScore?: true
    actualScore?: true
    cvMinuteId?: true
    sectionInfoId?: true
  }

  export type EvaluationSumAggregateInputType = {
    id?: true
    initialScore?: true
    actualScore?: true
    cvMinuteId?: true
    sectionInfoId?: true
  }

  export type EvaluationMinAggregateInputType = {
    id?: true
    initialScore?: true
    actualScore?: true
    content?: true
    weakContent?: true
    cvMinuteId?: true
    sectionInfoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EvaluationMaxAggregateInputType = {
    id?: true
    initialScore?: true
    actualScore?: true
    content?: true
    weakContent?: true
    cvMinuteId?: true
    sectionInfoId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EvaluationCountAggregateInputType = {
    id?: true
    initialScore?: true
    actualScore?: true
    content?: true
    weakContent?: true
    cvMinuteId?: true
    sectionInfoId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EvaluationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Evaluation to aggregate.
     */
    where?: EvaluationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluations to fetch.
     */
    orderBy?: EvaluationOrderByWithRelationInput | EvaluationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EvaluationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Evaluations
    **/
    _count?: true | EvaluationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EvaluationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EvaluationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EvaluationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EvaluationMaxAggregateInputType
  }

  export type GetEvaluationAggregateType<T extends EvaluationAggregateArgs> = {
        [P in keyof T & keyof AggregateEvaluation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvaluation[P]>
      : GetScalarType<T[P], AggregateEvaluation[P]>
  }




  export type EvaluationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EvaluationWhereInput
    orderBy?: EvaluationOrderByWithAggregationInput | EvaluationOrderByWithAggregationInput[]
    by: EvaluationScalarFieldEnum[] | EvaluationScalarFieldEnum
    having?: EvaluationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EvaluationCountAggregateInputType | true
    _avg?: EvaluationAvgAggregateInputType
    _sum?: EvaluationSumAggregateInputType
    _min?: EvaluationMinAggregateInputType
    _max?: EvaluationMaxAggregateInputType
  }

  export type EvaluationGroupByOutputType = {
    id: number
    initialScore: number
    actualScore: number | null
    content: string
    weakContent: string | null
    cvMinuteId: number | null
    sectionInfoId: number | null
    createdAt: Date
    updatedAt: Date
    _count: EvaluationCountAggregateOutputType | null
    _avg: EvaluationAvgAggregateOutputType | null
    _sum: EvaluationSumAggregateOutputType | null
    _min: EvaluationMinAggregateOutputType | null
    _max: EvaluationMaxAggregateOutputType | null
  }

  type GetEvaluationGroupByPayload<T extends EvaluationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EvaluationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EvaluationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EvaluationGroupByOutputType[P]>
            : GetScalarType<T[P], EvaluationGroupByOutputType[P]>
        }
      >
    >


  export type EvaluationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    initialScore?: boolean
    actualScore?: boolean
    content?: boolean
    weakContent?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | Evaluation$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Evaluation$sectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["evaluation"]>

  export type EvaluationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    initialScore?: boolean
    actualScore?: boolean
    content?: boolean
    weakContent?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | Evaluation$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Evaluation$sectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["evaluation"]>

  export type EvaluationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    initialScore?: boolean
    actualScore?: boolean
    content?: boolean
    weakContent?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | Evaluation$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Evaluation$sectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["evaluation"]>

  export type EvaluationSelectScalar = {
    id?: boolean
    initialScore?: boolean
    actualScore?: boolean
    content?: boolean
    weakContent?: boolean
    cvMinuteId?: boolean
    sectionInfoId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EvaluationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "initialScore" | "actualScore" | "content" | "weakContent" | "cvMinuteId" | "sectionInfoId" | "createdAt" | "updatedAt", ExtArgs["result"]["evaluation"]>
  export type EvaluationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | Evaluation$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Evaluation$sectionInfoArgs<ExtArgs>
  }
  export type EvaluationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | Evaluation$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Evaluation$sectionInfoArgs<ExtArgs>
  }
  export type EvaluationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | Evaluation$cvMinuteArgs<ExtArgs>
    sectionInfo?: boolean | Evaluation$sectionInfoArgs<ExtArgs>
  }

  export type $EvaluationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Evaluation"
    objects: {
      cvMinute: Prisma.$CvMinutePayload<ExtArgs> | null
      sectionInfo: Prisma.$SectionInfoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      initialScore: number
      actualScore: number | null
      content: string
      weakContent: string | null
      cvMinuteId: number | null
      sectionInfoId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["evaluation"]>
    composites: {}
  }

  type EvaluationGetPayload<S extends boolean | null | undefined | EvaluationDefaultArgs> = $Result.GetResult<Prisma.$EvaluationPayload, S>

  type EvaluationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EvaluationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EvaluationCountAggregateInputType | true
    }

  export interface EvaluationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Evaluation'], meta: { name: 'Evaluation' } }
    /**
     * Find zero or one Evaluation that matches the filter.
     * @param {EvaluationFindUniqueArgs} args - Arguments to find a Evaluation
     * @example
     * // Get one Evaluation
     * const evaluation = await prisma.evaluation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EvaluationFindUniqueArgs>(args: SelectSubset<T, EvaluationFindUniqueArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Evaluation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EvaluationFindUniqueOrThrowArgs} args - Arguments to find a Evaluation
     * @example
     * // Get one Evaluation
     * const evaluation = await prisma.evaluation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EvaluationFindUniqueOrThrowArgs>(args: SelectSubset<T, EvaluationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evaluation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluationFindFirstArgs} args - Arguments to find a Evaluation
     * @example
     * // Get one Evaluation
     * const evaluation = await prisma.evaluation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EvaluationFindFirstArgs>(args?: SelectSubset<T, EvaluationFindFirstArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evaluation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluationFindFirstOrThrowArgs} args - Arguments to find a Evaluation
     * @example
     * // Get one Evaluation
     * const evaluation = await prisma.evaluation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EvaluationFindFirstOrThrowArgs>(args?: SelectSubset<T, EvaluationFindFirstOrThrowArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Evaluations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Evaluations
     * const evaluations = await prisma.evaluation.findMany()
     * 
     * // Get first 10 Evaluations
     * const evaluations = await prisma.evaluation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const evaluationWithIdOnly = await prisma.evaluation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EvaluationFindManyArgs>(args?: SelectSubset<T, EvaluationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Evaluation.
     * @param {EvaluationCreateArgs} args - Arguments to create a Evaluation.
     * @example
     * // Create one Evaluation
     * const Evaluation = await prisma.evaluation.create({
     *   data: {
     *     // ... data to create a Evaluation
     *   }
     * })
     * 
     */
    create<T extends EvaluationCreateArgs>(args: SelectSubset<T, EvaluationCreateArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Evaluations.
     * @param {EvaluationCreateManyArgs} args - Arguments to create many Evaluations.
     * @example
     * // Create many Evaluations
     * const evaluation = await prisma.evaluation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EvaluationCreateManyArgs>(args?: SelectSubset<T, EvaluationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Evaluations and returns the data saved in the database.
     * @param {EvaluationCreateManyAndReturnArgs} args - Arguments to create many Evaluations.
     * @example
     * // Create many Evaluations
     * const evaluation = await prisma.evaluation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Evaluations and only return the `id`
     * const evaluationWithIdOnly = await prisma.evaluation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EvaluationCreateManyAndReturnArgs>(args?: SelectSubset<T, EvaluationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Evaluation.
     * @param {EvaluationDeleteArgs} args - Arguments to delete one Evaluation.
     * @example
     * // Delete one Evaluation
     * const Evaluation = await prisma.evaluation.delete({
     *   where: {
     *     // ... filter to delete one Evaluation
     *   }
     * })
     * 
     */
    delete<T extends EvaluationDeleteArgs>(args: SelectSubset<T, EvaluationDeleteArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Evaluation.
     * @param {EvaluationUpdateArgs} args - Arguments to update one Evaluation.
     * @example
     * // Update one Evaluation
     * const evaluation = await prisma.evaluation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EvaluationUpdateArgs>(args: SelectSubset<T, EvaluationUpdateArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Evaluations.
     * @param {EvaluationDeleteManyArgs} args - Arguments to filter Evaluations to delete.
     * @example
     * // Delete a few Evaluations
     * const { count } = await prisma.evaluation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EvaluationDeleteManyArgs>(args?: SelectSubset<T, EvaluationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evaluations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Evaluations
     * const evaluation = await prisma.evaluation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EvaluationUpdateManyArgs>(args: SelectSubset<T, EvaluationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evaluations and returns the data updated in the database.
     * @param {EvaluationUpdateManyAndReturnArgs} args - Arguments to update many Evaluations.
     * @example
     * // Update many Evaluations
     * const evaluation = await prisma.evaluation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Evaluations and only return the `id`
     * const evaluationWithIdOnly = await prisma.evaluation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EvaluationUpdateManyAndReturnArgs>(args: SelectSubset<T, EvaluationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Evaluation.
     * @param {EvaluationUpsertArgs} args - Arguments to update or create a Evaluation.
     * @example
     * // Update or create a Evaluation
     * const evaluation = await prisma.evaluation.upsert({
     *   create: {
     *     // ... data to create a Evaluation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Evaluation we want to update
     *   }
     * })
     */
    upsert<T extends EvaluationUpsertArgs>(args: SelectSubset<T, EvaluationUpsertArgs<ExtArgs>>): Prisma__EvaluationClient<$Result.GetResult<Prisma.$EvaluationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Evaluations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluationCountArgs} args - Arguments to filter Evaluations to count.
     * @example
     * // Count the number of Evaluations
     * const count = await prisma.evaluation.count({
     *   where: {
     *     // ... the filter for the Evaluations we want to count
     *   }
     * })
    **/
    count<T extends EvaluationCountArgs>(
      args?: Subset<T, EvaluationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EvaluationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Evaluation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EvaluationAggregateArgs>(args: Subset<T, EvaluationAggregateArgs>): Prisma.PrismaPromise<GetEvaluationAggregateType<T>>

    /**
     * Group by Evaluation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EvaluationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EvaluationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EvaluationGroupByArgs['orderBy'] }
        : { orderBy?: EvaluationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EvaluationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvaluationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Evaluation model
   */
  readonly fields: EvaluationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Evaluation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EvaluationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cvMinute<T extends Evaluation$cvMinuteArgs<ExtArgs> = {}>(args?: Subset<T, Evaluation$cvMinuteArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sectionInfo<T extends Evaluation$sectionInfoArgs<ExtArgs> = {}>(args?: Subset<T, Evaluation$sectionInfoArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Evaluation model
   */
  interface EvaluationFieldRefs {
    readonly id: FieldRef<"Evaluation", 'Int'>
    readonly initialScore: FieldRef<"Evaluation", 'Int'>
    readonly actualScore: FieldRef<"Evaluation", 'Int'>
    readonly content: FieldRef<"Evaluation", 'String'>
    readonly weakContent: FieldRef<"Evaluation", 'String'>
    readonly cvMinuteId: FieldRef<"Evaluation", 'Int'>
    readonly sectionInfoId: FieldRef<"Evaluation", 'Int'>
    readonly createdAt: FieldRef<"Evaluation", 'DateTime'>
    readonly updatedAt: FieldRef<"Evaluation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Evaluation findUnique
   */
  export type EvaluationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * Filter, which Evaluation to fetch.
     */
    where: EvaluationWhereUniqueInput
  }

  /**
   * Evaluation findUniqueOrThrow
   */
  export type EvaluationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * Filter, which Evaluation to fetch.
     */
    where: EvaluationWhereUniqueInput
  }

  /**
   * Evaluation findFirst
   */
  export type EvaluationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * Filter, which Evaluation to fetch.
     */
    where?: EvaluationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluations to fetch.
     */
    orderBy?: EvaluationOrderByWithRelationInput | EvaluationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Evaluations.
     */
    cursor?: EvaluationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Evaluations.
     */
    distinct?: EvaluationScalarFieldEnum | EvaluationScalarFieldEnum[]
  }

  /**
   * Evaluation findFirstOrThrow
   */
  export type EvaluationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * Filter, which Evaluation to fetch.
     */
    where?: EvaluationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluations to fetch.
     */
    orderBy?: EvaluationOrderByWithRelationInput | EvaluationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Evaluations.
     */
    cursor?: EvaluationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Evaluations.
     */
    distinct?: EvaluationScalarFieldEnum | EvaluationScalarFieldEnum[]
  }

  /**
   * Evaluation findMany
   */
  export type EvaluationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * Filter, which Evaluations to fetch.
     */
    where?: EvaluationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Evaluations to fetch.
     */
    orderBy?: EvaluationOrderByWithRelationInput | EvaluationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Evaluations.
     */
    cursor?: EvaluationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Evaluations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Evaluations.
     */
    skip?: number
    distinct?: EvaluationScalarFieldEnum | EvaluationScalarFieldEnum[]
  }

  /**
   * Evaluation create
   */
  export type EvaluationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * The data needed to create a Evaluation.
     */
    data: XOR<EvaluationCreateInput, EvaluationUncheckedCreateInput>
  }

  /**
   * Evaluation createMany
   */
  export type EvaluationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Evaluations.
     */
    data: EvaluationCreateManyInput | EvaluationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Evaluation createManyAndReturn
   */
  export type EvaluationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * The data used to create many Evaluations.
     */
    data: EvaluationCreateManyInput | EvaluationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Evaluation update
   */
  export type EvaluationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * The data needed to update a Evaluation.
     */
    data: XOR<EvaluationUpdateInput, EvaluationUncheckedUpdateInput>
    /**
     * Choose, which Evaluation to update.
     */
    where: EvaluationWhereUniqueInput
  }

  /**
   * Evaluation updateMany
   */
  export type EvaluationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Evaluations.
     */
    data: XOR<EvaluationUpdateManyMutationInput, EvaluationUncheckedUpdateManyInput>
    /**
     * Filter which Evaluations to update
     */
    where?: EvaluationWhereInput
    /**
     * Limit how many Evaluations to update.
     */
    limit?: number
  }

  /**
   * Evaluation updateManyAndReturn
   */
  export type EvaluationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * The data used to update Evaluations.
     */
    data: XOR<EvaluationUpdateManyMutationInput, EvaluationUncheckedUpdateManyInput>
    /**
     * Filter which Evaluations to update
     */
    where?: EvaluationWhereInput
    /**
     * Limit how many Evaluations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Evaluation upsert
   */
  export type EvaluationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * The filter to search for the Evaluation to update in case it exists.
     */
    where: EvaluationWhereUniqueInput
    /**
     * In case the Evaluation found by the `where` argument doesn't exist, create a new Evaluation with this data.
     */
    create: XOR<EvaluationCreateInput, EvaluationUncheckedCreateInput>
    /**
     * In case the Evaluation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EvaluationUpdateInput, EvaluationUncheckedUpdateInput>
  }

  /**
   * Evaluation delete
   */
  export type EvaluationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
    /**
     * Filter which Evaluation to delete.
     */
    where: EvaluationWhereUniqueInput
  }

  /**
   * Evaluation deleteMany
   */
  export type EvaluationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Evaluations to delete
     */
    where?: EvaluationWhereInput
    /**
     * Limit how many Evaluations to delete.
     */
    limit?: number
  }

  /**
   * Evaluation.cvMinute
   */
  export type Evaluation$cvMinuteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    where?: CvMinuteWhereInput
  }

  /**
   * Evaluation.sectionInfo
   */
  export type Evaluation$sectionInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    where?: SectionInfoWhereInput
  }

  /**
   * Evaluation without action
   */
  export type EvaluationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evaluation
     */
    select?: EvaluationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Evaluation
     */
    omit?: EvaluationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EvaluationInclude<ExtArgs> | null
  }


  /**
   * Model OpenaiResponse
   */

  export type AggregateOpenaiResponse = {
    _count: OpenaiResponseCountAggregateOutputType | null
    _avg: OpenaiResponseAvgAggregateOutputType | null
    _sum: OpenaiResponseSumAggregateOutputType | null
    _min: OpenaiResponseMinAggregateOutputType | null
    _max: OpenaiResponseMaxAggregateOutputType | null
  }

  export type OpenaiResponseAvgAggregateOutputType = {
    id: number | null
    index: number | null
    cvMinuteId: number | null
    userId: number | null
    cvThequeCritereId: number | null
  }

  export type OpenaiResponseSumAggregateOutputType = {
    id: number | null
    index: number | null
    cvMinuteId: number | null
    userId: number | null
    cvThequeCritereId: number | null
  }

  export type OpenaiResponseMinAggregateOutputType = {
    id: number | null
    responseId: string | null
    request: string | null
    response: string | null
    index: number | null
    cvMinuteId: number | null
    userId: number | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OpenaiResponseMaxAggregateOutputType = {
    id: number | null
    responseId: string | null
    request: string | null
    response: string | null
    index: number | null
    cvMinuteId: number | null
    userId: number | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OpenaiResponseCountAggregateOutputType = {
    id: number
    responseId: number
    request: number
    response: number
    index: number
    cvMinuteId: number
    userId: number
    cvThequeCritereId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OpenaiResponseAvgAggregateInputType = {
    id?: true
    index?: true
    cvMinuteId?: true
    userId?: true
    cvThequeCritereId?: true
  }

  export type OpenaiResponseSumAggregateInputType = {
    id?: true
    index?: true
    cvMinuteId?: true
    userId?: true
    cvThequeCritereId?: true
  }

  export type OpenaiResponseMinAggregateInputType = {
    id?: true
    responseId?: true
    request?: true
    response?: true
    index?: true
    cvMinuteId?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OpenaiResponseMaxAggregateInputType = {
    id?: true
    responseId?: true
    request?: true
    response?: true
    index?: true
    cvMinuteId?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OpenaiResponseCountAggregateInputType = {
    id?: true
    responseId?: true
    request?: true
    response?: true
    index?: true
    cvMinuteId?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OpenaiResponseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OpenaiResponse to aggregate.
     */
    where?: OpenaiResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OpenaiResponses to fetch.
     */
    orderBy?: OpenaiResponseOrderByWithRelationInput | OpenaiResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OpenaiResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OpenaiResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OpenaiResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OpenaiResponses
    **/
    _count?: true | OpenaiResponseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OpenaiResponseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OpenaiResponseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OpenaiResponseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OpenaiResponseMaxAggregateInputType
  }

  export type GetOpenaiResponseAggregateType<T extends OpenaiResponseAggregateArgs> = {
        [P in keyof T & keyof AggregateOpenaiResponse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOpenaiResponse[P]>
      : GetScalarType<T[P], AggregateOpenaiResponse[P]>
  }




  export type OpenaiResponseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpenaiResponseWhereInput
    orderBy?: OpenaiResponseOrderByWithAggregationInput | OpenaiResponseOrderByWithAggregationInput[]
    by: OpenaiResponseScalarFieldEnum[] | OpenaiResponseScalarFieldEnum
    having?: OpenaiResponseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OpenaiResponseCountAggregateInputType | true
    _avg?: OpenaiResponseAvgAggregateInputType
    _sum?: OpenaiResponseSumAggregateInputType
    _min?: OpenaiResponseMinAggregateInputType
    _max?: OpenaiResponseMaxAggregateInputType
  }

  export type OpenaiResponseGroupByOutputType = {
    id: number
    responseId: string
    request: string
    response: string
    index: number
    cvMinuteId: number | null
    userId: number | null
    cvThequeCritereId: number | null
    createdAt: Date
    updatedAt: Date
    _count: OpenaiResponseCountAggregateOutputType | null
    _avg: OpenaiResponseAvgAggregateOutputType | null
    _sum: OpenaiResponseSumAggregateOutputType | null
    _min: OpenaiResponseMinAggregateOutputType | null
    _max: OpenaiResponseMaxAggregateOutputType | null
  }

  type GetOpenaiResponseGroupByPayload<T extends OpenaiResponseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OpenaiResponseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OpenaiResponseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OpenaiResponseGroupByOutputType[P]>
            : GetScalarType<T[P], OpenaiResponseGroupByOutputType[P]>
        }
      >
    >


  export type OpenaiResponseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    responseId?: boolean
    request?: boolean
    response?: boolean
    index?: boolean
    cvMinuteId?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | OpenaiResponse$cvMinuteArgs<ExtArgs>
    user?: boolean | OpenaiResponse$userArgs<ExtArgs>
    cvThequeCritere?: boolean | OpenaiResponse$cvThequeCritereArgs<ExtArgs>
  }, ExtArgs["result"]["openaiResponse"]>

  export type OpenaiResponseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    responseId?: boolean
    request?: boolean
    response?: boolean
    index?: boolean
    cvMinuteId?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | OpenaiResponse$cvMinuteArgs<ExtArgs>
    user?: boolean | OpenaiResponse$userArgs<ExtArgs>
    cvThequeCritere?: boolean | OpenaiResponse$cvThequeCritereArgs<ExtArgs>
  }, ExtArgs["result"]["openaiResponse"]>

  export type OpenaiResponseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    responseId?: boolean
    request?: boolean
    response?: boolean
    index?: boolean
    cvMinuteId?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | OpenaiResponse$cvMinuteArgs<ExtArgs>
    user?: boolean | OpenaiResponse$userArgs<ExtArgs>
    cvThequeCritere?: boolean | OpenaiResponse$cvThequeCritereArgs<ExtArgs>
  }, ExtArgs["result"]["openaiResponse"]>

  export type OpenaiResponseSelectScalar = {
    id?: boolean
    responseId?: boolean
    request?: boolean
    response?: boolean
    index?: boolean
    cvMinuteId?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OpenaiResponseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "responseId" | "request" | "response" | "index" | "cvMinuteId" | "userId" | "cvThequeCritereId" | "createdAt" | "updatedAt", ExtArgs["result"]["openaiResponse"]>
  export type OpenaiResponseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | OpenaiResponse$cvMinuteArgs<ExtArgs>
    user?: boolean | OpenaiResponse$userArgs<ExtArgs>
    cvThequeCritere?: boolean | OpenaiResponse$cvThequeCritereArgs<ExtArgs>
  }
  export type OpenaiResponseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | OpenaiResponse$cvMinuteArgs<ExtArgs>
    user?: boolean | OpenaiResponse$userArgs<ExtArgs>
    cvThequeCritere?: boolean | OpenaiResponse$cvThequeCritereArgs<ExtArgs>
  }
  export type OpenaiResponseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | OpenaiResponse$cvMinuteArgs<ExtArgs>
    user?: boolean | OpenaiResponse$userArgs<ExtArgs>
    cvThequeCritere?: boolean | OpenaiResponse$cvThequeCritereArgs<ExtArgs>
  }

  export type $OpenaiResponsePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OpenaiResponse"
    objects: {
      cvMinute: Prisma.$CvMinutePayload<ExtArgs> | null
      user: Prisma.$UserPayload<ExtArgs> | null
      cvThequeCritere: Prisma.$CvThequeCriterePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      responseId: string
      request: string
      response: string
      index: number
      cvMinuteId: number | null
      userId: number | null
      cvThequeCritereId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["openaiResponse"]>
    composites: {}
  }

  type OpenaiResponseGetPayload<S extends boolean | null | undefined | OpenaiResponseDefaultArgs> = $Result.GetResult<Prisma.$OpenaiResponsePayload, S>

  type OpenaiResponseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OpenaiResponseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OpenaiResponseCountAggregateInputType | true
    }

  export interface OpenaiResponseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OpenaiResponse'], meta: { name: 'OpenaiResponse' } }
    /**
     * Find zero or one OpenaiResponse that matches the filter.
     * @param {OpenaiResponseFindUniqueArgs} args - Arguments to find a OpenaiResponse
     * @example
     * // Get one OpenaiResponse
     * const openaiResponse = await prisma.openaiResponse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OpenaiResponseFindUniqueArgs>(args: SelectSubset<T, OpenaiResponseFindUniqueArgs<ExtArgs>>): Prisma__OpenaiResponseClient<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OpenaiResponse that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OpenaiResponseFindUniqueOrThrowArgs} args - Arguments to find a OpenaiResponse
     * @example
     * // Get one OpenaiResponse
     * const openaiResponse = await prisma.openaiResponse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OpenaiResponseFindUniqueOrThrowArgs>(args: SelectSubset<T, OpenaiResponseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OpenaiResponseClient<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OpenaiResponse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpenaiResponseFindFirstArgs} args - Arguments to find a OpenaiResponse
     * @example
     * // Get one OpenaiResponse
     * const openaiResponse = await prisma.openaiResponse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OpenaiResponseFindFirstArgs>(args?: SelectSubset<T, OpenaiResponseFindFirstArgs<ExtArgs>>): Prisma__OpenaiResponseClient<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OpenaiResponse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpenaiResponseFindFirstOrThrowArgs} args - Arguments to find a OpenaiResponse
     * @example
     * // Get one OpenaiResponse
     * const openaiResponse = await prisma.openaiResponse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OpenaiResponseFindFirstOrThrowArgs>(args?: SelectSubset<T, OpenaiResponseFindFirstOrThrowArgs<ExtArgs>>): Prisma__OpenaiResponseClient<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OpenaiResponses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpenaiResponseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OpenaiResponses
     * const openaiResponses = await prisma.openaiResponse.findMany()
     * 
     * // Get first 10 OpenaiResponses
     * const openaiResponses = await prisma.openaiResponse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const openaiResponseWithIdOnly = await prisma.openaiResponse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OpenaiResponseFindManyArgs>(args?: SelectSubset<T, OpenaiResponseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OpenaiResponse.
     * @param {OpenaiResponseCreateArgs} args - Arguments to create a OpenaiResponse.
     * @example
     * // Create one OpenaiResponse
     * const OpenaiResponse = await prisma.openaiResponse.create({
     *   data: {
     *     // ... data to create a OpenaiResponse
     *   }
     * })
     * 
     */
    create<T extends OpenaiResponseCreateArgs>(args: SelectSubset<T, OpenaiResponseCreateArgs<ExtArgs>>): Prisma__OpenaiResponseClient<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OpenaiResponses.
     * @param {OpenaiResponseCreateManyArgs} args - Arguments to create many OpenaiResponses.
     * @example
     * // Create many OpenaiResponses
     * const openaiResponse = await prisma.openaiResponse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OpenaiResponseCreateManyArgs>(args?: SelectSubset<T, OpenaiResponseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OpenaiResponses and returns the data saved in the database.
     * @param {OpenaiResponseCreateManyAndReturnArgs} args - Arguments to create many OpenaiResponses.
     * @example
     * // Create many OpenaiResponses
     * const openaiResponse = await prisma.openaiResponse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OpenaiResponses and only return the `id`
     * const openaiResponseWithIdOnly = await prisma.openaiResponse.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OpenaiResponseCreateManyAndReturnArgs>(args?: SelectSubset<T, OpenaiResponseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OpenaiResponse.
     * @param {OpenaiResponseDeleteArgs} args - Arguments to delete one OpenaiResponse.
     * @example
     * // Delete one OpenaiResponse
     * const OpenaiResponse = await prisma.openaiResponse.delete({
     *   where: {
     *     // ... filter to delete one OpenaiResponse
     *   }
     * })
     * 
     */
    delete<T extends OpenaiResponseDeleteArgs>(args: SelectSubset<T, OpenaiResponseDeleteArgs<ExtArgs>>): Prisma__OpenaiResponseClient<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OpenaiResponse.
     * @param {OpenaiResponseUpdateArgs} args - Arguments to update one OpenaiResponse.
     * @example
     * // Update one OpenaiResponse
     * const openaiResponse = await prisma.openaiResponse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OpenaiResponseUpdateArgs>(args: SelectSubset<T, OpenaiResponseUpdateArgs<ExtArgs>>): Prisma__OpenaiResponseClient<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OpenaiResponses.
     * @param {OpenaiResponseDeleteManyArgs} args - Arguments to filter OpenaiResponses to delete.
     * @example
     * // Delete a few OpenaiResponses
     * const { count } = await prisma.openaiResponse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OpenaiResponseDeleteManyArgs>(args?: SelectSubset<T, OpenaiResponseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OpenaiResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpenaiResponseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OpenaiResponses
     * const openaiResponse = await prisma.openaiResponse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OpenaiResponseUpdateManyArgs>(args: SelectSubset<T, OpenaiResponseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OpenaiResponses and returns the data updated in the database.
     * @param {OpenaiResponseUpdateManyAndReturnArgs} args - Arguments to update many OpenaiResponses.
     * @example
     * // Update many OpenaiResponses
     * const openaiResponse = await prisma.openaiResponse.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OpenaiResponses and only return the `id`
     * const openaiResponseWithIdOnly = await prisma.openaiResponse.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OpenaiResponseUpdateManyAndReturnArgs>(args: SelectSubset<T, OpenaiResponseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OpenaiResponse.
     * @param {OpenaiResponseUpsertArgs} args - Arguments to update or create a OpenaiResponse.
     * @example
     * // Update or create a OpenaiResponse
     * const openaiResponse = await prisma.openaiResponse.upsert({
     *   create: {
     *     // ... data to create a OpenaiResponse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OpenaiResponse we want to update
     *   }
     * })
     */
    upsert<T extends OpenaiResponseUpsertArgs>(args: SelectSubset<T, OpenaiResponseUpsertArgs<ExtArgs>>): Prisma__OpenaiResponseClient<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OpenaiResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpenaiResponseCountArgs} args - Arguments to filter OpenaiResponses to count.
     * @example
     * // Count the number of OpenaiResponses
     * const count = await prisma.openaiResponse.count({
     *   where: {
     *     // ... the filter for the OpenaiResponses we want to count
     *   }
     * })
    **/
    count<T extends OpenaiResponseCountArgs>(
      args?: Subset<T, OpenaiResponseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OpenaiResponseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OpenaiResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpenaiResponseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OpenaiResponseAggregateArgs>(args: Subset<T, OpenaiResponseAggregateArgs>): Prisma.PrismaPromise<GetOpenaiResponseAggregateType<T>>

    /**
     * Group by OpenaiResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpenaiResponseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OpenaiResponseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OpenaiResponseGroupByArgs['orderBy'] }
        : { orderBy?: OpenaiResponseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OpenaiResponseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpenaiResponseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OpenaiResponse model
   */
  readonly fields: OpenaiResponseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OpenaiResponse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OpenaiResponseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cvMinute<T extends OpenaiResponse$cvMinuteArgs<ExtArgs> = {}>(args?: Subset<T, OpenaiResponse$cvMinuteArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends OpenaiResponse$userArgs<ExtArgs> = {}>(args?: Subset<T, OpenaiResponse$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cvThequeCritere<T extends OpenaiResponse$cvThequeCritereArgs<ExtArgs> = {}>(args?: Subset<T, OpenaiResponse$cvThequeCritereArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OpenaiResponse model
   */
  interface OpenaiResponseFieldRefs {
    readonly id: FieldRef<"OpenaiResponse", 'Int'>
    readonly responseId: FieldRef<"OpenaiResponse", 'String'>
    readonly request: FieldRef<"OpenaiResponse", 'String'>
    readonly response: FieldRef<"OpenaiResponse", 'String'>
    readonly index: FieldRef<"OpenaiResponse", 'Int'>
    readonly cvMinuteId: FieldRef<"OpenaiResponse", 'Int'>
    readonly userId: FieldRef<"OpenaiResponse", 'Int'>
    readonly cvThequeCritereId: FieldRef<"OpenaiResponse", 'Int'>
    readonly createdAt: FieldRef<"OpenaiResponse", 'DateTime'>
    readonly updatedAt: FieldRef<"OpenaiResponse", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OpenaiResponse findUnique
   */
  export type OpenaiResponseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * Filter, which OpenaiResponse to fetch.
     */
    where: OpenaiResponseWhereUniqueInput
  }

  /**
   * OpenaiResponse findUniqueOrThrow
   */
  export type OpenaiResponseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * Filter, which OpenaiResponse to fetch.
     */
    where: OpenaiResponseWhereUniqueInput
  }

  /**
   * OpenaiResponse findFirst
   */
  export type OpenaiResponseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * Filter, which OpenaiResponse to fetch.
     */
    where?: OpenaiResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OpenaiResponses to fetch.
     */
    orderBy?: OpenaiResponseOrderByWithRelationInput | OpenaiResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OpenaiResponses.
     */
    cursor?: OpenaiResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OpenaiResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OpenaiResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OpenaiResponses.
     */
    distinct?: OpenaiResponseScalarFieldEnum | OpenaiResponseScalarFieldEnum[]
  }

  /**
   * OpenaiResponse findFirstOrThrow
   */
  export type OpenaiResponseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * Filter, which OpenaiResponse to fetch.
     */
    where?: OpenaiResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OpenaiResponses to fetch.
     */
    orderBy?: OpenaiResponseOrderByWithRelationInput | OpenaiResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OpenaiResponses.
     */
    cursor?: OpenaiResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OpenaiResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OpenaiResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OpenaiResponses.
     */
    distinct?: OpenaiResponseScalarFieldEnum | OpenaiResponseScalarFieldEnum[]
  }

  /**
   * OpenaiResponse findMany
   */
  export type OpenaiResponseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * Filter, which OpenaiResponses to fetch.
     */
    where?: OpenaiResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OpenaiResponses to fetch.
     */
    orderBy?: OpenaiResponseOrderByWithRelationInput | OpenaiResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OpenaiResponses.
     */
    cursor?: OpenaiResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OpenaiResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OpenaiResponses.
     */
    skip?: number
    distinct?: OpenaiResponseScalarFieldEnum | OpenaiResponseScalarFieldEnum[]
  }

  /**
   * OpenaiResponse create
   */
  export type OpenaiResponseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * The data needed to create a OpenaiResponse.
     */
    data: XOR<OpenaiResponseCreateInput, OpenaiResponseUncheckedCreateInput>
  }

  /**
   * OpenaiResponse createMany
   */
  export type OpenaiResponseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OpenaiResponses.
     */
    data: OpenaiResponseCreateManyInput | OpenaiResponseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OpenaiResponse createManyAndReturn
   */
  export type OpenaiResponseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * The data used to create many OpenaiResponses.
     */
    data: OpenaiResponseCreateManyInput | OpenaiResponseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OpenaiResponse update
   */
  export type OpenaiResponseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * The data needed to update a OpenaiResponse.
     */
    data: XOR<OpenaiResponseUpdateInput, OpenaiResponseUncheckedUpdateInput>
    /**
     * Choose, which OpenaiResponse to update.
     */
    where: OpenaiResponseWhereUniqueInput
  }

  /**
   * OpenaiResponse updateMany
   */
  export type OpenaiResponseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OpenaiResponses.
     */
    data: XOR<OpenaiResponseUpdateManyMutationInput, OpenaiResponseUncheckedUpdateManyInput>
    /**
     * Filter which OpenaiResponses to update
     */
    where?: OpenaiResponseWhereInput
    /**
     * Limit how many OpenaiResponses to update.
     */
    limit?: number
  }

  /**
   * OpenaiResponse updateManyAndReturn
   */
  export type OpenaiResponseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * The data used to update OpenaiResponses.
     */
    data: XOR<OpenaiResponseUpdateManyMutationInput, OpenaiResponseUncheckedUpdateManyInput>
    /**
     * Filter which OpenaiResponses to update
     */
    where?: OpenaiResponseWhereInput
    /**
     * Limit how many OpenaiResponses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OpenaiResponse upsert
   */
  export type OpenaiResponseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * The filter to search for the OpenaiResponse to update in case it exists.
     */
    where: OpenaiResponseWhereUniqueInput
    /**
     * In case the OpenaiResponse found by the `where` argument doesn't exist, create a new OpenaiResponse with this data.
     */
    create: XOR<OpenaiResponseCreateInput, OpenaiResponseUncheckedCreateInput>
    /**
     * In case the OpenaiResponse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OpenaiResponseUpdateInput, OpenaiResponseUncheckedUpdateInput>
  }

  /**
   * OpenaiResponse delete
   */
  export type OpenaiResponseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    /**
     * Filter which OpenaiResponse to delete.
     */
    where: OpenaiResponseWhereUniqueInput
  }

  /**
   * OpenaiResponse deleteMany
   */
  export type OpenaiResponseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OpenaiResponses to delete
     */
    where?: OpenaiResponseWhereInput
    /**
     * Limit how many OpenaiResponses to delete.
     */
    limit?: number
  }

  /**
   * OpenaiResponse.cvMinute
   */
  export type OpenaiResponse$cvMinuteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    where?: CvMinuteWhereInput
  }

  /**
   * OpenaiResponse.user
   */
  export type OpenaiResponse$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * OpenaiResponse.cvThequeCritere
   */
  export type OpenaiResponse$cvThequeCritereArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    where?: CvThequeCritereWhereInput
  }

  /**
   * OpenaiResponse without action
   */
  export type OpenaiResponseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
  }


  /**
   * Model QualiCarriereQuestion
   */

  export type AggregateQualiCarriereQuestion = {
    _count: QualiCarriereQuestionCountAggregateOutputType | null
    _avg: QualiCarriereQuestionAvgAggregateOutputType | null
    _sum: QualiCarriereQuestionSumAggregateOutputType | null
    _min: QualiCarriereQuestionMinAggregateOutputType | null
    _max: QualiCarriereQuestionMaxAggregateOutputType | null
  }

  export type QualiCarriereQuestionAvgAggregateOutputType = {
    id: number | null
    order: number | null
    sectionInfoId: number | null
    userId: number | null
  }

  export type QualiCarriereQuestionSumAggregateOutputType = {
    id: number | null
    order: number | null
    sectionInfoId: number | null
    userId: number | null
  }

  export type QualiCarriereQuestionMinAggregateOutputType = {
    id: number | null
    order: number | null
    content: string | null
    sectionInfoId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereQuestionMaxAggregateOutputType = {
    id: number | null
    order: number | null
    content: string | null
    sectionInfoId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereQuestionCountAggregateOutputType = {
    id: number
    order: number
    content: number
    sectionInfoId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type QualiCarriereQuestionAvgAggregateInputType = {
    id?: true
    order?: true
    sectionInfoId?: true
    userId?: true
  }

  export type QualiCarriereQuestionSumAggregateInputType = {
    id?: true
    order?: true
    sectionInfoId?: true
    userId?: true
  }

  export type QualiCarriereQuestionMinAggregateInputType = {
    id?: true
    order?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereQuestionMaxAggregateInputType = {
    id?: true
    order?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereQuestionCountAggregateInputType = {
    id?: true
    order?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type QualiCarriereQuestionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereQuestion to aggregate.
     */
    where?: QualiCarriereQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereQuestions to fetch.
     */
    orderBy?: QualiCarriereQuestionOrderByWithRelationInput | QualiCarriereQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QualiCarriereQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QualiCarriereQuestions
    **/
    _count?: true | QualiCarriereQuestionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QualiCarriereQuestionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QualiCarriereQuestionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QualiCarriereQuestionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QualiCarriereQuestionMaxAggregateInputType
  }

  export type GetQualiCarriereQuestionAggregateType<T extends QualiCarriereQuestionAggregateArgs> = {
        [P in keyof T & keyof AggregateQualiCarriereQuestion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQualiCarriereQuestion[P]>
      : GetScalarType<T[P], AggregateQualiCarriereQuestion[P]>
  }




  export type QualiCarriereQuestionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereQuestionWhereInput
    orderBy?: QualiCarriereQuestionOrderByWithAggregationInput | QualiCarriereQuestionOrderByWithAggregationInput[]
    by: QualiCarriereQuestionScalarFieldEnum[] | QualiCarriereQuestionScalarFieldEnum
    having?: QualiCarriereQuestionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QualiCarriereQuestionCountAggregateInputType | true
    _avg?: QualiCarriereQuestionAvgAggregateInputType
    _sum?: QualiCarriereQuestionSumAggregateInputType
    _min?: QualiCarriereQuestionMinAggregateInputType
    _max?: QualiCarriereQuestionMaxAggregateInputType
  }

  export type QualiCarriereQuestionGroupByOutputType = {
    id: number
    order: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: QualiCarriereQuestionCountAggregateOutputType | null
    _avg: QualiCarriereQuestionAvgAggregateOutputType | null
    _sum: QualiCarriereQuestionSumAggregateOutputType | null
    _min: QualiCarriereQuestionMinAggregateOutputType | null
    _max: QualiCarriereQuestionMaxAggregateOutputType | null
  }

  type GetQualiCarriereQuestionGroupByPayload<T extends QualiCarriereQuestionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QualiCarriereQuestionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QualiCarriereQuestionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QualiCarriereQuestionGroupByOutputType[P]>
            : GetScalarType<T[P], QualiCarriereQuestionGroupByOutputType[P]>
        }
      >
    >


  export type QualiCarriereQuestionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    qualiCarriereResponse?: boolean | QualiCarriereQuestion$qualiCarriereResponseArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereQuestion"]>

  export type QualiCarriereQuestionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereQuestion"]>

  export type QualiCarriereQuestionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereQuestion"]>

  export type QualiCarriereQuestionSelectScalar = {
    id?: boolean
    order?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type QualiCarriereQuestionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order" | "content" | "sectionInfoId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["qualiCarriereQuestion"]>
  export type QualiCarriereQuestionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    qualiCarriereResponse?: boolean | QualiCarriereQuestion$qualiCarriereResponseArgs<ExtArgs>
  }
  export type QualiCarriereQuestionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
  }
  export type QualiCarriereQuestionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
  }

  export type $QualiCarriereQuestionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QualiCarriereQuestion"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      sectionInfo: Prisma.$SectionInfoPayload<ExtArgs>
      qualiCarriereResponse: Prisma.$QualiCarriereResponsePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      order: number
      content: string
      sectionInfoId: number
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["qualiCarriereQuestion"]>
    composites: {}
  }

  type QualiCarriereQuestionGetPayload<S extends boolean | null | undefined | QualiCarriereQuestionDefaultArgs> = $Result.GetResult<Prisma.$QualiCarriereQuestionPayload, S>

  type QualiCarriereQuestionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QualiCarriereQuestionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QualiCarriereQuestionCountAggregateInputType | true
    }

  export interface QualiCarriereQuestionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QualiCarriereQuestion'], meta: { name: 'QualiCarriereQuestion' } }
    /**
     * Find zero or one QualiCarriereQuestion that matches the filter.
     * @param {QualiCarriereQuestionFindUniqueArgs} args - Arguments to find a QualiCarriereQuestion
     * @example
     * // Get one QualiCarriereQuestion
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QualiCarriereQuestionFindUniqueArgs>(args: SelectSubset<T, QualiCarriereQuestionFindUniqueArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one QualiCarriereQuestion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QualiCarriereQuestionFindUniqueOrThrowArgs} args - Arguments to find a QualiCarriereQuestion
     * @example
     * // Get one QualiCarriereQuestion
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QualiCarriereQuestionFindUniqueOrThrowArgs>(args: SelectSubset<T, QualiCarriereQuestionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereQuestion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereQuestionFindFirstArgs} args - Arguments to find a QualiCarriereQuestion
     * @example
     * // Get one QualiCarriereQuestion
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QualiCarriereQuestionFindFirstArgs>(args?: SelectSubset<T, QualiCarriereQuestionFindFirstArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereQuestion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereQuestionFindFirstOrThrowArgs} args - Arguments to find a QualiCarriereQuestion
     * @example
     * // Get one QualiCarriereQuestion
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QualiCarriereQuestionFindFirstOrThrowArgs>(args?: SelectSubset<T, QualiCarriereQuestionFindFirstOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more QualiCarriereQuestions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereQuestionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QualiCarriereQuestions
     * const qualiCarriereQuestions = await prisma.qualiCarriereQuestion.findMany()
     * 
     * // Get first 10 QualiCarriereQuestions
     * const qualiCarriereQuestions = await prisma.qualiCarriereQuestion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const qualiCarriereQuestionWithIdOnly = await prisma.qualiCarriereQuestion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QualiCarriereQuestionFindManyArgs>(args?: SelectSubset<T, QualiCarriereQuestionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a QualiCarriereQuestion.
     * @param {QualiCarriereQuestionCreateArgs} args - Arguments to create a QualiCarriereQuestion.
     * @example
     * // Create one QualiCarriereQuestion
     * const QualiCarriereQuestion = await prisma.qualiCarriereQuestion.create({
     *   data: {
     *     // ... data to create a QualiCarriereQuestion
     *   }
     * })
     * 
     */
    create<T extends QualiCarriereQuestionCreateArgs>(args: SelectSubset<T, QualiCarriereQuestionCreateArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many QualiCarriereQuestions.
     * @param {QualiCarriereQuestionCreateManyArgs} args - Arguments to create many QualiCarriereQuestions.
     * @example
     * // Create many QualiCarriereQuestions
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QualiCarriereQuestionCreateManyArgs>(args?: SelectSubset<T, QualiCarriereQuestionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many QualiCarriereQuestions and returns the data saved in the database.
     * @param {QualiCarriereQuestionCreateManyAndReturnArgs} args - Arguments to create many QualiCarriereQuestions.
     * @example
     * // Create many QualiCarriereQuestions
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many QualiCarriereQuestions and only return the `id`
     * const qualiCarriereQuestionWithIdOnly = await prisma.qualiCarriereQuestion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QualiCarriereQuestionCreateManyAndReturnArgs>(args?: SelectSubset<T, QualiCarriereQuestionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a QualiCarriereQuestion.
     * @param {QualiCarriereQuestionDeleteArgs} args - Arguments to delete one QualiCarriereQuestion.
     * @example
     * // Delete one QualiCarriereQuestion
     * const QualiCarriereQuestion = await prisma.qualiCarriereQuestion.delete({
     *   where: {
     *     // ... filter to delete one QualiCarriereQuestion
     *   }
     * })
     * 
     */
    delete<T extends QualiCarriereQuestionDeleteArgs>(args: SelectSubset<T, QualiCarriereQuestionDeleteArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one QualiCarriereQuestion.
     * @param {QualiCarriereQuestionUpdateArgs} args - Arguments to update one QualiCarriereQuestion.
     * @example
     * // Update one QualiCarriereQuestion
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QualiCarriereQuestionUpdateArgs>(args: SelectSubset<T, QualiCarriereQuestionUpdateArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more QualiCarriereQuestions.
     * @param {QualiCarriereQuestionDeleteManyArgs} args - Arguments to filter QualiCarriereQuestions to delete.
     * @example
     * // Delete a few QualiCarriereQuestions
     * const { count } = await prisma.qualiCarriereQuestion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QualiCarriereQuestionDeleteManyArgs>(args?: SelectSubset<T, QualiCarriereQuestionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereQuestions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereQuestionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QualiCarriereQuestions
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QualiCarriereQuestionUpdateManyArgs>(args: SelectSubset<T, QualiCarriereQuestionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereQuestions and returns the data updated in the database.
     * @param {QualiCarriereQuestionUpdateManyAndReturnArgs} args - Arguments to update many QualiCarriereQuestions.
     * @example
     * // Update many QualiCarriereQuestions
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more QualiCarriereQuestions and only return the `id`
     * const qualiCarriereQuestionWithIdOnly = await prisma.qualiCarriereQuestion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends QualiCarriereQuestionUpdateManyAndReturnArgs>(args: SelectSubset<T, QualiCarriereQuestionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one QualiCarriereQuestion.
     * @param {QualiCarriereQuestionUpsertArgs} args - Arguments to update or create a QualiCarriereQuestion.
     * @example
     * // Update or create a QualiCarriereQuestion
     * const qualiCarriereQuestion = await prisma.qualiCarriereQuestion.upsert({
     *   create: {
     *     // ... data to create a QualiCarriereQuestion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QualiCarriereQuestion we want to update
     *   }
     * })
     */
    upsert<T extends QualiCarriereQuestionUpsertArgs>(args: SelectSubset<T, QualiCarriereQuestionUpsertArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of QualiCarriereQuestions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereQuestionCountArgs} args - Arguments to filter QualiCarriereQuestions to count.
     * @example
     * // Count the number of QualiCarriereQuestions
     * const count = await prisma.qualiCarriereQuestion.count({
     *   where: {
     *     // ... the filter for the QualiCarriereQuestions we want to count
     *   }
     * })
    **/
    count<T extends QualiCarriereQuestionCountArgs>(
      args?: Subset<T, QualiCarriereQuestionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QualiCarriereQuestionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QualiCarriereQuestion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereQuestionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QualiCarriereQuestionAggregateArgs>(args: Subset<T, QualiCarriereQuestionAggregateArgs>): Prisma.PrismaPromise<GetQualiCarriereQuestionAggregateType<T>>

    /**
     * Group by QualiCarriereQuestion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereQuestionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QualiCarriereQuestionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QualiCarriereQuestionGroupByArgs['orderBy'] }
        : { orderBy?: QualiCarriereQuestionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QualiCarriereQuestionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQualiCarriereQuestionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QualiCarriereQuestion model
   */
  readonly fields: QualiCarriereQuestionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QualiCarriereQuestion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QualiCarriereQuestionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    sectionInfo<T extends SectionInfoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfoDefaultArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    qualiCarriereResponse<T extends QualiCarriereQuestion$qualiCarriereResponseArgs<ExtArgs> = {}>(args?: Subset<T, QualiCarriereQuestion$qualiCarriereResponseArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QualiCarriereQuestion model
   */
  interface QualiCarriereQuestionFieldRefs {
    readonly id: FieldRef<"QualiCarriereQuestion", 'Int'>
    readonly order: FieldRef<"QualiCarriereQuestion", 'Int'>
    readonly content: FieldRef<"QualiCarriereQuestion", 'String'>
    readonly sectionInfoId: FieldRef<"QualiCarriereQuestion", 'Int'>
    readonly userId: FieldRef<"QualiCarriereQuestion", 'Int'>
    readonly createdAt: FieldRef<"QualiCarriereQuestion", 'DateTime'>
    readonly updatedAt: FieldRef<"QualiCarriereQuestion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * QualiCarriereQuestion findUnique
   */
  export type QualiCarriereQuestionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereQuestion to fetch.
     */
    where: QualiCarriereQuestionWhereUniqueInput
  }

  /**
   * QualiCarriereQuestion findUniqueOrThrow
   */
  export type QualiCarriereQuestionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereQuestion to fetch.
     */
    where: QualiCarriereQuestionWhereUniqueInput
  }

  /**
   * QualiCarriereQuestion findFirst
   */
  export type QualiCarriereQuestionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereQuestion to fetch.
     */
    where?: QualiCarriereQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereQuestions to fetch.
     */
    orderBy?: QualiCarriereQuestionOrderByWithRelationInput | QualiCarriereQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereQuestions.
     */
    cursor?: QualiCarriereQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereQuestions.
     */
    distinct?: QualiCarriereQuestionScalarFieldEnum | QualiCarriereQuestionScalarFieldEnum[]
  }

  /**
   * QualiCarriereQuestion findFirstOrThrow
   */
  export type QualiCarriereQuestionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereQuestion to fetch.
     */
    where?: QualiCarriereQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereQuestions to fetch.
     */
    orderBy?: QualiCarriereQuestionOrderByWithRelationInput | QualiCarriereQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereQuestions.
     */
    cursor?: QualiCarriereQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereQuestions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereQuestions.
     */
    distinct?: QualiCarriereQuestionScalarFieldEnum | QualiCarriereQuestionScalarFieldEnum[]
  }

  /**
   * QualiCarriereQuestion findMany
   */
  export type QualiCarriereQuestionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereQuestions to fetch.
     */
    where?: QualiCarriereQuestionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereQuestions to fetch.
     */
    orderBy?: QualiCarriereQuestionOrderByWithRelationInput | QualiCarriereQuestionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QualiCarriereQuestions.
     */
    cursor?: QualiCarriereQuestionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereQuestions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereQuestions.
     */
    skip?: number
    distinct?: QualiCarriereQuestionScalarFieldEnum | QualiCarriereQuestionScalarFieldEnum[]
  }

  /**
   * QualiCarriereQuestion create
   */
  export type QualiCarriereQuestionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * The data needed to create a QualiCarriereQuestion.
     */
    data: XOR<QualiCarriereQuestionCreateInput, QualiCarriereQuestionUncheckedCreateInput>
  }

  /**
   * QualiCarriereQuestion createMany
   */
  export type QualiCarriereQuestionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QualiCarriereQuestions.
     */
    data: QualiCarriereQuestionCreateManyInput | QualiCarriereQuestionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QualiCarriereQuestion createManyAndReturn
   */
  export type QualiCarriereQuestionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * The data used to create many QualiCarriereQuestions.
     */
    data: QualiCarriereQuestionCreateManyInput | QualiCarriereQuestionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereQuestion update
   */
  export type QualiCarriereQuestionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * The data needed to update a QualiCarriereQuestion.
     */
    data: XOR<QualiCarriereQuestionUpdateInput, QualiCarriereQuestionUncheckedUpdateInput>
    /**
     * Choose, which QualiCarriereQuestion to update.
     */
    where: QualiCarriereQuestionWhereUniqueInput
  }

  /**
   * QualiCarriereQuestion updateMany
   */
  export type QualiCarriereQuestionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QualiCarriereQuestions.
     */
    data: XOR<QualiCarriereQuestionUpdateManyMutationInput, QualiCarriereQuestionUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereQuestions to update
     */
    where?: QualiCarriereQuestionWhereInput
    /**
     * Limit how many QualiCarriereQuestions to update.
     */
    limit?: number
  }

  /**
   * QualiCarriereQuestion updateManyAndReturn
   */
  export type QualiCarriereQuestionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * The data used to update QualiCarriereQuestions.
     */
    data: XOR<QualiCarriereQuestionUpdateManyMutationInput, QualiCarriereQuestionUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereQuestions to update
     */
    where?: QualiCarriereQuestionWhereInput
    /**
     * Limit how many QualiCarriereQuestions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereQuestion upsert
   */
  export type QualiCarriereQuestionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * The filter to search for the QualiCarriereQuestion to update in case it exists.
     */
    where: QualiCarriereQuestionWhereUniqueInput
    /**
     * In case the QualiCarriereQuestion found by the `where` argument doesn't exist, create a new QualiCarriereQuestion with this data.
     */
    create: XOR<QualiCarriereQuestionCreateInput, QualiCarriereQuestionUncheckedCreateInput>
    /**
     * In case the QualiCarriereQuestion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QualiCarriereQuestionUpdateInput, QualiCarriereQuestionUncheckedUpdateInput>
  }

  /**
   * QualiCarriereQuestion delete
   */
  export type QualiCarriereQuestionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
    /**
     * Filter which QualiCarriereQuestion to delete.
     */
    where: QualiCarriereQuestionWhereUniqueInput
  }

  /**
   * QualiCarriereQuestion deleteMany
   */
  export type QualiCarriereQuestionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereQuestions to delete
     */
    where?: QualiCarriereQuestionWhereInput
    /**
     * Limit how many QualiCarriereQuestions to delete.
     */
    limit?: number
  }

  /**
   * QualiCarriereQuestion.qualiCarriereResponse
   */
  export type QualiCarriereQuestion$qualiCarriereResponseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    where?: QualiCarriereResponseWhereInput
  }

  /**
   * QualiCarriereQuestion without action
   */
  export type QualiCarriereQuestionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereQuestion
     */
    select?: QualiCarriereQuestionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereQuestion
     */
    omit?: QualiCarriereQuestionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereQuestionInclude<ExtArgs> | null
  }


  /**
   * Model QualiCarriereResponse
   */

  export type AggregateQualiCarriereResponse = {
    _count: QualiCarriereResponseCountAggregateOutputType | null
    _avg: QualiCarriereResponseAvgAggregateOutputType | null
    _sum: QualiCarriereResponseSumAggregateOutputType | null
    _min: QualiCarriereResponseMinAggregateOutputType | null
    _max: QualiCarriereResponseMaxAggregateOutputType | null
  }

  export type QualiCarriereResponseAvgAggregateOutputType = {
    id: number | null
    questionId: number | null
    sectionInfoId: number | null
    userId: number | null
  }

  export type QualiCarriereResponseSumAggregateOutputType = {
    id: number | null
    questionId: number | null
    sectionInfoId: number | null
    userId: number | null
  }

  export type QualiCarriereResponseMinAggregateOutputType = {
    id: number | null
    content: string | null
    questionId: number | null
    sectionInfoId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereResponseMaxAggregateOutputType = {
    id: number | null
    content: string | null
    questionId: number | null
    sectionInfoId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereResponseCountAggregateOutputType = {
    id: number
    content: number
    questionId: number
    sectionInfoId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type QualiCarriereResponseAvgAggregateInputType = {
    id?: true
    questionId?: true
    sectionInfoId?: true
    userId?: true
  }

  export type QualiCarriereResponseSumAggregateInputType = {
    id?: true
    questionId?: true
    sectionInfoId?: true
    userId?: true
  }

  export type QualiCarriereResponseMinAggregateInputType = {
    id?: true
    content?: true
    questionId?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereResponseMaxAggregateInputType = {
    id?: true
    content?: true
    questionId?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereResponseCountAggregateInputType = {
    id?: true
    content?: true
    questionId?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type QualiCarriereResponseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereResponse to aggregate.
     */
    where?: QualiCarriereResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereResponses to fetch.
     */
    orderBy?: QualiCarriereResponseOrderByWithRelationInput | QualiCarriereResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QualiCarriereResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QualiCarriereResponses
    **/
    _count?: true | QualiCarriereResponseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QualiCarriereResponseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QualiCarriereResponseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QualiCarriereResponseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QualiCarriereResponseMaxAggregateInputType
  }

  export type GetQualiCarriereResponseAggregateType<T extends QualiCarriereResponseAggregateArgs> = {
        [P in keyof T & keyof AggregateQualiCarriereResponse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQualiCarriereResponse[P]>
      : GetScalarType<T[P], AggregateQualiCarriereResponse[P]>
  }




  export type QualiCarriereResponseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereResponseWhereInput
    orderBy?: QualiCarriereResponseOrderByWithAggregationInput | QualiCarriereResponseOrderByWithAggregationInput[]
    by: QualiCarriereResponseScalarFieldEnum[] | QualiCarriereResponseScalarFieldEnum
    having?: QualiCarriereResponseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QualiCarriereResponseCountAggregateInputType | true
    _avg?: QualiCarriereResponseAvgAggregateInputType
    _sum?: QualiCarriereResponseSumAggregateInputType
    _min?: QualiCarriereResponseMinAggregateInputType
    _max?: QualiCarriereResponseMaxAggregateInputType
  }

  export type QualiCarriereResponseGroupByOutputType = {
    id: number
    content: string
    questionId: number
    sectionInfoId: number
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: QualiCarriereResponseCountAggregateOutputType | null
    _avg: QualiCarriereResponseAvgAggregateOutputType | null
    _sum: QualiCarriereResponseSumAggregateOutputType | null
    _min: QualiCarriereResponseMinAggregateOutputType | null
    _max: QualiCarriereResponseMaxAggregateOutputType | null
  }

  type GetQualiCarriereResponseGroupByPayload<T extends QualiCarriereResponseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QualiCarriereResponseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QualiCarriereResponseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QualiCarriereResponseGroupByOutputType[P]>
            : GetScalarType<T[P], QualiCarriereResponseGroupByOutputType[P]>
        }
      >
    >


  export type QualiCarriereResponseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    questionId?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    qualiCarriereQuestion?: boolean | QualiCarriereQuestionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    SectionInfo?: boolean | QualiCarriereResponse$SectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereResponse"]>

  export type QualiCarriereResponseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    questionId?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    qualiCarriereQuestion?: boolean | QualiCarriereQuestionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    SectionInfo?: boolean | QualiCarriereResponse$SectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereResponse"]>

  export type QualiCarriereResponseSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    questionId?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    qualiCarriereQuestion?: boolean | QualiCarriereQuestionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    SectionInfo?: boolean | QualiCarriereResponse$SectionInfoArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereResponse"]>

  export type QualiCarriereResponseSelectScalar = {
    id?: boolean
    content?: boolean
    questionId?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type QualiCarriereResponseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "questionId" | "sectionInfoId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["qualiCarriereResponse"]>
  export type QualiCarriereResponseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    qualiCarriereQuestion?: boolean | QualiCarriereQuestionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    SectionInfo?: boolean | QualiCarriereResponse$SectionInfoArgs<ExtArgs>
  }
  export type QualiCarriereResponseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    qualiCarriereQuestion?: boolean | QualiCarriereQuestionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    SectionInfo?: boolean | QualiCarriereResponse$SectionInfoArgs<ExtArgs>
  }
  export type QualiCarriereResponseIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    qualiCarriereQuestion?: boolean | QualiCarriereQuestionDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
    SectionInfo?: boolean | QualiCarriereResponse$SectionInfoArgs<ExtArgs>
  }

  export type $QualiCarriereResponsePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QualiCarriereResponse"
    objects: {
      qualiCarriereQuestion: Prisma.$QualiCarriereQuestionPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
      SectionInfo: Prisma.$SectionInfoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      questionId: number
      sectionInfoId: number
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["qualiCarriereResponse"]>
    composites: {}
  }

  type QualiCarriereResponseGetPayload<S extends boolean | null | undefined | QualiCarriereResponseDefaultArgs> = $Result.GetResult<Prisma.$QualiCarriereResponsePayload, S>

  type QualiCarriereResponseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QualiCarriereResponseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QualiCarriereResponseCountAggregateInputType | true
    }

  export interface QualiCarriereResponseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QualiCarriereResponse'], meta: { name: 'QualiCarriereResponse' } }
    /**
     * Find zero or one QualiCarriereResponse that matches the filter.
     * @param {QualiCarriereResponseFindUniqueArgs} args - Arguments to find a QualiCarriereResponse
     * @example
     * // Get one QualiCarriereResponse
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QualiCarriereResponseFindUniqueArgs>(args: SelectSubset<T, QualiCarriereResponseFindUniqueArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one QualiCarriereResponse that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QualiCarriereResponseFindUniqueOrThrowArgs} args - Arguments to find a QualiCarriereResponse
     * @example
     * // Get one QualiCarriereResponse
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QualiCarriereResponseFindUniqueOrThrowArgs>(args: SelectSubset<T, QualiCarriereResponseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereResponse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResponseFindFirstArgs} args - Arguments to find a QualiCarriereResponse
     * @example
     * // Get one QualiCarriereResponse
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QualiCarriereResponseFindFirstArgs>(args?: SelectSubset<T, QualiCarriereResponseFindFirstArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereResponse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResponseFindFirstOrThrowArgs} args - Arguments to find a QualiCarriereResponse
     * @example
     * // Get one QualiCarriereResponse
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QualiCarriereResponseFindFirstOrThrowArgs>(args?: SelectSubset<T, QualiCarriereResponseFindFirstOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more QualiCarriereResponses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResponseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QualiCarriereResponses
     * const qualiCarriereResponses = await prisma.qualiCarriereResponse.findMany()
     * 
     * // Get first 10 QualiCarriereResponses
     * const qualiCarriereResponses = await prisma.qualiCarriereResponse.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const qualiCarriereResponseWithIdOnly = await prisma.qualiCarriereResponse.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QualiCarriereResponseFindManyArgs>(args?: SelectSubset<T, QualiCarriereResponseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a QualiCarriereResponse.
     * @param {QualiCarriereResponseCreateArgs} args - Arguments to create a QualiCarriereResponse.
     * @example
     * // Create one QualiCarriereResponse
     * const QualiCarriereResponse = await prisma.qualiCarriereResponse.create({
     *   data: {
     *     // ... data to create a QualiCarriereResponse
     *   }
     * })
     * 
     */
    create<T extends QualiCarriereResponseCreateArgs>(args: SelectSubset<T, QualiCarriereResponseCreateArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many QualiCarriereResponses.
     * @param {QualiCarriereResponseCreateManyArgs} args - Arguments to create many QualiCarriereResponses.
     * @example
     * // Create many QualiCarriereResponses
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QualiCarriereResponseCreateManyArgs>(args?: SelectSubset<T, QualiCarriereResponseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many QualiCarriereResponses and returns the data saved in the database.
     * @param {QualiCarriereResponseCreateManyAndReturnArgs} args - Arguments to create many QualiCarriereResponses.
     * @example
     * // Create many QualiCarriereResponses
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many QualiCarriereResponses and only return the `id`
     * const qualiCarriereResponseWithIdOnly = await prisma.qualiCarriereResponse.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QualiCarriereResponseCreateManyAndReturnArgs>(args?: SelectSubset<T, QualiCarriereResponseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a QualiCarriereResponse.
     * @param {QualiCarriereResponseDeleteArgs} args - Arguments to delete one QualiCarriereResponse.
     * @example
     * // Delete one QualiCarriereResponse
     * const QualiCarriereResponse = await prisma.qualiCarriereResponse.delete({
     *   where: {
     *     // ... filter to delete one QualiCarriereResponse
     *   }
     * })
     * 
     */
    delete<T extends QualiCarriereResponseDeleteArgs>(args: SelectSubset<T, QualiCarriereResponseDeleteArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one QualiCarriereResponse.
     * @param {QualiCarriereResponseUpdateArgs} args - Arguments to update one QualiCarriereResponse.
     * @example
     * // Update one QualiCarriereResponse
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QualiCarriereResponseUpdateArgs>(args: SelectSubset<T, QualiCarriereResponseUpdateArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more QualiCarriereResponses.
     * @param {QualiCarriereResponseDeleteManyArgs} args - Arguments to filter QualiCarriereResponses to delete.
     * @example
     * // Delete a few QualiCarriereResponses
     * const { count } = await prisma.qualiCarriereResponse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QualiCarriereResponseDeleteManyArgs>(args?: SelectSubset<T, QualiCarriereResponseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResponseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QualiCarriereResponses
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QualiCarriereResponseUpdateManyArgs>(args: SelectSubset<T, QualiCarriereResponseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereResponses and returns the data updated in the database.
     * @param {QualiCarriereResponseUpdateManyAndReturnArgs} args - Arguments to update many QualiCarriereResponses.
     * @example
     * // Update many QualiCarriereResponses
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more QualiCarriereResponses and only return the `id`
     * const qualiCarriereResponseWithIdOnly = await prisma.qualiCarriereResponse.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends QualiCarriereResponseUpdateManyAndReturnArgs>(args: SelectSubset<T, QualiCarriereResponseUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one QualiCarriereResponse.
     * @param {QualiCarriereResponseUpsertArgs} args - Arguments to update or create a QualiCarriereResponse.
     * @example
     * // Update or create a QualiCarriereResponse
     * const qualiCarriereResponse = await prisma.qualiCarriereResponse.upsert({
     *   create: {
     *     // ... data to create a QualiCarriereResponse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QualiCarriereResponse we want to update
     *   }
     * })
     */
    upsert<T extends QualiCarriereResponseUpsertArgs>(args: SelectSubset<T, QualiCarriereResponseUpsertArgs<ExtArgs>>): Prisma__QualiCarriereResponseClient<$Result.GetResult<Prisma.$QualiCarriereResponsePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of QualiCarriereResponses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResponseCountArgs} args - Arguments to filter QualiCarriereResponses to count.
     * @example
     * // Count the number of QualiCarriereResponses
     * const count = await prisma.qualiCarriereResponse.count({
     *   where: {
     *     // ... the filter for the QualiCarriereResponses we want to count
     *   }
     * })
    **/
    count<T extends QualiCarriereResponseCountArgs>(
      args?: Subset<T, QualiCarriereResponseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QualiCarriereResponseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QualiCarriereResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResponseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QualiCarriereResponseAggregateArgs>(args: Subset<T, QualiCarriereResponseAggregateArgs>): Prisma.PrismaPromise<GetQualiCarriereResponseAggregateType<T>>

    /**
     * Group by QualiCarriereResponse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResponseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QualiCarriereResponseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QualiCarriereResponseGroupByArgs['orderBy'] }
        : { orderBy?: QualiCarriereResponseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QualiCarriereResponseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQualiCarriereResponseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QualiCarriereResponse model
   */
  readonly fields: QualiCarriereResponseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QualiCarriereResponse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QualiCarriereResponseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    qualiCarriereQuestion<T extends QualiCarriereQuestionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, QualiCarriereQuestionDefaultArgs<ExtArgs>>): Prisma__QualiCarriereQuestionClient<$Result.GetResult<Prisma.$QualiCarriereQuestionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    SectionInfo<T extends QualiCarriereResponse$SectionInfoArgs<ExtArgs> = {}>(args?: Subset<T, QualiCarriereResponse$SectionInfoArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QualiCarriereResponse model
   */
  interface QualiCarriereResponseFieldRefs {
    readonly id: FieldRef<"QualiCarriereResponse", 'Int'>
    readonly content: FieldRef<"QualiCarriereResponse", 'String'>
    readonly questionId: FieldRef<"QualiCarriereResponse", 'Int'>
    readonly sectionInfoId: FieldRef<"QualiCarriereResponse", 'Int'>
    readonly userId: FieldRef<"QualiCarriereResponse", 'Int'>
    readonly createdAt: FieldRef<"QualiCarriereResponse", 'DateTime'>
    readonly updatedAt: FieldRef<"QualiCarriereResponse", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * QualiCarriereResponse findUnique
   */
  export type QualiCarriereResponseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResponse to fetch.
     */
    where: QualiCarriereResponseWhereUniqueInput
  }

  /**
   * QualiCarriereResponse findUniqueOrThrow
   */
  export type QualiCarriereResponseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResponse to fetch.
     */
    where: QualiCarriereResponseWhereUniqueInput
  }

  /**
   * QualiCarriereResponse findFirst
   */
  export type QualiCarriereResponseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResponse to fetch.
     */
    where?: QualiCarriereResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereResponses to fetch.
     */
    orderBy?: QualiCarriereResponseOrderByWithRelationInput | QualiCarriereResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereResponses.
     */
    cursor?: QualiCarriereResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereResponses.
     */
    distinct?: QualiCarriereResponseScalarFieldEnum | QualiCarriereResponseScalarFieldEnum[]
  }

  /**
   * QualiCarriereResponse findFirstOrThrow
   */
  export type QualiCarriereResponseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResponse to fetch.
     */
    where?: QualiCarriereResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereResponses to fetch.
     */
    orderBy?: QualiCarriereResponseOrderByWithRelationInput | QualiCarriereResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereResponses.
     */
    cursor?: QualiCarriereResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereResponses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereResponses.
     */
    distinct?: QualiCarriereResponseScalarFieldEnum | QualiCarriereResponseScalarFieldEnum[]
  }

  /**
   * QualiCarriereResponse findMany
   */
  export type QualiCarriereResponseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResponses to fetch.
     */
    where?: QualiCarriereResponseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereResponses to fetch.
     */
    orderBy?: QualiCarriereResponseOrderByWithRelationInput | QualiCarriereResponseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QualiCarriereResponses.
     */
    cursor?: QualiCarriereResponseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereResponses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereResponses.
     */
    skip?: number
    distinct?: QualiCarriereResponseScalarFieldEnum | QualiCarriereResponseScalarFieldEnum[]
  }

  /**
   * QualiCarriereResponse create
   */
  export type QualiCarriereResponseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * The data needed to create a QualiCarriereResponse.
     */
    data: XOR<QualiCarriereResponseCreateInput, QualiCarriereResponseUncheckedCreateInput>
  }

  /**
   * QualiCarriereResponse createMany
   */
  export type QualiCarriereResponseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QualiCarriereResponses.
     */
    data: QualiCarriereResponseCreateManyInput | QualiCarriereResponseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QualiCarriereResponse createManyAndReturn
   */
  export type QualiCarriereResponseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * The data used to create many QualiCarriereResponses.
     */
    data: QualiCarriereResponseCreateManyInput | QualiCarriereResponseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereResponse update
   */
  export type QualiCarriereResponseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * The data needed to update a QualiCarriereResponse.
     */
    data: XOR<QualiCarriereResponseUpdateInput, QualiCarriereResponseUncheckedUpdateInput>
    /**
     * Choose, which QualiCarriereResponse to update.
     */
    where: QualiCarriereResponseWhereUniqueInput
  }

  /**
   * QualiCarriereResponse updateMany
   */
  export type QualiCarriereResponseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QualiCarriereResponses.
     */
    data: XOR<QualiCarriereResponseUpdateManyMutationInput, QualiCarriereResponseUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereResponses to update
     */
    where?: QualiCarriereResponseWhereInput
    /**
     * Limit how many QualiCarriereResponses to update.
     */
    limit?: number
  }

  /**
   * QualiCarriereResponse updateManyAndReturn
   */
  export type QualiCarriereResponseUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * The data used to update QualiCarriereResponses.
     */
    data: XOR<QualiCarriereResponseUpdateManyMutationInput, QualiCarriereResponseUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereResponses to update
     */
    where?: QualiCarriereResponseWhereInput
    /**
     * Limit how many QualiCarriereResponses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereResponse upsert
   */
  export type QualiCarriereResponseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * The filter to search for the QualiCarriereResponse to update in case it exists.
     */
    where: QualiCarriereResponseWhereUniqueInput
    /**
     * In case the QualiCarriereResponse found by the `where` argument doesn't exist, create a new QualiCarriereResponse with this data.
     */
    create: XOR<QualiCarriereResponseCreateInput, QualiCarriereResponseUncheckedCreateInput>
    /**
     * In case the QualiCarriereResponse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QualiCarriereResponseUpdateInput, QualiCarriereResponseUncheckedUpdateInput>
  }

  /**
   * QualiCarriereResponse delete
   */
  export type QualiCarriereResponseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
    /**
     * Filter which QualiCarriereResponse to delete.
     */
    where: QualiCarriereResponseWhereUniqueInput
  }

  /**
   * QualiCarriereResponse deleteMany
   */
  export type QualiCarriereResponseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereResponses to delete
     */
    where?: QualiCarriereResponseWhereInput
    /**
     * Limit how many QualiCarriereResponses to delete.
     */
    limit?: number
  }

  /**
   * QualiCarriereResponse.SectionInfo
   */
  export type QualiCarriereResponse$SectionInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionInfo
     */
    select?: SectionInfoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SectionInfo
     */
    omit?: SectionInfoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SectionInfoInclude<ExtArgs> | null
    where?: SectionInfoWhereInput
  }

  /**
   * QualiCarriereResponse without action
   */
  export type QualiCarriereResponseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResponse
     */
    select?: QualiCarriereResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResponse
     */
    omit?: QualiCarriereResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResponseInclude<ExtArgs> | null
  }


  /**
   * Model QualiCarriereResume
   */

  export type AggregateQualiCarriereResume = {
    _count: QualiCarriereResumeCountAggregateOutputType | null
    _avg: QualiCarriereResumeAvgAggregateOutputType | null
    _sum: QualiCarriereResumeSumAggregateOutputType | null
    _min: QualiCarriereResumeMinAggregateOutputType | null
    _max: QualiCarriereResumeMaxAggregateOutputType | null
  }

  export type QualiCarriereResumeAvgAggregateOutputType = {
    id: number | null
    sectionInfoId: number | null
    userId: number | null
  }

  export type QualiCarriereResumeSumAggregateOutputType = {
    id: number | null
    sectionInfoId: number | null
    userId: number | null
  }

  export type QualiCarriereResumeMinAggregateOutputType = {
    id: number | null
    content: string | null
    sectionInfoId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereResumeMaxAggregateOutputType = {
    id: number | null
    content: string | null
    sectionInfoId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereResumeCountAggregateOutputType = {
    id: number
    content: number
    sectionInfoId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type QualiCarriereResumeAvgAggregateInputType = {
    id?: true
    sectionInfoId?: true
    userId?: true
  }

  export type QualiCarriereResumeSumAggregateInputType = {
    id?: true
    sectionInfoId?: true
    userId?: true
  }

  export type QualiCarriereResumeMinAggregateInputType = {
    id?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereResumeMaxAggregateInputType = {
    id?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereResumeCountAggregateInputType = {
    id?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type QualiCarriereResumeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereResume to aggregate.
     */
    where?: QualiCarriereResumeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereResumes to fetch.
     */
    orderBy?: QualiCarriereResumeOrderByWithRelationInput | QualiCarriereResumeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QualiCarriereResumeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereResumes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereResumes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QualiCarriereResumes
    **/
    _count?: true | QualiCarriereResumeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QualiCarriereResumeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QualiCarriereResumeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QualiCarriereResumeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QualiCarriereResumeMaxAggregateInputType
  }

  export type GetQualiCarriereResumeAggregateType<T extends QualiCarriereResumeAggregateArgs> = {
        [P in keyof T & keyof AggregateQualiCarriereResume]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQualiCarriereResume[P]>
      : GetScalarType<T[P], AggregateQualiCarriereResume[P]>
  }




  export type QualiCarriereResumeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereResumeWhereInput
    orderBy?: QualiCarriereResumeOrderByWithAggregationInput | QualiCarriereResumeOrderByWithAggregationInput[]
    by: QualiCarriereResumeScalarFieldEnum[] | QualiCarriereResumeScalarFieldEnum
    having?: QualiCarriereResumeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QualiCarriereResumeCountAggregateInputType | true
    _avg?: QualiCarriereResumeAvgAggregateInputType
    _sum?: QualiCarriereResumeSumAggregateInputType
    _min?: QualiCarriereResumeMinAggregateInputType
    _max?: QualiCarriereResumeMaxAggregateInputType
  }

  export type QualiCarriereResumeGroupByOutputType = {
    id: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: QualiCarriereResumeCountAggregateOutputType | null
    _avg: QualiCarriereResumeAvgAggregateOutputType | null
    _sum: QualiCarriereResumeSumAggregateOutputType | null
    _min: QualiCarriereResumeMinAggregateOutputType | null
    _max: QualiCarriereResumeMaxAggregateOutputType | null
  }

  type GetQualiCarriereResumeGroupByPayload<T extends QualiCarriereResumeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QualiCarriereResumeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QualiCarriereResumeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QualiCarriereResumeGroupByOutputType[P]>
            : GetScalarType<T[P], QualiCarriereResumeGroupByOutputType[P]>
        }
      >
    >


  export type QualiCarriereResumeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereResume"]>

  export type QualiCarriereResumeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereResume"]>

  export type QualiCarriereResumeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereResume"]>

  export type QualiCarriereResumeSelectScalar = {
    id?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type QualiCarriereResumeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "sectionInfoId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["qualiCarriereResume"]>
  export type QualiCarriereResumeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type QualiCarriereResumeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type QualiCarriereResumeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $QualiCarriereResumePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QualiCarriereResume"
    objects: {
      sectionInfo: Prisma.$SectionInfoPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      sectionInfoId: number
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["qualiCarriereResume"]>
    composites: {}
  }

  type QualiCarriereResumeGetPayload<S extends boolean | null | undefined | QualiCarriereResumeDefaultArgs> = $Result.GetResult<Prisma.$QualiCarriereResumePayload, S>

  type QualiCarriereResumeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QualiCarriereResumeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QualiCarriereResumeCountAggregateInputType | true
    }

  export interface QualiCarriereResumeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QualiCarriereResume'], meta: { name: 'QualiCarriereResume' } }
    /**
     * Find zero or one QualiCarriereResume that matches the filter.
     * @param {QualiCarriereResumeFindUniqueArgs} args - Arguments to find a QualiCarriereResume
     * @example
     * // Get one QualiCarriereResume
     * const qualiCarriereResume = await prisma.qualiCarriereResume.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QualiCarriereResumeFindUniqueArgs>(args: SelectSubset<T, QualiCarriereResumeFindUniqueArgs<ExtArgs>>): Prisma__QualiCarriereResumeClient<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one QualiCarriereResume that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QualiCarriereResumeFindUniqueOrThrowArgs} args - Arguments to find a QualiCarriereResume
     * @example
     * // Get one QualiCarriereResume
     * const qualiCarriereResume = await prisma.qualiCarriereResume.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QualiCarriereResumeFindUniqueOrThrowArgs>(args: SelectSubset<T, QualiCarriereResumeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereResumeClient<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereResume that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResumeFindFirstArgs} args - Arguments to find a QualiCarriereResume
     * @example
     * // Get one QualiCarriereResume
     * const qualiCarriereResume = await prisma.qualiCarriereResume.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QualiCarriereResumeFindFirstArgs>(args?: SelectSubset<T, QualiCarriereResumeFindFirstArgs<ExtArgs>>): Prisma__QualiCarriereResumeClient<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereResume that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResumeFindFirstOrThrowArgs} args - Arguments to find a QualiCarriereResume
     * @example
     * // Get one QualiCarriereResume
     * const qualiCarriereResume = await prisma.qualiCarriereResume.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QualiCarriereResumeFindFirstOrThrowArgs>(args?: SelectSubset<T, QualiCarriereResumeFindFirstOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereResumeClient<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more QualiCarriereResumes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResumeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QualiCarriereResumes
     * const qualiCarriereResumes = await prisma.qualiCarriereResume.findMany()
     * 
     * // Get first 10 QualiCarriereResumes
     * const qualiCarriereResumes = await prisma.qualiCarriereResume.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const qualiCarriereResumeWithIdOnly = await prisma.qualiCarriereResume.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QualiCarriereResumeFindManyArgs>(args?: SelectSubset<T, QualiCarriereResumeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a QualiCarriereResume.
     * @param {QualiCarriereResumeCreateArgs} args - Arguments to create a QualiCarriereResume.
     * @example
     * // Create one QualiCarriereResume
     * const QualiCarriereResume = await prisma.qualiCarriereResume.create({
     *   data: {
     *     // ... data to create a QualiCarriereResume
     *   }
     * })
     * 
     */
    create<T extends QualiCarriereResumeCreateArgs>(args: SelectSubset<T, QualiCarriereResumeCreateArgs<ExtArgs>>): Prisma__QualiCarriereResumeClient<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many QualiCarriereResumes.
     * @param {QualiCarriereResumeCreateManyArgs} args - Arguments to create many QualiCarriereResumes.
     * @example
     * // Create many QualiCarriereResumes
     * const qualiCarriereResume = await prisma.qualiCarriereResume.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QualiCarriereResumeCreateManyArgs>(args?: SelectSubset<T, QualiCarriereResumeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many QualiCarriereResumes and returns the data saved in the database.
     * @param {QualiCarriereResumeCreateManyAndReturnArgs} args - Arguments to create many QualiCarriereResumes.
     * @example
     * // Create many QualiCarriereResumes
     * const qualiCarriereResume = await prisma.qualiCarriereResume.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many QualiCarriereResumes and only return the `id`
     * const qualiCarriereResumeWithIdOnly = await prisma.qualiCarriereResume.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QualiCarriereResumeCreateManyAndReturnArgs>(args?: SelectSubset<T, QualiCarriereResumeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a QualiCarriereResume.
     * @param {QualiCarriereResumeDeleteArgs} args - Arguments to delete one QualiCarriereResume.
     * @example
     * // Delete one QualiCarriereResume
     * const QualiCarriereResume = await prisma.qualiCarriereResume.delete({
     *   where: {
     *     // ... filter to delete one QualiCarriereResume
     *   }
     * })
     * 
     */
    delete<T extends QualiCarriereResumeDeleteArgs>(args: SelectSubset<T, QualiCarriereResumeDeleteArgs<ExtArgs>>): Prisma__QualiCarriereResumeClient<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one QualiCarriereResume.
     * @param {QualiCarriereResumeUpdateArgs} args - Arguments to update one QualiCarriereResume.
     * @example
     * // Update one QualiCarriereResume
     * const qualiCarriereResume = await prisma.qualiCarriereResume.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QualiCarriereResumeUpdateArgs>(args: SelectSubset<T, QualiCarriereResumeUpdateArgs<ExtArgs>>): Prisma__QualiCarriereResumeClient<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more QualiCarriereResumes.
     * @param {QualiCarriereResumeDeleteManyArgs} args - Arguments to filter QualiCarriereResumes to delete.
     * @example
     * // Delete a few QualiCarriereResumes
     * const { count } = await prisma.qualiCarriereResume.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QualiCarriereResumeDeleteManyArgs>(args?: SelectSubset<T, QualiCarriereResumeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereResumes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResumeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QualiCarriereResumes
     * const qualiCarriereResume = await prisma.qualiCarriereResume.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QualiCarriereResumeUpdateManyArgs>(args: SelectSubset<T, QualiCarriereResumeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereResumes and returns the data updated in the database.
     * @param {QualiCarriereResumeUpdateManyAndReturnArgs} args - Arguments to update many QualiCarriereResumes.
     * @example
     * // Update many QualiCarriereResumes
     * const qualiCarriereResume = await prisma.qualiCarriereResume.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more QualiCarriereResumes and only return the `id`
     * const qualiCarriereResumeWithIdOnly = await prisma.qualiCarriereResume.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends QualiCarriereResumeUpdateManyAndReturnArgs>(args: SelectSubset<T, QualiCarriereResumeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one QualiCarriereResume.
     * @param {QualiCarriereResumeUpsertArgs} args - Arguments to update or create a QualiCarriereResume.
     * @example
     * // Update or create a QualiCarriereResume
     * const qualiCarriereResume = await prisma.qualiCarriereResume.upsert({
     *   create: {
     *     // ... data to create a QualiCarriereResume
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QualiCarriereResume we want to update
     *   }
     * })
     */
    upsert<T extends QualiCarriereResumeUpsertArgs>(args: SelectSubset<T, QualiCarriereResumeUpsertArgs<ExtArgs>>): Prisma__QualiCarriereResumeClient<$Result.GetResult<Prisma.$QualiCarriereResumePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of QualiCarriereResumes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResumeCountArgs} args - Arguments to filter QualiCarriereResumes to count.
     * @example
     * // Count the number of QualiCarriereResumes
     * const count = await prisma.qualiCarriereResume.count({
     *   where: {
     *     // ... the filter for the QualiCarriereResumes we want to count
     *   }
     * })
    **/
    count<T extends QualiCarriereResumeCountArgs>(
      args?: Subset<T, QualiCarriereResumeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QualiCarriereResumeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QualiCarriereResume.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResumeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QualiCarriereResumeAggregateArgs>(args: Subset<T, QualiCarriereResumeAggregateArgs>): Prisma.PrismaPromise<GetQualiCarriereResumeAggregateType<T>>

    /**
     * Group by QualiCarriereResume.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereResumeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QualiCarriereResumeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QualiCarriereResumeGroupByArgs['orderBy'] }
        : { orderBy?: QualiCarriereResumeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QualiCarriereResumeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQualiCarriereResumeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QualiCarriereResume model
   */
  readonly fields: QualiCarriereResumeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QualiCarriereResume.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QualiCarriereResumeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sectionInfo<T extends SectionInfoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfoDefaultArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QualiCarriereResume model
   */
  interface QualiCarriereResumeFieldRefs {
    readonly id: FieldRef<"QualiCarriereResume", 'Int'>
    readonly content: FieldRef<"QualiCarriereResume", 'String'>
    readonly sectionInfoId: FieldRef<"QualiCarriereResume", 'Int'>
    readonly userId: FieldRef<"QualiCarriereResume", 'Int'>
    readonly createdAt: FieldRef<"QualiCarriereResume", 'DateTime'>
    readonly updatedAt: FieldRef<"QualiCarriereResume", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * QualiCarriereResume findUnique
   */
  export type QualiCarriereResumeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResume to fetch.
     */
    where: QualiCarriereResumeWhereUniqueInput
  }

  /**
   * QualiCarriereResume findUniqueOrThrow
   */
  export type QualiCarriereResumeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResume to fetch.
     */
    where: QualiCarriereResumeWhereUniqueInput
  }

  /**
   * QualiCarriereResume findFirst
   */
  export type QualiCarriereResumeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResume to fetch.
     */
    where?: QualiCarriereResumeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereResumes to fetch.
     */
    orderBy?: QualiCarriereResumeOrderByWithRelationInput | QualiCarriereResumeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereResumes.
     */
    cursor?: QualiCarriereResumeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereResumes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereResumes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereResumes.
     */
    distinct?: QualiCarriereResumeScalarFieldEnum | QualiCarriereResumeScalarFieldEnum[]
  }

  /**
   * QualiCarriereResume findFirstOrThrow
   */
  export type QualiCarriereResumeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResume to fetch.
     */
    where?: QualiCarriereResumeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereResumes to fetch.
     */
    orderBy?: QualiCarriereResumeOrderByWithRelationInput | QualiCarriereResumeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereResumes.
     */
    cursor?: QualiCarriereResumeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereResumes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereResumes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereResumes.
     */
    distinct?: QualiCarriereResumeScalarFieldEnum | QualiCarriereResumeScalarFieldEnum[]
  }

  /**
   * QualiCarriereResume findMany
   */
  export type QualiCarriereResumeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereResumes to fetch.
     */
    where?: QualiCarriereResumeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereResumes to fetch.
     */
    orderBy?: QualiCarriereResumeOrderByWithRelationInput | QualiCarriereResumeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QualiCarriereResumes.
     */
    cursor?: QualiCarriereResumeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereResumes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereResumes.
     */
    skip?: number
    distinct?: QualiCarriereResumeScalarFieldEnum | QualiCarriereResumeScalarFieldEnum[]
  }

  /**
   * QualiCarriereResume create
   */
  export type QualiCarriereResumeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * The data needed to create a QualiCarriereResume.
     */
    data: XOR<QualiCarriereResumeCreateInput, QualiCarriereResumeUncheckedCreateInput>
  }

  /**
   * QualiCarriereResume createMany
   */
  export type QualiCarriereResumeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QualiCarriereResumes.
     */
    data: QualiCarriereResumeCreateManyInput | QualiCarriereResumeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QualiCarriereResume createManyAndReturn
   */
  export type QualiCarriereResumeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * The data used to create many QualiCarriereResumes.
     */
    data: QualiCarriereResumeCreateManyInput | QualiCarriereResumeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereResume update
   */
  export type QualiCarriereResumeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * The data needed to update a QualiCarriereResume.
     */
    data: XOR<QualiCarriereResumeUpdateInput, QualiCarriereResumeUncheckedUpdateInput>
    /**
     * Choose, which QualiCarriereResume to update.
     */
    where: QualiCarriereResumeWhereUniqueInput
  }

  /**
   * QualiCarriereResume updateMany
   */
  export type QualiCarriereResumeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QualiCarriereResumes.
     */
    data: XOR<QualiCarriereResumeUpdateManyMutationInput, QualiCarriereResumeUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereResumes to update
     */
    where?: QualiCarriereResumeWhereInput
    /**
     * Limit how many QualiCarriereResumes to update.
     */
    limit?: number
  }

  /**
   * QualiCarriereResume updateManyAndReturn
   */
  export type QualiCarriereResumeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * The data used to update QualiCarriereResumes.
     */
    data: XOR<QualiCarriereResumeUpdateManyMutationInput, QualiCarriereResumeUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereResumes to update
     */
    where?: QualiCarriereResumeWhereInput
    /**
     * Limit how many QualiCarriereResumes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereResume upsert
   */
  export type QualiCarriereResumeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * The filter to search for the QualiCarriereResume to update in case it exists.
     */
    where: QualiCarriereResumeWhereUniqueInput
    /**
     * In case the QualiCarriereResume found by the `where` argument doesn't exist, create a new QualiCarriereResume with this data.
     */
    create: XOR<QualiCarriereResumeCreateInput, QualiCarriereResumeUncheckedCreateInput>
    /**
     * In case the QualiCarriereResume was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QualiCarriereResumeUpdateInput, QualiCarriereResumeUncheckedUpdateInput>
  }

  /**
   * QualiCarriereResume delete
   */
  export type QualiCarriereResumeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
    /**
     * Filter which QualiCarriereResume to delete.
     */
    where: QualiCarriereResumeWhereUniqueInput
  }

  /**
   * QualiCarriereResume deleteMany
   */
  export type QualiCarriereResumeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereResumes to delete
     */
    where?: QualiCarriereResumeWhereInput
    /**
     * Limit how many QualiCarriereResumes to delete.
     */
    limit?: number
  }

  /**
   * QualiCarriereResume without action
   */
  export type QualiCarriereResumeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereResume
     */
    select?: QualiCarriereResumeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereResume
     */
    omit?: QualiCarriereResumeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereResumeInclude<ExtArgs> | null
  }


  /**
   * Model QualiCarriereCompetence
   */

  export type AggregateQualiCarriereCompetence = {
    _count: QualiCarriereCompetenceCountAggregateOutputType | null
    _avg: QualiCarriereCompetenceAvgAggregateOutputType | null
    _sum: QualiCarriereCompetenceSumAggregateOutputType | null
    _min: QualiCarriereCompetenceMinAggregateOutputType | null
    _max: QualiCarriereCompetenceMaxAggregateOutputType | null
  }

  export type QualiCarriereCompetenceAvgAggregateOutputType = {
    id: number | null
    sectionInfoId: number | null
    userId: number | null
  }

  export type QualiCarriereCompetenceSumAggregateOutputType = {
    id: number | null
    sectionInfoId: number | null
    userId: number | null
  }

  export type QualiCarriereCompetenceMinAggregateOutputType = {
    id: number | null
    content: string | null
    sectionInfoId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereCompetenceMaxAggregateOutputType = {
    id: number | null
    content: string | null
    sectionInfoId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereCompetenceCountAggregateOutputType = {
    id: number
    content: number
    sectionInfoId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type QualiCarriereCompetenceAvgAggregateInputType = {
    id?: true
    sectionInfoId?: true
    userId?: true
  }

  export type QualiCarriereCompetenceSumAggregateInputType = {
    id?: true
    sectionInfoId?: true
    userId?: true
  }

  export type QualiCarriereCompetenceMinAggregateInputType = {
    id?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereCompetenceMaxAggregateInputType = {
    id?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereCompetenceCountAggregateInputType = {
    id?: true
    content?: true
    sectionInfoId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type QualiCarriereCompetenceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereCompetence to aggregate.
     */
    where?: QualiCarriereCompetenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereCompetences to fetch.
     */
    orderBy?: QualiCarriereCompetenceOrderByWithRelationInput | QualiCarriereCompetenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QualiCarriereCompetenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereCompetences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereCompetences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QualiCarriereCompetences
    **/
    _count?: true | QualiCarriereCompetenceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QualiCarriereCompetenceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QualiCarriereCompetenceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QualiCarriereCompetenceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QualiCarriereCompetenceMaxAggregateInputType
  }

  export type GetQualiCarriereCompetenceAggregateType<T extends QualiCarriereCompetenceAggregateArgs> = {
        [P in keyof T & keyof AggregateQualiCarriereCompetence]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQualiCarriereCompetence[P]>
      : GetScalarType<T[P], AggregateQualiCarriereCompetence[P]>
  }




  export type QualiCarriereCompetenceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereCompetenceWhereInput
    orderBy?: QualiCarriereCompetenceOrderByWithAggregationInput | QualiCarriereCompetenceOrderByWithAggregationInput[]
    by: QualiCarriereCompetenceScalarFieldEnum[] | QualiCarriereCompetenceScalarFieldEnum
    having?: QualiCarriereCompetenceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QualiCarriereCompetenceCountAggregateInputType | true
    _avg?: QualiCarriereCompetenceAvgAggregateInputType
    _sum?: QualiCarriereCompetenceSumAggregateInputType
    _min?: QualiCarriereCompetenceMinAggregateInputType
    _max?: QualiCarriereCompetenceMaxAggregateInputType
  }

  export type QualiCarriereCompetenceGroupByOutputType = {
    id: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: QualiCarriereCompetenceCountAggregateOutputType | null
    _avg: QualiCarriereCompetenceAvgAggregateOutputType | null
    _sum: QualiCarriereCompetenceSumAggregateOutputType | null
    _min: QualiCarriereCompetenceMinAggregateOutputType | null
    _max: QualiCarriereCompetenceMaxAggregateOutputType | null
  }

  type GetQualiCarriereCompetenceGroupByPayload<T extends QualiCarriereCompetenceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QualiCarriereCompetenceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QualiCarriereCompetenceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QualiCarriereCompetenceGroupByOutputType[P]>
            : GetScalarType<T[P], QualiCarriereCompetenceGroupByOutputType[P]>
        }
      >
    >


  export type QualiCarriereCompetenceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereCompetence"]>

  export type QualiCarriereCompetenceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereCompetence"]>

  export type QualiCarriereCompetenceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereCompetence"]>

  export type QualiCarriereCompetenceSelectScalar = {
    id?: boolean
    content?: boolean
    sectionInfoId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type QualiCarriereCompetenceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "sectionInfoId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["qualiCarriereCompetence"]>
  export type QualiCarriereCompetenceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type QualiCarriereCompetenceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type QualiCarriereCompetenceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sectionInfo?: boolean | SectionInfoDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $QualiCarriereCompetencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QualiCarriereCompetence"
    objects: {
      sectionInfo: Prisma.$SectionInfoPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      sectionInfoId: number
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["qualiCarriereCompetence"]>
    composites: {}
  }

  type QualiCarriereCompetenceGetPayload<S extends boolean | null | undefined | QualiCarriereCompetenceDefaultArgs> = $Result.GetResult<Prisma.$QualiCarriereCompetencePayload, S>

  type QualiCarriereCompetenceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QualiCarriereCompetenceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QualiCarriereCompetenceCountAggregateInputType | true
    }

  export interface QualiCarriereCompetenceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QualiCarriereCompetence'], meta: { name: 'QualiCarriereCompetence' } }
    /**
     * Find zero or one QualiCarriereCompetence that matches the filter.
     * @param {QualiCarriereCompetenceFindUniqueArgs} args - Arguments to find a QualiCarriereCompetence
     * @example
     * // Get one QualiCarriereCompetence
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QualiCarriereCompetenceFindUniqueArgs>(args: SelectSubset<T, QualiCarriereCompetenceFindUniqueArgs<ExtArgs>>): Prisma__QualiCarriereCompetenceClient<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one QualiCarriereCompetence that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QualiCarriereCompetenceFindUniqueOrThrowArgs} args - Arguments to find a QualiCarriereCompetence
     * @example
     * // Get one QualiCarriereCompetence
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QualiCarriereCompetenceFindUniqueOrThrowArgs>(args: SelectSubset<T, QualiCarriereCompetenceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereCompetenceClient<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereCompetence that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereCompetenceFindFirstArgs} args - Arguments to find a QualiCarriereCompetence
     * @example
     * // Get one QualiCarriereCompetence
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QualiCarriereCompetenceFindFirstArgs>(args?: SelectSubset<T, QualiCarriereCompetenceFindFirstArgs<ExtArgs>>): Prisma__QualiCarriereCompetenceClient<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereCompetence that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereCompetenceFindFirstOrThrowArgs} args - Arguments to find a QualiCarriereCompetence
     * @example
     * // Get one QualiCarriereCompetence
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QualiCarriereCompetenceFindFirstOrThrowArgs>(args?: SelectSubset<T, QualiCarriereCompetenceFindFirstOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereCompetenceClient<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more QualiCarriereCompetences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereCompetenceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QualiCarriereCompetences
     * const qualiCarriereCompetences = await prisma.qualiCarriereCompetence.findMany()
     * 
     * // Get first 10 QualiCarriereCompetences
     * const qualiCarriereCompetences = await prisma.qualiCarriereCompetence.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const qualiCarriereCompetenceWithIdOnly = await prisma.qualiCarriereCompetence.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QualiCarriereCompetenceFindManyArgs>(args?: SelectSubset<T, QualiCarriereCompetenceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a QualiCarriereCompetence.
     * @param {QualiCarriereCompetenceCreateArgs} args - Arguments to create a QualiCarriereCompetence.
     * @example
     * // Create one QualiCarriereCompetence
     * const QualiCarriereCompetence = await prisma.qualiCarriereCompetence.create({
     *   data: {
     *     // ... data to create a QualiCarriereCompetence
     *   }
     * })
     * 
     */
    create<T extends QualiCarriereCompetenceCreateArgs>(args: SelectSubset<T, QualiCarriereCompetenceCreateArgs<ExtArgs>>): Prisma__QualiCarriereCompetenceClient<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many QualiCarriereCompetences.
     * @param {QualiCarriereCompetenceCreateManyArgs} args - Arguments to create many QualiCarriereCompetences.
     * @example
     * // Create many QualiCarriereCompetences
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QualiCarriereCompetenceCreateManyArgs>(args?: SelectSubset<T, QualiCarriereCompetenceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many QualiCarriereCompetences and returns the data saved in the database.
     * @param {QualiCarriereCompetenceCreateManyAndReturnArgs} args - Arguments to create many QualiCarriereCompetences.
     * @example
     * // Create many QualiCarriereCompetences
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many QualiCarriereCompetences and only return the `id`
     * const qualiCarriereCompetenceWithIdOnly = await prisma.qualiCarriereCompetence.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QualiCarriereCompetenceCreateManyAndReturnArgs>(args?: SelectSubset<T, QualiCarriereCompetenceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a QualiCarriereCompetence.
     * @param {QualiCarriereCompetenceDeleteArgs} args - Arguments to delete one QualiCarriereCompetence.
     * @example
     * // Delete one QualiCarriereCompetence
     * const QualiCarriereCompetence = await prisma.qualiCarriereCompetence.delete({
     *   where: {
     *     // ... filter to delete one QualiCarriereCompetence
     *   }
     * })
     * 
     */
    delete<T extends QualiCarriereCompetenceDeleteArgs>(args: SelectSubset<T, QualiCarriereCompetenceDeleteArgs<ExtArgs>>): Prisma__QualiCarriereCompetenceClient<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one QualiCarriereCompetence.
     * @param {QualiCarriereCompetenceUpdateArgs} args - Arguments to update one QualiCarriereCompetence.
     * @example
     * // Update one QualiCarriereCompetence
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QualiCarriereCompetenceUpdateArgs>(args: SelectSubset<T, QualiCarriereCompetenceUpdateArgs<ExtArgs>>): Prisma__QualiCarriereCompetenceClient<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more QualiCarriereCompetences.
     * @param {QualiCarriereCompetenceDeleteManyArgs} args - Arguments to filter QualiCarriereCompetences to delete.
     * @example
     * // Delete a few QualiCarriereCompetences
     * const { count } = await prisma.qualiCarriereCompetence.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QualiCarriereCompetenceDeleteManyArgs>(args?: SelectSubset<T, QualiCarriereCompetenceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereCompetences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereCompetenceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QualiCarriereCompetences
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QualiCarriereCompetenceUpdateManyArgs>(args: SelectSubset<T, QualiCarriereCompetenceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereCompetences and returns the data updated in the database.
     * @param {QualiCarriereCompetenceUpdateManyAndReturnArgs} args - Arguments to update many QualiCarriereCompetences.
     * @example
     * // Update many QualiCarriereCompetences
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more QualiCarriereCompetences and only return the `id`
     * const qualiCarriereCompetenceWithIdOnly = await prisma.qualiCarriereCompetence.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends QualiCarriereCompetenceUpdateManyAndReturnArgs>(args: SelectSubset<T, QualiCarriereCompetenceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one QualiCarriereCompetence.
     * @param {QualiCarriereCompetenceUpsertArgs} args - Arguments to update or create a QualiCarriereCompetence.
     * @example
     * // Update or create a QualiCarriereCompetence
     * const qualiCarriereCompetence = await prisma.qualiCarriereCompetence.upsert({
     *   create: {
     *     // ... data to create a QualiCarriereCompetence
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QualiCarriereCompetence we want to update
     *   }
     * })
     */
    upsert<T extends QualiCarriereCompetenceUpsertArgs>(args: SelectSubset<T, QualiCarriereCompetenceUpsertArgs<ExtArgs>>): Prisma__QualiCarriereCompetenceClient<$Result.GetResult<Prisma.$QualiCarriereCompetencePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of QualiCarriereCompetences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereCompetenceCountArgs} args - Arguments to filter QualiCarriereCompetences to count.
     * @example
     * // Count the number of QualiCarriereCompetences
     * const count = await prisma.qualiCarriereCompetence.count({
     *   where: {
     *     // ... the filter for the QualiCarriereCompetences we want to count
     *   }
     * })
    **/
    count<T extends QualiCarriereCompetenceCountArgs>(
      args?: Subset<T, QualiCarriereCompetenceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QualiCarriereCompetenceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QualiCarriereCompetence.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereCompetenceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QualiCarriereCompetenceAggregateArgs>(args: Subset<T, QualiCarriereCompetenceAggregateArgs>): Prisma.PrismaPromise<GetQualiCarriereCompetenceAggregateType<T>>

    /**
     * Group by QualiCarriereCompetence.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereCompetenceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QualiCarriereCompetenceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QualiCarriereCompetenceGroupByArgs['orderBy'] }
        : { orderBy?: QualiCarriereCompetenceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QualiCarriereCompetenceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQualiCarriereCompetenceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QualiCarriereCompetence model
   */
  readonly fields: QualiCarriereCompetenceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QualiCarriereCompetence.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QualiCarriereCompetenceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sectionInfo<T extends SectionInfoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SectionInfoDefaultArgs<ExtArgs>>): Prisma__SectionInfoClient<$Result.GetResult<Prisma.$SectionInfoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QualiCarriereCompetence model
   */
  interface QualiCarriereCompetenceFieldRefs {
    readonly id: FieldRef<"QualiCarriereCompetence", 'Int'>
    readonly content: FieldRef<"QualiCarriereCompetence", 'String'>
    readonly sectionInfoId: FieldRef<"QualiCarriereCompetence", 'Int'>
    readonly userId: FieldRef<"QualiCarriereCompetence", 'Int'>
    readonly createdAt: FieldRef<"QualiCarriereCompetence", 'DateTime'>
    readonly updatedAt: FieldRef<"QualiCarriereCompetence", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * QualiCarriereCompetence findUnique
   */
  export type QualiCarriereCompetenceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereCompetence to fetch.
     */
    where: QualiCarriereCompetenceWhereUniqueInput
  }

  /**
   * QualiCarriereCompetence findUniqueOrThrow
   */
  export type QualiCarriereCompetenceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereCompetence to fetch.
     */
    where: QualiCarriereCompetenceWhereUniqueInput
  }

  /**
   * QualiCarriereCompetence findFirst
   */
  export type QualiCarriereCompetenceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereCompetence to fetch.
     */
    where?: QualiCarriereCompetenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereCompetences to fetch.
     */
    orderBy?: QualiCarriereCompetenceOrderByWithRelationInput | QualiCarriereCompetenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereCompetences.
     */
    cursor?: QualiCarriereCompetenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereCompetences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereCompetences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereCompetences.
     */
    distinct?: QualiCarriereCompetenceScalarFieldEnum | QualiCarriereCompetenceScalarFieldEnum[]
  }

  /**
   * QualiCarriereCompetence findFirstOrThrow
   */
  export type QualiCarriereCompetenceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereCompetence to fetch.
     */
    where?: QualiCarriereCompetenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereCompetences to fetch.
     */
    orderBy?: QualiCarriereCompetenceOrderByWithRelationInput | QualiCarriereCompetenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereCompetences.
     */
    cursor?: QualiCarriereCompetenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereCompetences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereCompetences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereCompetences.
     */
    distinct?: QualiCarriereCompetenceScalarFieldEnum | QualiCarriereCompetenceScalarFieldEnum[]
  }

  /**
   * QualiCarriereCompetence findMany
   */
  export type QualiCarriereCompetenceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereCompetences to fetch.
     */
    where?: QualiCarriereCompetenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereCompetences to fetch.
     */
    orderBy?: QualiCarriereCompetenceOrderByWithRelationInput | QualiCarriereCompetenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QualiCarriereCompetences.
     */
    cursor?: QualiCarriereCompetenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereCompetences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereCompetences.
     */
    skip?: number
    distinct?: QualiCarriereCompetenceScalarFieldEnum | QualiCarriereCompetenceScalarFieldEnum[]
  }

  /**
   * QualiCarriereCompetence create
   */
  export type QualiCarriereCompetenceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * The data needed to create a QualiCarriereCompetence.
     */
    data: XOR<QualiCarriereCompetenceCreateInput, QualiCarriereCompetenceUncheckedCreateInput>
  }

  /**
   * QualiCarriereCompetence createMany
   */
  export type QualiCarriereCompetenceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QualiCarriereCompetences.
     */
    data: QualiCarriereCompetenceCreateManyInput | QualiCarriereCompetenceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QualiCarriereCompetence createManyAndReturn
   */
  export type QualiCarriereCompetenceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * The data used to create many QualiCarriereCompetences.
     */
    data: QualiCarriereCompetenceCreateManyInput | QualiCarriereCompetenceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereCompetence update
   */
  export type QualiCarriereCompetenceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * The data needed to update a QualiCarriereCompetence.
     */
    data: XOR<QualiCarriereCompetenceUpdateInput, QualiCarriereCompetenceUncheckedUpdateInput>
    /**
     * Choose, which QualiCarriereCompetence to update.
     */
    where: QualiCarriereCompetenceWhereUniqueInput
  }

  /**
   * QualiCarriereCompetence updateMany
   */
  export type QualiCarriereCompetenceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QualiCarriereCompetences.
     */
    data: XOR<QualiCarriereCompetenceUpdateManyMutationInput, QualiCarriereCompetenceUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereCompetences to update
     */
    where?: QualiCarriereCompetenceWhereInput
    /**
     * Limit how many QualiCarriereCompetences to update.
     */
    limit?: number
  }

  /**
   * QualiCarriereCompetence updateManyAndReturn
   */
  export type QualiCarriereCompetenceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * The data used to update QualiCarriereCompetences.
     */
    data: XOR<QualiCarriereCompetenceUpdateManyMutationInput, QualiCarriereCompetenceUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereCompetences to update
     */
    where?: QualiCarriereCompetenceWhereInput
    /**
     * Limit how many QualiCarriereCompetences to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereCompetence upsert
   */
  export type QualiCarriereCompetenceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * The filter to search for the QualiCarriereCompetence to update in case it exists.
     */
    where: QualiCarriereCompetenceWhereUniqueInput
    /**
     * In case the QualiCarriereCompetence found by the `where` argument doesn't exist, create a new QualiCarriereCompetence with this data.
     */
    create: XOR<QualiCarriereCompetenceCreateInput, QualiCarriereCompetenceUncheckedCreateInput>
    /**
     * In case the QualiCarriereCompetence was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QualiCarriereCompetenceUpdateInput, QualiCarriereCompetenceUncheckedUpdateInput>
  }

  /**
   * QualiCarriereCompetence delete
   */
  export type QualiCarriereCompetenceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
    /**
     * Filter which QualiCarriereCompetence to delete.
     */
    where: QualiCarriereCompetenceWhereUniqueInput
  }

  /**
   * QualiCarriereCompetence deleteMany
   */
  export type QualiCarriereCompetenceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereCompetences to delete
     */
    where?: QualiCarriereCompetenceWhereInput
    /**
     * Limit how many QualiCarriereCompetences to delete.
     */
    limit?: number
  }

  /**
   * QualiCarriereCompetence without action
   */
  export type QualiCarriereCompetenceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereCompetence
     */
    select?: QualiCarriereCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereCompetence
     */
    omit?: QualiCarriereCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereCompetenceInclude<ExtArgs> | null
  }


  /**
   * Model QualiCarriereChat
   */

  export type AggregateQualiCarriereChat = {
    _count: QualiCarriereChatCountAggregateOutputType | null
    _avg: QualiCarriereChatAvgAggregateOutputType | null
    _sum: QualiCarriereChatSumAggregateOutputType | null
    _min: QualiCarriereChatMinAggregateOutputType | null
    _max: QualiCarriereChatMaxAggregateOutputType | null
  }

  export type QualiCarriereChatAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type QualiCarriereChatSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type QualiCarriereChatMinAggregateOutputType = {
    id: number | null
    role: string | null
    content: string | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereChatMaxAggregateOutputType = {
    id: number | null
    role: string | null
    content: string | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type QualiCarriereChatCountAggregateOutputType = {
    id: number
    role: number
    content: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type QualiCarriereChatAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type QualiCarriereChatSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type QualiCarriereChatMinAggregateInputType = {
    id?: true
    role?: true
    content?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereChatMaxAggregateInputType = {
    id?: true
    role?: true
    content?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type QualiCarriereChatCountAggregateInputType = {
    id?: true
    role?: true
    content?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type QualiCarriereChatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereChat to aggregate.
     */
    where?: QualiCarriereChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereChats to fetch.
     */
    orderBy?: QualiCarriereChatOrderByWithRelationInput | QualiCarriereChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: QualiCarriereChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereChats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereChats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned QualiCarriereChats
    **/
    _count?: true | QualiCarriereChatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: QualiCarriereChatAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: QualiCarriereChatSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: QualiCarriereChatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: QualiCarriereChatMaxAggregateInputType
  }

  export type GetQualiCarriereChatAggregateType<T extends QualiCarriereChatAggregateArgs> = {
        [P in keyof T & keyof AggregateQualiCarriereChat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateQualiCarriereChat[P]>
      : GetScalarType<T[P], AggregateQualiCarriereChat[P]>
  }




  export type QualiCarriereChatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: QualiCarriereChatWhereInput
    orderBy?: QualiCarriereChatOrderByWithAggregationInput | QualiCarriereChatOrderByWithAggregationInput[]
    by: QualiCarriereChatScalarFieldEnum[] | QualiCarriereChatScalarFieldEnum
    having?: QualiCarriereChatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: QualiCarriereChatCountAggregateInputType | true
    _avg?: QualiCarriereChatAvgAggregateInputType
    _sum?: QualiCarriereChatSumAggregateInputType
    _min?: QualiCarriereChatMinAggregateInputType
    _max?: QualiCarriereChatMaxAggregateInputType
  }

  export type QualiCarriereChatGroupByOutputType = {
    id: number
    role: string
    content: string
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: QualiCarriereChatCountAggregateOutputType | null
    _avg: QualiCarriereChatAvgAggregateOutputType | null
    _sum: QualiCarriereChatSumAggregateOutputType | null
    _min: QualiCarriereChatMinAggregateOutputType | null
    _max: QualiCarriereChatMaxAggregateOutputType | null
  }

  type GetQualiCarriereChatGroupByPayload<T extends QualiCarriereChatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<QualiCarriereChatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof QualiCarriereChatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], QualiCarriereChatGroupByOutputType[P]>
            : GetScalarType<T[P], QualiCarriereChatGroupByOutputType[P]>
        }
      >
    >


  export type QualiCarriereChatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    content?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereChat"]>

  export type QualiCarriereChatSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    content?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereChat"]>

  export type QualiCarriereChatSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    content?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["qualiCarriereChat"]>

  export type QualiCarriereChatSelectScalar = {
    id?: boolean
    role?: boolean
    content?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type QualiCarriereChatOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "role" | "content" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["qualiCarriereChat"]>
  export type QualiCarriereChatInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type QualiCarriereChatIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type QualiCarriereChatIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $QualiCarriereChatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "QualiCarriereChat"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      role: string
      content: string
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["qualiCarriereChat"]>
    composites: {}
  }

  type QualiCarriereChatGetPayload<S extends boolean | null | undefined | QualiCarriereChatDefaultArgs> = $Result.GetResult<Prisma.$QualiCarriereChatPayload, S>

  type QualiCarriereChatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<QualiCarriereChatFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: QualiCarriereChatCountAggregateInputType | true
    }

  export interface QualiCarriereChatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['QualiCarriereChat'], meta: { name: 'QualiCarriereChat' } }
    /**
     * Find zero or one QualiCarriereChat that matches the filter.
     * @param {QualiCarriereChatFindUniqueArgs} args - Arguments to find a QualiCarriereChat
     * @example
     * // Get one QualiCarriereChat
     * const qualiCarriereChat = await prisma.qualiCarriereChat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends QualiCarriereChatFindUniqueArgs>(args: SelectSubset<T, QualiCarriereChatFindUniqueArgs<ExtArgs>>): Prisma__QualiCarriereChatClient<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one QualiCarriereChat that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {QualiCarriereChatFindUniqueOrThrowArgs} args - Arguments to find a QualiCarriereChat
     * @example
     * // Get one QualiCarriereChat
     * const qualiCarriereChat = await prisma.qualiCarriereChat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends QualiCarriereChatFindUniqueOrThrowArgs>(args: SelectSubset<T, QualiCarriereChatFindUniqueOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereChatClient<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereChat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereChatFindFirstArgs} args - Arguments to find a QualiCarriereChat
     * @example
     * // Get one QualiCarriereChat
     * const qualiCarriereChat = await prisma.qualiCarriereChat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends QualiCarriereChatFindFirstArgs>(args?: SelectSubset<T, QualiCarriereChatFindFirstArgs<ExtArgs>>): Prisma__QualiCarriereChatClient<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first QualiCarriereChat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereChatFindFirstOrThrowArgs} args - Arguments to find a QualiCarriereChat
     * @example
     * // Get one QualiCarriereChat
     * const qualiCarriereChat = await prisma.qualiCarriereChat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends QualiCarriereChatFindFirstOrThrowArgs>(args?: SelectSubset<T, QualiCarriereChatFindFirstOrThrowArgs<ExtArgs>>): Prisma__QualiCarriereChatClient<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more QualiCarriereChats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereChatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all QualiCarriereChats
     * const qualiCarriereChats = await prisma.qualiCarriereChat.findMany()
     * 
     * // Get first 10 QualiCarriereChats
     * const qualiCarriereChats = await prisma.qualiCarriereChat.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const qualiCarriereChatWithIdOnly = await prisma.qualiCarriereChat.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends QualiCarriereChatFindManyArgs>(args?: SelectSubset<T, QualiCarriereChatFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a QualiCarriereChat.
     * @param {QualiCarriereChatCreateArgs} args - Arguments to create a QualiCarriereChat.
     * @example
     * // Create one QualiCarriereChat
     * const QualiCarriereChat = await prisma.qualiCarriereChat.create({
     *   data: {
     *     // ... data to create a QualiCarriereChat
     *   }
     * })
     * 
     */
    create<T extends QualiCarriereChatCreateArgs>(args: SelectSubset<T, QualiCarriereChatCreateArgs<ExtArgs>>): Prisma__QualiCarriereChatClient<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many QualiCarriereChats.
     * @param {QualiCarriereChatCreateManyArgs} args - Arguments to create many QualiCarriereChats.
     * @example
     * // Create many QualiCarriereChats
     * const qualiCarriereChat = await prisma.qualiCarriereChat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends QualiCarriereChatCreateManyArgs>(args?: SelectSubset<T, QualiCarriereChatCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many QualiCarriereChats and returns the data saved in the database.
     * @param {QualiCarriereChatCreateManyAndReturnArgs} args - Arguments to create many QualiCarriereChats.
     * @example
     * // Create many QualiCarriereChats
     * const qualiCarriereChat = await prisma.qualiCarriereChat.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many QualiCarriereChats and only return the `id`
     * const qualiCarriereChatWithIdOnly = await prisma.qualiCarriereChat.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends QualiCarriereChatCreateManyAndReturnArgs>(args?: SelectSubset<T, QualiCarriereChatCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a QualiCarriereChat.
     * @param {QualiCarriereChatDeleteArgs} args - Arguments to delete one QualiCarriereChat.
     * @example
     * // Delete one QualiCarriereChat
     * const QualiCarriereChat = await prisma.qualiCarriereChat.delete({
     *   where: {
     *     // ... filter to delete one QualiCarriereChat
     *   }
     * })
     * 
     */
    delete<T extends QualiCarriereChatDeleteArgs>(args: SelectSubset<T, QualiCarriereChatDeleteArgs<ExtArgs>>): Prisma__QualiCarriereChatClient<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one QualiCarriereChat.
     * @param {QualiCarriereChatUpdateArgs} args - Arguments to update one QualiCarriereChat.
     * @example
     * // Update one QualiCarriereChat
     * const qualiCarriereChat = await prisma.qualiCarriereChat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends QualiCarriereChatUpdateArgs>(args: SelectSubset<T, QualiCarriereChatUpdateArgs<ExtArgs>>): Prisma__QualiCarriereChatClient<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more QualiCarriereChats.
     * @param {QualiCarriereChatDeleteManyArgs} args - Arguments to filter QualiCarriereChats to delete.
     * @example
     * // Delete a few QualiCarriereChats
     * const { count } = await prisma.qualiCarriereChat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends QualiCarriereChatDeleteManyArgs>(args?: SelectSubset<T, QualiCarriereChatDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereChats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereChatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many QualiCarriereChats
     * const qualiCarriereChat = await prisma.qualiCarriereChat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends QualiCarriereChatUpdateManyArgs>(args: SelectSubset<T, QualiCarriereChatUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more QualiCarriereChats and returns the data updated in the database.
     * @param {QualiCarriereChatUpdateManyAndReturnArgs} args - Arguments to update many QualiCarriereChats.
     * @example
     * // Update many QualiCarriereChats
     * const qualiCarriereChat = await prisma.qualiCarriereChat.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more QualiCarriereChats and only return the `id`
     * const qualiCarriereChatWithIdOnly = await prisma.qualiCarriereChat.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends QualiCarriereChatUpdateManyAndReturnArgs>(args: SelectSubset<T, QualiCarriereChatUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one QualiCarriereChat.
     * @param {QualiCarriereChatUpsertArgs} args - Arguments to update or create a QualiCarriereChat.
     * @example
     * // Update or create a QualiCarriereChat
     * const qualiCarriereChat = await prisma.qualiCarriereChat.upsert({
     *   create: {
     *     // ... data to create a QualiCarriereChat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the QualiCarriereChat we want to update
     *   }
     * })
     */
    upsert<T extends QualiCarriereChatUpsertArgs>(args: SelectSubset<T, QualiCarriereChatUpsertArgs<ExtArgs>>): Prisma__QualiCarriereChatClient<$Result.GetResult<Prisma.$QualiCarriereChatPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of QualiCarriereChats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereChatCountArgs} args - Arguments to filter QualiCarriereChats to count.
     * @example
     * // Count the number of QualiCarriereChats
     * const count = await prisma.qualiCarriereChat.count({
     *   where: {
     *     // ... the filter for the QualiCarriereChats we want to count
     *   }
     * })
    **/
    count<T extends QualiCarriereChatCountArgs>(
      args?: Subset<T, QualiCarriereChatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], QualiCarriereChatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a QualiCarriereChat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereChatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends QualiCarriereChatAggregateArgs>(args: Subset<T, QualiCarriereChatAggregateArgs>): Prisma.PrismaPromise<GetQualiCarriereChatAggregateType<T>>

    /**
     * Group by QualiCarriereChat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {QualiCarriereChatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends QualiCarriereChatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: QualiCarriereChatGroupByArgs['orderBy'] }
        : { orderBy?: QualiCarriereChatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, QualiCarriereChatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetQualiCarriereChatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the QualiCarriereChat model
   */
  readonly fields: QualiCarriereChatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for QualiCarriereChat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__QualiCarriereChatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the QualiCarriereChat model
   */
  interface QualiCarriereChatFieldRefs {
    readonly id: FieldRef<"QualiCarriereChat", 'Int'>
    readonly role: FieldRef<"QualiCarriereChat", 'String'>
    readonly content: FieldRef<"QualiCarriereChat", 'String'>
    readonly userId: FieldRef<"QualiCarriereChat", 'Int'>
    readonly createdAt: FieldRef<"QualiCarriereChat", 'DateTime'>
    readonly updatedAt: FieldRef<"QualiCarriereChat", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * QualiCarriereChat findUnique
   */
  export type QualiCarriereChatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereChat to fetch.
     */
    where: QualiCarriereChatWhereUniqueInput
  }

  /**
   * QualiCarriereChat findUniqueOrThrow
   */
  export type QualiCarriereChatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereChat to fetch.
     */
    where: QualiCarriereChatWhereUniqueInput
  }

  /**
   * QualiCarriereChat findFirst
   */
  export type QualiCarriereChatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereChat to fetch.
     */
    where?: QualiCarriereChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereChats to fetch.
     */
    orderBy?: QualiCarriereChatOrderByWithRelationInput | QualiCarriereChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereChats.
     */
    cursor?: QualiCarriereChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereChats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereChats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereChats.
     */
    distinct?: QualiCarriereChatScalarFieldEnum | QualiCarriereChatScalarFieldEnum[]
  }

  /**
   * QualiCarriereChat findFirstOrThrow
   */
  export type QualiCarriereChatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereChat to fetch.
     */
    where?: QualiCarriereChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereChats to fetch.
     */
    orderBy?: QualiCarriereChatOrderByWithRelationInput | QualiCarriereChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for QualiCarriereChats.
     */
    cursor?: QualiCarriereChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereChats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereChats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of QualiCarriereChats.
     */
    distinct?: QualiCarriereChatScalarFieldEnum | QualiCarriereChatScalarFieldEnum[]
  }

  /**
   * QualiCarriereChat findMany
   */
  export type QualiCarriereChatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * Filter, which QualiCarriereChats to fetch.
     */
    where?: QualiCarriereChatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of QualiCarriereChats to fetch.
     */
    orderBy?: QualiCarriereChatOrderByWithRelationInput | QualiCarriereChatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing QualiCarriereChats.
     */
    cursor?: QualiCarriereChatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` QualiCarriereChats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` QualiCarriereChats.
     */
    skip?: number
    distinct?: QualiCarriereChatScalarFieldEnum | QualiCarriereChatScalarFieldEnum[]
  }

  /**
   * QualiCarriereChat create
   */
  export type QualiCarriereChatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * The data needed to create a QualiCarriereChat.
     */
    data: XOR<QualiCarriereChatCreateInput, QualiCarriereChatUncheckedCreateInput>
  }

  /**
   * QualiCarriereChat createMany
   */
  export type QualiCarriereChatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many QualiCarriereChats.
     */
    data: QualiCarriereChatCreateManyInput | QualiCarriereChatCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * QualiCarriereChat createManyAndReturn
   */
  export type QualiCarriereChatCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * The data used to create many QualiCarriereChats.
     */
    data: QualiCarriereChatCreateManyInput | QualiCarriereChatCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereChat update
   */
  export type QualiCarriereChatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * The data needed to update a QualiCarriereChat.
     */
    data: XOR<QualiCarriereChatUpdateInput, QualiCarriereChatUncheckedUpdateInput>
    /**
     * Choose, which QualiCarriereChat to update.
     */
    where: QualiCarriereChatWhereUniqueInput
  }

  /**
   * QualiCarriereChat updateMany
   */
  export type QualiCarriereChatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update QualiCarriereChats.
     */
    data: XOR<QualiCarriereChatUpdateManyMutationInput, QualiCarriereChatUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereChats to update
     */
    where?: QualiCarriereChatWhereInput
    /**
     * Limit how many QualiCarriereChats to update.
     */
    limit?: number
  }

  /**
   * QualiCarriereChat updateManyAndReturn
   */
  export type QualiCarriereChatUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * The data used to update QualiCarriereChats.
     */
    data: XOR<QualiCarriereChatUpdateManyMutationInput, QualiCarriereChatUncheckedUpdateManyInput>
    /**
     * Filter which QualiCarriereChats to update
     */
    where?: QualiCarriereChatWhereInput
    /**
     * Limit how many QualiCarriereChats to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * QualiCarriereChat upsert
   */
  export type QualiCarriereChatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * The filter to search for the QualiCarriereChat to update in case it exists.
     */
    where: QualiCarriereChatWhereUniqueInput
    /**
     * In case the QualiCarriereChat found by the `where` argument doesn't exist, create a new QualiCarriereChat with this data.
     */
    create: XOR<QualiCarriereChatCreateInput, QualiCarriereChatUncheckedCreateInput>
    /**
     * In case the QualiCarriereChat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<QualiCarriereChatUpdateInput, QualiCarriereChatUncheckedUpdateInput>
  }

  /**
   * QualiCarriereChat delete
   */
  export type QualiCarriereChatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
    /**
     * Filter which QualiCarriereChat to delete.
     */
    where: QualiCarriereChatWhereUniqueInput
  }

  /**
   * QualiCarriereChat deleteMany
   */
  export type QualiCarriereChatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which QualiCarriereChats to delete
     */
    where?: QualiCarriereChatWhereInput
    /**
     * Limit how many QualiCarriereChats to delete.
     */
    limit?: number
  }

  /**
   * QualiCarriereChat without action
   */
  export type QualiCarriereChatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the QualiCarriereChat
     */
    select?: QualiCarriereChatSelect<ExtArgs> | null
    /**
     * Omit specific fields from the QualiCarriereChat
     */
    omit?: QualiCarriereChatOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: QualiCarriereChatInclude<ExtArgs> | null
  }


  /**
   * Model CvThequeCritere
   */

  export type AggregateCvThequeCritere = {
    _count: CvThequeCritereCountAggregateOutputType | null
    _avg: CvThequeCritereAvgAggregateOutputType | null
    _sum: CvThequeCritereSumAggregateOutputType | null
    _min: CvThequeCritereMinAggregateOutputType | null
    _max: CvThequeCritereMaxAggregateOutputType | null
  }

  export type CvThequeCritereAvgAggregateOutputType = {
    id: number | null
    distance: number | null
    experience: number | null
    evaluation: number | null
    userId: number | null
  }

  export type CvThequeCritereSumAggregateOutputType = {
    id: number | null
    distance: number | null
    experience: number | null
    evaluation: number | null
    userId: number | null
  }

  export type CvThequeCritereMinAggregateOutputType = {
    id: number | null
    position: string | null
    domain: string | null
    description: string | null
    diplome: string | null
    localisation: string | null
    distance: number | null
    experience: number | null
    evaluation: number | null
    saved: boolean | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeCritereMaxAggregateOutputType = {
    id: number | null
    position: string | null
    domain: string | null
    description: string | null
    diplome: string | null
    localisation: string | null
    distance: number | null
    experience: number | null
    evaluation: number | null
    saved: boolean | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeCritereCountAggregateOutputType = {
    id: number
    position: number
    domain: number
    description: number
    diplome: number
    localisation: number
    distance: number
    experience: number
    evaluation: number
    saved: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CvThequeCritereAvgAggregateInputType = {
    id?: true
    distance?: true
    experience?: true
    evaluation?: true
    userId?: true
  }

  export type CvThequeCritereSumAggregateInputType = {
    id?: true
    distance?: true
    experience?: true
    evaluation?: true
    userId?: true
  }

  export type CvThequeCritereMinAggregateInputType = {
    id?: true
    position?: true
    domain?: true
    description?: true
    diplome?: true
    localisation?: true
    distance?: true
    experience?: true
    evaluation?: true
    saved?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeCritereMaxAggregateInputType = {
    id?: true
    position?: true
    domain?: true
    description?: true
    diplome?: true
    localisation?: true
    distance?: true
    experience?: true
    evaluation?: true
    saved?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeCritereCountAggregateInputType = {
    id?: true
    position?: true
    domain?: true
    description?: true
    diplome?: true
    localisation?: true
    distance?: true
    experience?: true
    evaluation?: true
    saved?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CvThequeCritereAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeCritere to aggregate.
     */
    where?: CvThequeCritereWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeCriteres to fetch.
     */
    orderBy?: CvThequeCritereOrderByWithRelationInput | CvThequeCritereOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvThequeCritereWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeCriteres from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeCriteres.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvThequeCriteres
    **/
    _count?: true | CvThequeCritereCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvThequeCritereAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvThequeCritereSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvThequeCritereMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvThequeCritereMaxAggregateInputType
  }

  export type GetCvThequeCritereAggregateType<T extends CvThequeCritereAggregateArgs> = {
        [P in keyof T & keyof AggregateCvThequeCritere]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvThequeCritere[P]>
      : GetScalarType<T[P], AggregateCvThequeCritere[P]>
  }




  export type CvThequeCritereGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeCritereWhereInput
    orderBy?: CvThequeCritereOrderByWithAggregationInput | CvThequeCritereOrderByWithAggregationInput[]
    by: CvThequeCritereScalarFieldEnum[] | CvThequeCritereScalarFieldEnum
    having?: CvThequeCritereScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvThequeCritereCountAggregateInputType | true
    _avg?: CvThequeCritereAvgAggregateInputType
    _sum?: CvThequeCritereSumAggregateInputType
    _min?: CvThequeCritereMinAggregateInputType
    _max?: CvThequeCritereMaxAggregateInputType
  }

  export type CvThequeCritereGroupByOutputType = {
    id: number
    position: string
    domain: string
    description: string
    diplome: string
    localisation: string
    distance: number
    experience: number | null
    evaluation: number
    saved: boolean
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: CvThequeCritereCountAggregateOutputType | null
    _avg: CvThequeCritereAvgAggregateOutputType | null
    _sum: CvThequeCritereSumAggregateOutputType | null
    _min: CvThequeCritereMinAggregateOutputType | null
    _max: CvThequeCritereMaxAggregateOutputType | null
  }

  type GetCvThequeCritereGroupByPayload<T extends CvThequeCritereGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvThequeCritereGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvThequeCritereGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvThequeCritereGroupByOutputType[P]>
            : GetScalarType<T[P], CvThequeCritereGroupByOutputType[P]>
        }
      >
    >


  export type CvThequeCritereSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    position?: boolean
    domain?: boolean
    description?: boolean
    diplome?: boolean
    localisation?: boolean
    distance?: boolean
    experience?: boolean
    evaluation?: boolean
    saved?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCompetences?: boolean | CvThequeCritere$cvThequeCompetencesArgs<ExtArgs>
    cvThequeViews?: boolean | CvThequeCritere$cvThequeViewsArgs<ExtArgs>
    cvThequeUsers?: boolean | CvThequeCritere$cvThequeUsersArgs<ExtArgs>
    cvMinutes?: boolean | CvThequeCritere$cvMinutesArgs<ExtArgs>
    openaiResponses?: boolean | CvThequeCritere$openaiResponsesArgs<ExtArgs>
    _count?: boolean | CvThequeCritereCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeCritere"]>

  export type CvThequeCritereSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    position?: boolean
    domain?: boolean
    description?: boolean
    diplome?: boolean
    localisation?: boolean
    distance?: boolean
    experience?: boolean
    evaluation?: boolean
    saved?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeCritere"]>

  export type CvThequeCritereSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    position?: boolean
    domain?: boolean
    description?: boolean
    diplome?: boolean
    localisation?: boolean
    distance?: boolean
    experience?: boolean
    evaluation?: boolean
    saved?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeCritere"]>

  export type CvThequeCritereSelectScalar = {
    id?: boolean
    position?: boolean
    domain?: boolean
    description?: boolean
    diplome?: boolean
    localisation?: boolean
    distance?: boolean
    experience?: boolean
    evaluation?: boolean
    saved?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CvThequeCritereOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "position" | "domain" | "description" | "diplome" | "localisation" | "distance" | "experience" | "evaluation" | "saved" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["cvThequeCritere"]>
  export type CvThequeCritereInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCompetences?: boolean | CvThequeCritere$cvThequeCompetencesArgs<ExtArgs>
    cvThequeViews?: boolean | CvThequeCritere$cvThequeViewsArgs<ExtArgs>
    cvThequeUsers?: boolean | CvThequeCritere$cvThequeUsersArgs<ExtArgs>
    cvMinutes?: boolean | CvThequeCritere$cvMinutesArgs<ExtArgs>
    openaiResponses?: boolean | CvThequeCritere$openaiResponsesArgs<ExtArgs>
    _count?: boolean | CvThequeCritereCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CvThequeCritereIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CvThequeCritereIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CvThequeCriterePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvThequeCritere"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      cvThequeCompetences: Prisma.$CvThequeCompetencePayload<ExtArgs>[]
      cvThequeViews: Prisma.$CvThequeViewPayload<ExtArgs>[]
      cvThequeUsers: Prisma.$CvThequeUserPayload<ExtArgs>[]
      cvMinutes: Prisma.$CvMinutePayload<ExtArgs>[]
      openaiResponses: Prisma.$OpenaiResponsePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      position: string
      domain: string
      description: string
      diplome: string
      localisation: string
      distance: number
      experience: number | null
      evaluation: number
      saved: boolean
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cvThequeCritere"]>
    composites: {}
  }

  type CvThequeCritereGetPayload<S extends boolean | null | undefined | CvThequeCritereDefaultArgs> = $Result.GetResult<Prisma.$CvThequeCriterePayload, S>

  type CvThequeCritereCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvThequeCritereFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvThequeCritereCountAggregateInputType | true
    }

  export interface CvThequeCritereDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvThequeCritere'], meta: { name: 'CvThequeCritere' } }
    /**
     * Find zero or one CvThequeCritere that matches the filter.
     * @param {CvThequeCritereFindUniqueArgs} args - Arguments to find a CvThequeCritere
     * @example
     * // Get one CvThequeCritere
     * const cvThequeCritere = await prisma.cvThequeCritere.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvThequeCritereFindUniqueArgs>(args: SelectSubset<T, CvThequeCritereFindUniqueArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvThequeCritere that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvThequeCritereFindUniqueOrThrowArgs} args - Arguments to find a CvThequeCritere
     * @example
     * // Get one CvThequeCritere
     * const cvThequeCritere = await prisma.cvThequeCritere.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvThequeCritereFindUniqueOrThrowArgs>(args: SelectSubset<T, CvThequeCritereFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeCritere that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCritereFindFirstArgs} args - Arguments to find a CvThequeCritere
     * @example
     * // Get one CvThequeCritere
     * const cvThequeCritere = await prisma.cvThequeCritere.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvThequeCritereFindFirstArgs>(args?: SelectSubset<T, CvThequeCritereFindFirstArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeCritere that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCritereFindFirstOrThrowArgs} args - Arguments to find a CvThequeCritere
     * @example
     * // Get one CvThequeCritere
     * const cvThequeCritere = await prisma.cvThequeCritere.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvThequeCritereFindFirstOrThrowArgs>(args?: SelectSubset<T, CvThequeCritereFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvThequeCriteres that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCritereFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvThequeCriteres
     * const cvThequeCriteres = await prisma.cvThequeCritere.findMany()
     * 
     * // Get first 10 CvThequeCriteres
     * const cvThequeCriteres = await prisma.cvThequeCritere.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvThequeCritereWithIdOnly = await prisma.cvThequeCritere.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvThequeCritereFindManyArgs>(args?: SelectSubset<T, CvThequeCritereFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvThequeCritere.
     * @param {CvThequeCritereCreateArgs} args - Arguments to create a CvThequeCritere.
     * @example
     * // Create one CvThequeCritere
     * const CvThequeCritere = await prisma.cvThequeCritere.create({
     *   data: {
     *     // ... data to create a CvThequeCritere
     *   }
     * })
     * 
     */
    create<T extends CvThequeCritereCreateArgs>(args: SelectSubset<T, CvThequeCritereCreateArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvThequeCriteres.
     * @param {CvThequeCritereCreateManyArgs} args - Arguments to create many CvThequeCriteres.
     * @example
     * // Create many CvThequeCriteres
     * const cvThequeCritere = await prisma.cvThequeCritere.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvThequeCritereCreateManyArgs>(args?: SelectSubset<T, CvThequeCritereCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvThequeCriteres and returns the data saved in the database.
     * @param {CvThequeCritereCreateManyAndReturnArgs} args - Arguments to create many CvThequeCriteres.
     * @example
     * // Create many CvThequeCriteres
     * const cvThequeCritere = await prisma.cvThequeCritere.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvThequeCriteres and only return the `id`
     * const cvThequeCritereWithIdOnly = await prisma.cvThequeCritere.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvThequeCritereCreateManyAndReturnArgs>(args?: SelectSubset<T, CvThequeCritereCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvThequeCritere.
     * @param {CvThequeCritereDeleteArgs} args - Arguments to delete one CvThequeCritere.
     * @example
     * // Delete one CvThequeCritere
     * const CvThequeCritere = await prisma.cvThequeCritere.delete({
     *   where: {
     *     // ... filter to delete one CvThequeCritere
     *   }
     * })
     * 
     */
    delete<T extends CvThequeCritereDeleteArgs>(args: SelectSubset<T, CvThequeCritereDeleteArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvThequeCritere.
     * @param {CvThequeCritereUpdateArgs} args - Arguments to update one CvThequeCritere.
     * @example
     * // Update one CvThequeCritere
     * const cvThequeCritere = await prisma.cvThequeCritere.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvThequeCritereUpdateArgs>(args: SelectSubset<T, CvThequeCritereUpdateArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvThequeCriteres.
     * @param {CvThequeCritereDeleteManyArgs} args - Arguments to filter CvThequeCriteres to delete.
     * @example
     * // Delete a few CvThequeCriteres
     * const { count } = await prisma.cvThequeCritere.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvThequeCritereDeleteManyArgs>(args?: SelectSubset<T, CvThequeCritereDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeCriteres.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCritereUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvThequeCriteres
     * const cvThequeCritere = await prisma.cvThequeCritere.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvThequeCritereUpdateManyArgs>(args: SelectSubset<T, CvThequeCritereUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeCriteres and returns the data updated in the database.
     * @param {CvThequeCritereUpdateManyAndReturnArgs} args - Arguments to update many CvThequeCriteres.
     * @example
     * // Update many CvThequeCriteres
     * const cvThequeCritere = await prisma.cvThequeCritere.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvThequeCriteres and only return the `id`
     * const cvThequeCritereWithIdOnly = await prisma.cvThequeCritere.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvThequeCritereUpdateManyAndReturnArgs>(args: SelectSubset<T, CvThequeCritereUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvThequeCritere.
     * @param {CvThequeCritereUpsertArgs} args - Arguments to update or create a CvThequeCritere.
     * @example
     * // Update or create a CvThequeCritere
     * const cvThequeCritere = await prisma.cvThequeCritere.upsert({
     *   create: {
     *     // ... data to create a CvThequeCritere
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvThequeCritere we want to update
     *   }
     * })
     */
    upsert<T extends CvThequeCritereUpsertArgs>(args: SelectSubset<T, CvThequeCritereUpsertArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvThequeCriteres.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCritereCountArgs} args - Arguments to filter CvThequeCriteres to count.
     * @example
     * // Count the number of CvThequeCriteres
     * const count = await prisma.cvThequeCritere.count({
     *   where: {
     *     // ... the filter for the CvThequeCriteres we want to count
     *   }
     * })
    **/
    count<T extends CvThequeCritereCountArgs>(
      args?: Subset<T, CvThequeCritereCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvThequeCritereCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvThequeCritere.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCritereAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvThequeCritereAggregateArgs>(args: Subset<T, CvThequeCritereAggregateArgs>): Prisma.PrismaPromise<GetCvThequeCritereAggregateType<T>>

    /**
     * Group by CvThequeCritere.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCritereGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvThequeCritereGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvThequeCritereGroupByArgs['orderBy'] }
        : { orderBy?: CvThequeCritereGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvThequeCritereGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvThequeCritereGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvThequeCritere model
   */
  readonly fields: CvThequeCritereFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvThequeCritere.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvThequeCritereClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvThequeCompetences<T extends CvThequeCritere$cvThequeCompetencesArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeCritere$cvThequeCompetencesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvThequeViews<T extends CvThequeCritere$cvThequeViewsArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeCritere$cvThequeViewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvThequeUsers<T extends CvThequeCritere$cvThequeUsersArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeCritere$cvThequeUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cvMinutes<T extends CvThequeCritere$cvMinutesArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeCritere$cvMinutesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    openaiResponses<T extends CvThequeCritere$openaiResponsesArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeCritere$openaiResponsesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpenaiResponsePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvThequeCritere model
   */
  interface CvThequeCritereFieldRefs {
    readonly id: FieldRef<"CvThequeCritere", 'Int'>
    readonly position: FieldRef<"CvThequeCritere", 'String'>
    readonly domain: FieldRef<"CvThequeCritere", 'String'>
    readonly description: FieldRef<"CvThequeCritere", 'String'>
    readonly diplome: FieldRef<"CvThequeCritere", 'String'>
    readonly localisation: FieldRef<"CvThequeCritere", 'String'>
    readonly distance: FieldRef<"CvThequeCritere", 'Int'>
    readonly experience: FieldRef<"CvThequeCritere", 'Int'>
    readonly evaluation: FieldRef<"CvThequeCritere", 'Int'>
    readonly saved: FieldRef<"CvThequeCritere", 'Boolean'>
    readonly userId: FieldRef<"CvThequeCritere", 'Int'>
    readonly createdAt: FieldRef<"CvThequeCritere", 'DateTime'>
    readonly updatedAt: FieldRef<"CvThequeCritere", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CvThequeCritere findUnique
   */
  export type CvThequeCritereFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCritere to fetch.
     */
    where: CvThequeCritereWhereUniqueInput
  }

  /**
   * CvThequeCritere findUniqueOrThrow
   */
  export type CvThequeCritereFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCritere to fetch.
     */
    where: CvThequeCritereWhereUniqueInput
  }

  /**
   * CvThequeCritere findFirst
   */
  export type CvThequeCritereFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCritere to fetch.
     */
    where?: CvThequeCritereWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeCriteres to fetch.
     */
    orderBy?: CvThequeCritereOrderByWithRelationInput | CvThequeCritereOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeCriteres.
     */
    cursor?: CvThequeCritereWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeCriteres from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeCriteres.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeCriteres.
     */
    distinct?: CvThequeCritereScalarFieldEnum | CvThequeCritereScalarFieldEnum[]
  }

  /**
   * CvThequeCritere findFirstOrThrow
   */
  export type CvThequeCritereFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCritere to fetch.
     */
    where?: CvThequeCritereWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeCriteres to fetch.
     */
    orderBy?: CvThequeCritereOrderByWithRelationInput | CvThequeCritereOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeCriteres.
     */
    cursor?: CvThequeCritereWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeCriteres from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeCriteres.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeCriteres.
     */
    distinct?: CvThequeCritereScalarFieldEnum | CvThequeCritereScalarFieldEnum[]
  }

  /**
   * CvThequeCritere findMany
   */
  export type CvThequeCritereFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCriteres to fetch.
     */
    where?: CvThequeCritereWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeCriteres to fetch.
     */
    orderBy?: CvThequeCritereOrderByWithRelationInput | CvThequeCritereOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvThequeCriteres.
     */
    cursor?: CvThequeCritereWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeCriteres from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeCriteres.
     */
    skip?: number
    distinct?: CvThequeCritereScalarFieldEnum | CvThequeCritereScalarFieldEnum[]
  }

  /**
   * CvThequeCritere create
   */
  export type CvThequeCritereCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * The data needed to create a CvThequeCritere.
     */
    data: XOR<CvThequeCritereCreateInput, CvThequeCritereUncheckedCreateInput>
  }

  /**
   * CvThequeCritere createMany
   */
  export type CvThequeCritereCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvThequeCriteres.
     */
    data: CvThequeCritereCreateManyInput | CvThequeCritereCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvThequeCritere createManyAndReturn
   */
  export type CvThequeCritereCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * The data used to create many CvThequeCriteres.
     */
    data: CvThequeCritereCreateManyInput | CvThequeCritereCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeCritere update
   */
  export type CvThequeCritereUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * The data needed to update a CvThequeCritere.
     */
    data: XOR<CvThequeCritereUpdateInput, CvThequeCritereUncheckedUpdateInput>
    /**
     * Choose, which CvThequeCritere to update.
     */
    where: CvThequeCritereWhereUniqueInput
  }

  /**
   * CvThequeCritere updateMany
   */
  export type CvThequeCritereUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvThequeCriteres.
     */
    data: XOR<CvThequeCritereUpdateManyMutationInput, CvThequeCritereUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeCriteres to update
     */
    where?: CvThequeCritereWhereInput
    /**
     * Limit how many CvThequeCriteres to update.
     */
    limit?: number
  }

  /**
   * CvThequeCritere updateManyAndReturn
   */
  export type CvThequeCritereUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * The data used to update CvThequeCriteres.
     */
    data: XOR<CvThequeCritereUpdateManyMutationInput, CvThequeCritereUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeCriteres to update
     */
    where?: CvThequeCritereWhereInput
    /**
     * Limit how many CvThequeCriteres to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeCritere upsert
   */
  export type CvThequeCritereUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * The filter to search for the CvThequeCritere to update in case it exists.
     */
    where: CvThequeCritereWhereUniqueInput
    /**
     * In case the CvThequeCritere found by the `where` argument doesn't exist, create a new CvThequeCritere with this data.
     */
    create: XOR<CvThequeCritereCreateInput, CvThequeCritereUncheckedCreateInput>
    /**
     * In case the CvThequeCritere was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvThequeCritereUpdateInput, CvThequeCritereUncheckedUpdateInput>
  }

  /**
   * CvThequeCritere delete
   */
  export type CvThequeCritereDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
    /**
     * Filter which CvThequeCritere to delete.
     */
    where: CvThequeCritereWhereUniqueInput
  }

  /**
   * CvThequeCritere deleteMany
   */
  export type CvThequeCritereDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeCriteres to delete
     */
    where?: CvThequeCritereWhereInput
    /**
     * Limit how many CvThequeCriteres to delete.
     */
    limit?: number
  }

  /**
   * CvThequeCritere.cvThequeCompetences
   */
  export type CvThequeCritere$cvThequeCompetencesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    where?: CvThequeCompetenceWhereInput
    orderBy?: CvThequeCompetenceOrderByWithRelationInput | CvThequeCompetenceOrderByWithRelationInput[]
    cursor?: CvThequeCompetenceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeCompetenceScalarFieldEnum | CvThequeCompetenceScalarFieldEnum[]
  }

  /**
   * CvThequeCritere.cvThequeViews
   */
  export type CvThequeCritere$cvThequeViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    where?: CvThequeViewWhereInput
    orderBy?: CvThequeViewOrderByWithRelationInput | CvThequeViewOrderByWithRelationInput[]
    cursor?: CvThequeViewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeViewScalarFieldEnum | CvThequeViewScalarFieldEnum[]
  }

  /**
   * CvThequeCritere.cvThequeUsers
   */
  export type CvThequeCritere$cvThequeUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    where?: CvThequeUserWhereInput
    orderBy?: CvThequeUserOrderByWithRelationInput | CvThequeUserOrderByWithRelationInput[]
    cursor?: CvThequeUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeUserScalarFieldEnum | CvThequeUserScalarFieldEnum[]
  }

  /**
   * CvThequeCritere.cvMinutes
   */
  export type CvThequeCritere$cvMinutesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvMinute
     */
    select?: CvMinuteSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvMinute
     */
    omit?: CvMinuteOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvMinuteInclude<ExtArgs> | null
    where?: CvMinuteWhereInput
    orderBy?: CvMinuteOrderByWithRelationInput | CvMinuteOrderByWithRelationInput[]
    cursor?: CvMinuteWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvMinuteScalarFieldEnum | CvMinuteScalarFieldEnum[]
  }

  /**
   * CvThequeCritere.openaiResponses
   */
  export type CvThequeCritere$openaiResponsesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpenaiResponse
     */
    select?: OpenaiResponseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpenaiResponse
     */
    omit?: OpenaiResponseOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpenaiResponseInclude<ExtArgs> | null
    where?: OpenaiResponseWhereInput
    orderBy?: OpenaiResponseOrderByWithRelationInput | OpenaiResponseOrderByWithRelationInput[]
    cursor?: OpenaiResponseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OpenaiResponseScalarFieldEnum | OpenaiResponseScalarFieldEnum[]
  }

  /**
   * CvThequeCritere without action
   */
  export type CvThequeCritereDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCritere
     */
    select?: CvThequeCritereSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCritere
     */
    omit?: CvThequeCritereOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCritereInclude<ExtArgs> | null
  }


  /**
   * Model CvThequeCompetence
   */

  export type AggregateCvThequeCompetence = {
    _count: CvThequeCompetenceCountAggregateOutputType | null
    _avg: CvThequeCompetenceAvgAggregateOutputType | null
    _sum: CvThequeCompetenceSumAggregateOutputType | null
    _min: CvThequeCompetenceMinAggregateOutputType | null
    _max: CvThequeCompetenceMaxAggregateOutputType | null
  }

  export type CvThequeCompetenceAvgAggregateOutputType = {
    id: number | null
    cvThequeCritereId: number | null
  }

  export type CvThequeCompetenceSumAggregateOutputType = {
    id: number | null
    cvThequeCritereId: number | null
  }

  export type CvThequeCompetenceMinAggregateOutputType = {
    id: number | null
    content: string | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeCompetenceMaxAggregateOutputType = {
    id: number | null
    content: string | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeCompetenceCountAggregateOutputType = {
    id: number
    content: number
    cvThequeCritereId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CvThequeCompetenceAvgAggregateInputType = {
    id?: true
    cvThequeCritereId?: true
  }

  export type CvThequeCompetenceSumAggregateInputType = {
    id?: true
    cvThequeCritereId?: true
  }

  export type CvThequeCompetenceMinAggregateInputType = {
    id?: true
    content?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeCompetenceMaxAggregateInputType = {
    id?: true
    content?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeCompetenceCountAggregateInputType = {
    id?: true
    content?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CvThequeCompetenceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeCompetence to aggregate.
     */
    where?: CvThequeCompetenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeCompetences to fetch.
     */
    orderBy?: CvThequeCompetenceOrderByWithRelationInput | CvThequeCompetenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvThequeCompetenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeCompetences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeCompetences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvThequeCompetences
    **/
    _count?: true | CvThequeCompetenceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvThequeCompetenceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvThequeCompetenceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvThequeCompetenceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvThequeCompetenceMaxAggregateInputType
  }

  export type GetCvThequeCompetenceAggregateType<T extends CvThequeCompetenceAggregateArgs> = {
        [P in keyof T & keyof AggregateCvThequeCompetence]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvThequeCompetence[P]>
      : GetScalarType<T[P], AggregateCvThequeCompetence[P]>
  }




  export type CvThequeCompetenceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeCompetenceWhereInput
    orderBy?: CvThequeCompetenceOrderByWithAggregationInput | CvThequeCompetenceOrderByWithAggregationInput[]
    by: CvThequeCompetenceScalarFieldEnum[] | CvThequeCompetenceScalarFieldEnum
    having?: CvThequeCompetenceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvThequeCompetenceCountAggregateInputType | true
    _avg?: CvThequeCompetenceAvgAggregateInputType
    _sum?: CvThequeCompetenceSumAggregateInputType
    _min?: CvThequeCompetenceMinAggregateInputType
    _max?: CvThequeCompetenceMaxAggregateInputType
  }

  export type CvThequeCompetenceGroupByOutputType = {
    id: number
    content: string
    cvThequeCritereId: number
    createdAt: Date
    updatedAt: Date
    _count: CvThequeCompetenceCountAggregateOutputType | null
    _avg: CvThequeCompetenceAvgAggregateOutputType | null
    _sum: CvThequeCompetenceSumAggregateOutputType | null
    _min: CvThequeCompetenceMinAggregateOutputType | null
    _max: CvThequeCompetenceMaxAggregateOutputType | null
  }

  type GetCvThequeCompetenceGroupByPayload<T extends CvThequeCompetenceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvThequeCompetenceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvThequeCompetenceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvThequeCompetenceGroupByOutputType[P]>
            : GetScalarType<T[P], CvThequeCompetenceGroupByOutputType[P]>
        }
      >
    >


  export type CvThequeCompetenceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeCompetence"]>

  export type CvThequeCompetenceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeCompetence"]>

  export type CvThequeCompetenceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeCompetence"]>

  export type CvThequeCompetenceSelectScalar = {
    id?: boolean
    content?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CvThequeCompetenceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "cvThequeCritereId" | "createdAt" | "updatedAt", ExtArgs["result"]["cvThequeCompetence"]>
  export type CvThequeCompetenceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }
  export type CvThequeCompetenceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }
  export type CvThequeCompetenceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }

  export type $CvThequeCompetencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvThequeCompetence"
    objects: {
      cvThequeCritere: Prisma.$CvThequeCriterePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      cvThequeCritereId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cvThequeCompetence"]>
    composites: {}
  }

  type CvThequeCompetenceGetPayload<S extends boolean | null | undefined | CvThequeCompetenceDefaultArgs> = $Result.GetResult<Prisma.$CvThequeCompetencePayload, S>

  type CvThequeCompetenceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvThequeCompetenceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvThequeCompetenceCountAggregateInputType | true
    }

  export interface CvThequeCompetenceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvThequeCompetence'], meta: { name: 'CvThequeCompetence' } }
    /**
     * Find zero or one CvThequeCompetence that matches the filter.
     * @param {CvThequeCompetenceFindUniqueArgs} args - Arguments to find a CvThequeCompetence
     * @example
     * // Get one CvThequeCompetence
     * const cvThequeCompetence = await prisma.cvThequeCompetence.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvThequeCompetenceFindUniqueArgs>(args: SelectSubset<T, CvThequeCompetenceFindUniqueArgs<ExtArgs>>): Prisma__CvThequeCompetenceClient<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvThequeCompetence that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvThequeCompetenceFindUniqueOrThrowArgs} args - Arguments to find a CvThequeCompetence
     * @example
     * // Get one CvThequeCompetence
     * const cvThequeCompetence = await prisma.cvThequeCompetence.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvThequeCompetenceFindUniqueOrThrowArgs>(args: SelectSubset<T, CvThequeCompetenceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvThequeCompetenceClient<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeCompetence that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCompetenceFindFirstArgs} args - Arguments to find a CvThequeCompetence
     * @example
     * // Get one CvThequeCompetence
     * const cvThequeCompetence = await prisma.cvThequeCompetence.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvThequeCompetenceFindFirstArgs>(args?: SelectSubset<T, CvThequeCompetenceFindFirstArgs<ExtArgs>>): Prisma__CvThequeCompetenceClient<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeCompetence that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCompetenceFindFirstOrThrowArgs} args - Arguments to find a CvThequeCompetence
     * @example
     * // Get one CvThequeCompetence
     * const cvThequeCompetence = await prisma.cvThequeCompetence.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvThequeCompetenceFindFirstOrThrowArgs>(args?: SelectSubset<T, CvThequeCompetenceFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvThequeCompetenceClient<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvThequeCompetences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCompetenceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvThequeCompetences
     * const cvThequeCompetences = await prisma.cvThequeCompetence.findMany()
     * 
     * // Get first 10 CvThequeCompetences
     * const cvThequeCompetences = await prisma.cvThequeCompetence.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvThequeCompetenceWithIdOnly = await prisma.cvThequeCompetence.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvThequeCompetenceFindManyArgs>(args?: SelectSubset<T, CvThequeCompetenceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvThequeCompetence.
     * @param {CvThequeCompetenceCreateArgs} args - Arguments to create a CvThequeCompetence.
     * @example
     * // Create one CvThequeCompetence
     * const CvThequeCompetence = await prisma.cvThequeCompetence.create({
     *   data: {
     *     // ... data to create a CvThequeCompetence
     *   }
     * })
     * 
     */
    create<T extends CvThequeCompetenceCreateArgs>(args: SelectSubset<T, CvThequeCompetenceCreateArgs<ExtArgs>>): Prisma__CvThequeCompetenceClient<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvThequeCompetences.
     * @param {CvThequeCompetenceCreateManyArgs} args - Arguments to create many CvThequeCompetences.
     * @example
     * // Create many CvThequeCompetences
     * const cvThequeCompetence = await prisma.cvThequeCompetence.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvThequeCompetenceCreateManyArgs>(args?: SelectSubset<T, CvThequeCompetenceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvThequeCompetences and returns the data saved in the database.
     * @param {CvThequeCompetenceCreateManyAndReturnArgs} args - Arguments to create many CvThequeCompetences.
     * @example
     * // Create many CvThequeCompetences
     * const cvThequeCompetence = await prisma.cvThequeCompetence.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvThequeCompetences and only return the `id`
     * const cvThequeCompetenceWithIdOnly = await prisma.cvThequeCompetence.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvThequeCompetenceCreateManyAndReturnArgs>(args?: SelectSubset<T, CvThequeCompetenceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvThequeCompetence.
     * @param {CvThequeCompetenceDeleteArgs} args - Arguments to delete one CvThequeCompetence.
     * @example
     * // Delete one CvThequeCompetence
     * const CvThequeCompetence = await prisma.cvThequeCompetence.delete({
     *   where: {
     *     // ... filter to delete one CvThequeCompetence
     *   }
     * })
     * 
     */
    delete<T extends CvThequeCompetenceDeleteArgs>(args: SelectSubset<T, CvThequeCompetenceDeleteArgs<ExtArgs>>): Prisma__CvThequeCompetenceClient<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvThequeCompetence.
     * @param {CvThequeCompetenceUpdateArgs} args - Arguments to update one CvThequeCompetence.
     * @example
     * // Update one CvThequeCompetence
     * const cvThequeCompetence = await prisma.cvThequeCompetence.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvThequeCompetenceUpdateArgs>(args: SelectSubset<T, CvThequeCompetenceUpdateArgs<ExtArgs>>): Prisma__CvThequeCompetenceClient<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvThequeCompetences.
     * @param {CvThequeCompetenceDeleteManyArgs} args - Arguments to filter CvThequeCompetences to delete.
     * @example
     * // Delete a few CvThequeCompetences
     * const { count } = await prisma.cvThequeCompetence.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvThequeCompetenceDeleteManyArgs>(args?: SelectSubset<T, CvThequeCompetenceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeCompetences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCompetenceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvThequeCompetences
     * const cvThequeCompetence = await prisma.cvThequeCompetence.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvThequeCompetenceUpdateManyArgs>(args: SelectSubset<T, CvThequeCompetenceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeCompetences and returns the data updated in the database.
     * @param {CvThequeCompetenceUpdateManyAndReturnArgs} args - Arguments to update many CvThequeCompetences.
     * @example
     * // Update many CvThequeCompetences
     * const cvThequeCompetence = await prisma.cvThequeCompetence.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvThequeCompetences and only return the `id`
     * const cvThequeCompetenceWithIdOnly = await prisma.cvThequeCompetence.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvThequeCompetenceUpdateManyAndReturnArgs>(args: SelectSubset<T, CvThequeCompetenceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvThequeCompetence.
     * @param {CvThequeCompetenceUpsertArgs} args - Arguments to update or create a CvThequeCompetence.
     * @example
     * // Update or create a CvThequeCompetence
     * const cvThequeCompetence = await prisma.cvThequeCompetence.upsert({
     *   create: {
     *     // ... data to create a CvThequeCompetence
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvThequeCompetence we want to update
     *   }
     * })
     */
    upsert<T extends CvThequeCompetenceUpsertArgs>(args: SelectSubset<T, CvThequeCompetenceUpsertArgs<ExtArgs>>): Prisma__CvThequeCompetenceClient<$Result.GetResult<Prisma.$CvThequeCompetencePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvThequeCompetences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCompetenceCountArgs} args - Arguments to filter CvThequeCompetences to count.
     * @example
     * // Count the number of CvThequeCompetences
     * const count = await prisma.cvThequeCompetence.count({
     *   where: {
     *     // ... the filter for the CvThequeCompetences we want to count
     *   }
     * })
    **/
    count<T extends CvThequeCompetenceCountArgs>(
      args?: Subset<T, CvThequeCompetenceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvThequeCompetenceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvThequeCompetence.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCompetenceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvThequeCompetenceAggregateArgs>(args: Subset<T, CvThequeCompetenceAggregateArgs>): Prisma.PrismaPromise<GetCvThequeCompetenceAggregateType<T>>

    /**
     * Group by CvThequeCompetence.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeCompetenceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvThequeCompetenceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvThequeCompetenceGroupByArgs['orderBy'] }
        : { orderBy?: CvThequeCompetenceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvThequeCompetenceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvThequeCompetenceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvThequeCompetence model
   */
  readonly fields: CvThequeCompetenceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvThequeCompetence.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvThequeCompetenceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cvThequeCritere<T extends CvThequeCritereDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeCritereDefaultArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvThequeCompetence model
   */
  interface CvThequeCompetenceFieldRefs {
    readonly id: FieldRef<"CvThequeCompetence", 'Int'>
    readonly content: FieldRef<"CvThequeCompetence", 'String'>
    readonly cvThequeCritereId: FieldRef<"CvThequeCompetence", 'Int'>
    readonly createdAt: FieldRef<"CvThequeCompetence", 'DateTime'>
    readonly updatedAt: FieldRef<"CvThequeCompetence", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CvThequeCompetence findUnique
   */
  export type CvThequeCompetenceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCompetence to fetch.
     */
    where: CvThequeCompetenceWhereUniqueInput
  }

  /**
   * CvThequeCompetence findUniqueOrThrow
   */
  export type CvThequeCompetenceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCompetence to fetch.
     */
    where: CvThequeCompetenceWhereUniqueInput
  }

  /**
   * CvThequeCompetence findFirst
   */
  export type CvThequeCompetenceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCompetence to fetch.
     */
    where?: CvThequeCompetenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeCompetences to fetch.
     */
    orderBy?: CvThequeCompetenceOrderByWithRelationInput | CvThequeCompetenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeCompetences.
     */
    cursor?: CvThequeCompetenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeCompetences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeCompetences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeCompetences.
     */
    distinct?: CvThequeCompetenceScalarFieldEnum | CvThequeCompetenceScalarFieldEnum[]
  }

  /**
   * CvThequeCompetence findFirstOrThrow
   */
  export type CvThequeCompetenceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCompetence to fetch.
     */
    where?: CvThequeCompetenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeCompetences to fetch.
     */
    orderBy?: CvThequeCompetenceOrderByWithRelationInput | CvThequeCompetenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeCompetences.
     */
    cursor?: CvThequeCompetenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeCompetences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeCompetences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeCompetences.
     */
    distinct?: CvThequeCompetenceScalarFieldEnum | CvThequeCompetenceScalarFieldEnum[]
  }

  /**
   * CvThequeCompetence findMany
   */
  export type CvThequeCompetenceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeCompetences to fetch.
     */
    where?: CvThequeCompetenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeCompetences to fetch.
     */
    orderBy?: CvThequeCompetenceOrderByWithRelationInput | CvThequeCompetenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvThequeCompetences.
     */
    cursor?: CvThequeCompetenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeCompetences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeCompetences.
     */
    skip?: number
    distinct?: CvThequeCompetenceScalarFieldEnum | CvThequeCompetenceScalarFieldEnum[]
  }

  /**
   * CvThequeCompetence create
   */
  export type CvThequeCompetenceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * The data needed to create a CvThequeCompetence.
     */
    data: XOR<CvThequeCompetenceCreateInput, CvThequeCompetenceUncheckedCreateInput>
  }

  /**
   * CvThequeCompetence createMany
   */
  export type CvThequeCompetenceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvThequeCompetences.
     */
    data: CvThequeCompetenceCreateManyInput | CvThequeCompetenceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvThequeCompetence createManyAndReturn
   */
  export type CvThequeCompetenceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * The data used to create many CvThequeCompetences.
     */
    data: CvThequeCompetenceCreateManyInput | CvThequeCompetenceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeCompetence update
   */
  export type CvThequeCompetenceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * The data needed to update a CvThequeCompetence.
     */
    data: XOR<CvThequeCompetenceUpdateInput, CvThequeCompetenceUncheckedUpdateInput>
    /**
     * Choose, which CvThequeCompetence to update.
     */
    where: CvThequeCompetenceWhereUniqueInput
  }

  /**
   * CvThequeCompetence updateMany
   */
  export type CvThequeCompetenceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvThequeCompetences.
     */
    data: XOR<CvThequeCompetenceUpdateManyMutationInput, CvThequeCompetenceUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeCompetences to update
     */
    where?: CvThequeCompetenceWhereInput
    /**
     * Limit how many CvThequeCompetences to update.
     */
    limit?: number
  }

  /**
   * CvThequeCompetence updateManyAndReturn
   */
  export type CvThequeCompetenceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * The data used to update CvThequeCompetences.
     */
    data: XOR<CvThequeCompetenceUpdateManyMutationInput, CvThequeCompetenceUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeCompetences to update
     */
    where?: CvThequeCompetenceWhereInput
    /**
     * Limit how many CvThequeCompetences to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeCompetence upsert
   */
  export type CvThequeCompetenceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * The filter to search for the CvThequeCompetence to update in case it exists.
     */
    where: CvThequeCompetenceWhereUniqueInput
    /**
     * In case the CvThequeCompetence found by the `where` argument doesn't exist, create a new CvThequeCompetence with this data.
     */
    create: XOR<CvThequeCompetenceCreateInput, CvThequeCompetenceUncheckedCreateInput>
    /**
     * In case the CvThequeCompetence was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvThequeCompetenceUpdateInput, CvThequeCompetenceUncheckedUpdateInput>
  }

  /**
   * CvThequeCompetence delete
   */
  export type CvThequeCompetenceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
    /**
     * Filter which CvThequeCompetence to delete.
     */
    where: CvThequeCompetenceWhereUniqueInput
  }

  /**
   * CvThequeCompetence deleteMany
   */
  export type CvThequeCompetenceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeCompetences to delete
     */
    where?: CvThequeCompetenceWhereInput
    /**
     * Limit how many CvThequeCompetences to delete.
     */
    limit?: number
  }

  /**
   * CvThequeCompetence without action
   */
  export type CvThequeCompetenceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeCompetence
     */
    select?: CvThequeCompetenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeCompetence
     */
    omit?: CvThequeCompetenceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeCompetenceInclude<ExtArgs> | null
  }


  /**
   * Model CvThequeView
   */

  export type AggregateCvThequeView = {
    _count: CvThequeViewCountAggregateOutputType | null
    _avg: CvThequeViewAvgAggregateOutputType | null
    _sum: CvThequeViewSumAggregateOutputType | null
    _min: CvThequeViewMinAggregateOutputType | null
    _max: CvThequeViewMaxAggregateOutputType | null
  }

  export type CvThequeViewAvgAggregateOutputType = {
    id: number | null
    count: number | null
    cvMinuteId: number | null
    cvThequeCritereId: number | null
  }

  export type CvThequeViewSumAggregateOutputType = {
    id: number | null
    count: number | null
    cvMinuteId: number | null
    cvThequeCritereId: number | null
  }

  export type CvThequeViewMinAggregateOutputType = {
    id: number | null
    count: number | null
    cvMinuteId: number | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeViewMaxAggregateOutputType = {
    id: number | null
    count: number | null
    cvMinuteId: number | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeViewCountAggregateOutputType = {
    id: number
    count: number
    cvMinuteId: number
    cvThequeCritereId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CvThequeViewAvgAggregateInputType = {
    id?: true
    count?: true
    cvMinuteId?: true
    cvThequeCritereId?: true
  }

  export type CvThequeViewSumAggregateInputType = {
    id?: true
    count?: true
    cvMinuteId?: true
    cvThequeCritereId?: true
  }

  export type CvThequeViewMinAggregateInputType = {
    id?: true
    count?: true
    cvMinuteId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeViewMaxAggregateInputType = {
    id?: true
    count?: true
    cvMinuteId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeViewCountAggregateInputType = {
    id?: true
    count?: true
    cvMinuteId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CvThequeViewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeView to aggregate.
     */
    where?: CvThequeViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeViews to fetch.
     */
    orderBy?: CvThequeViewOrderByWithRelationInput | CvThequeViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvThequeViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvThequeViews
    **/
    _count?: true | CvThequeViewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvThequeViewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvThequeViewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvThequeViewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvThequeViewMaxAggregateInputType
  }

  export type GetCvThequeViewAggregateType<T extends CvThequeViewAggregateArgs> = {
        [P in keyof T & keyof AggregateCvThequeView]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvThequeView[P]>
      : GetScalarType<T[P], AggregateCvThequeView[P]>
  }




  export type CvThequeViewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeViewWhereInput
    orderBy?: CvThequeViewOrderByWithAggregationInput | CvThequeViewOrderByWithAggregationInput[]
    by: CvThequeViewScalarFieldEnum[] | CvThequeViewScalarFieldEnum
    having?: CvThequeViewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvThequeViewCountAggregateInputType | true
    _avg?: CvThequeViewAvgAggregateInputType
    _sum?: CvThequeViewSumAggregateInputType
    _min?: CvThequeViewMinAggregateInputType
    _max?: CvThequeViewMaxAggregateInputType
  }

  export type CvThequeViewGroupByOutputType = {
    id: number
    count: number
    cvMinuteId: number
    cvThequeCritereId: number
    createdAt: Date
    updatedAt: Date
    _count: CvThequeViewCountAggregateOutputType | null
    _avg: CvThequeViewAvgAggregateOutputType | null
    _sum: CvThequeViewSumAggregateOutputType | null
    _min: CvThequeViewMinAggregateOutputType | null
    _max: CvThequeViewMaxAggregateOutputType | null
  }

  type GetCvThequeViewGroupByPayload<T extends CvThequeViewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvThequeViewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvThequeViewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvThequeViewGroupByOutputType[P]>
            : GetScalarType<T[P], CvThequeViewGroupByOutputType[P]>
        }
      >
    >


  export type CvThequeViewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    count?: boolean
    cvMinuteId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeView"]>

  export type CvThequeViewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    count?: boolean
    cvMinuteId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeView"]>

  export type CvThequeViewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    count?: boolean
    cvMinuteId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeView"]>

  export type CvThequeViewSelectScalar = {
    id?: boolean
    count?: boolean
    cvMinuteId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CvThequeViewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "count" | "cvMinuteId" | "cvThequeCritereId" | "createdAt" | "updatedAt", ExtArgs["result"]["cvThequeView"]>
  export type CvThequeViewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }
  export type CvThequeViewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }
  export type CvThequeViewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }

  export type $CvThequeViewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvThequeView"
    objects: {
      cvMinute: Prisma.$CvMinutePayload<ExtArgs>
      cvThequeCritere: Prisma.$CvThequeCriterePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      count: number
      cvMinuteId: number
      cvThequeCritereId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cvThequeView"]>
    composites: {}
  }

  type CvThequeViewGetPayload<S extends boolean | null | undefined | CvThequeViewDefaultArgs> = $Result.GetResult<Prisma.$CvThequeViewPayload, S>

  type CvThequeViewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvThequeViewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvThequeViewCountAggregateInputType | true
    }

  export interface CvThequeViewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvThequeView'], meta: { name: 'CvThequeView' } }
    /**
     * Find zero or one CvThequeView that matches the filter.
     * @param {CvThequeViewFindUniqueArgs} args - Arguments to find a CvThequeView
     * @example
     * // Get one CvThequeView
     * const cvThequeView = await prisma.cvThequeView.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvThequeViewFindUniqueArgs>(args: SelectSubset<T, CvThequeViewFindUniqueArgs<ExtArgs>>): Prisma__CvThequeViewClient<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvThequeView that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvThequeViewFindUniqueOrThrowArgs} args - Arguments to find a CvThequeView
     * @example
     * // Get one CvThequeView
     * const cvThequeView = await prisma.cvThequeView.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvThequeViewFindUniqueOrThrowArgs>(args: SelectSubset<T, CvThequeViewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvThequeViewClient<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeView that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeViewFindFirstArgs} args - Arguments to find a CvThequeView
     * @example
     * // Get one CvThequeView
     * const cvThequeView = await prisma.cvThequeView.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvThequeViewFindFirstArgs>(args?: SelectSubset<T, CvThequeViewFindFirstArgs<ExtArgs>>): Prisma__CvThequeViewClient<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeView that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeViewFindFirstOrThrowArgs} args - Arguments to find a CvThequeView
     * @example
     * // Get one CvThequeView
     * const cvThequeView = await prisma.cvThequeView.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvThequeViewFindFirstOrThrowArgs>(args?: SelectSubset<T, CvThequeViewFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvThequeViewClient<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvThequeViews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeViewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvThequeViews
     * const cvThequeViews = await prisma.cvThequeView.findMany()
     * 
     * // Get first 10 CvThequeViews
     * const cvThequeViews = await prisma.cvThequeView.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvThequeViewWithIdOnly = await prisma.cvThequeView.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvThequeViewFindManyArgs>(args?: SelectSubset<T, CvThequeViewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvThequeView.
     * @param {CvThequeViewCreateArgs} args - Arguments to create a CvThequeView.
     * @example
     * // Create one CvThequeView
     * const CvThequeView = await prisma.cvThequeView.create({
     *   data: {
     *     // ... data to create a CvThequeView
     *   }
     * })
     * 
     */
    create<T extends CvThequeViewCreateArgs>(args: SelectSubset<T, CvThequeViewCreateArgs<ExtArgs>>): Prisma__CvThequeViewClient<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvThequeViews.
     * @param {CvThequeViewCreateManyArgs} args - Arguments to create many CvThequeViews.
     * @example
     * // Create many CvThequeViews
     * const cvThequeView = await prisma.cvThequeView.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvThequeViewCreateManyArgs>(args?: SelectSubset<T, CvThequeViewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvThequeViews and returns the data saved in the database.
     * @param {CvThequeViewCreateManyAndReturnArgs} args - Arguments to create many CvThequeViews.
     * @example
     * // Create many CvThequeViews
     * const cvThequeView = await prisma.cvThequeView.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvThequeViews and only return the `id`
     * const cvThequeViewWithIdOnly = await prisma.cvThequeView.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvThequeViewCreateManyAndReturnArgs>(args?: SelectSubset<T, CvThequeViewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvThequeView.
     * @param {CvThequeViewDeleteArgs} args - Arguments to delete one CvThequeView.
     * @example
     * // Delete one CvThequeView
     * const CvThequeView = await prisma.cvThequeView.delete({
     *   where: {
     *     // ... filter to delete one CvThequeView
     *   }
     * })
     * 
     */
    delete<T extends CvThequeViewDeleteArgs>(args: SelectSubset<T, CvThequeViewDeleteArgs<ExtArgs>>): Prisma__CvThequeViewClient<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvThequeView.
     * @param {CvThequeViewUpdateArgs} args - Arguments to update one CvThequeView.
     * @example
     * // Update one CvThequeView
     * const cvThequeView = await prisma.cvThequeView.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvThequeViewUpdateArgs>(args: SelectSubset<T, CvThequeViewUpdateArgs<ExtArgs>>): Prisma__CvThequeViewClient<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvThequeViews.
     * @param {CvThequeViewDeleteManyArgs} args - Arguments to filter CvThequeViews to delete.
     * @example
     * // Delete a few CvThequeViews
     * const { count } = await prisma.cvThequeView.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvThequeViewDeleteManyArgs>(args?: SelectSubset<T, CvThequeViewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeViewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvThequeViews
     * const cvThequeView = await prisma.cvThequeView.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvThequeViewUpdateManyArgs>(args: SelectSubset<T, CvThequeViewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeViews and returns the data updated in the database.
     * @param {CvThequeViewUpdateManyAndReturnArgs} args - Arguments to update many CvThequeViews.
     * @example
     * // Update many CvThequeViews
     * const cvThequeView = await prisma.cvThequeView.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvThequeViews and only return the `id`
     * const cvThequeViewWithIdOnly = await prisma.cvThequeView.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvThequeViewUpdateManyAndReturnArgs>(args: SelectSubset<T, CvThequeViewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvThequeView.
     * @param {CvThequeViewUpsertArgs} args - Arguments to update or create a CvThequeView.
     * @example
     * // Update or create a CvThequeView
     * const cvThequeView = await prisma.cvThequeView.upsert({
     *   create: {
     *     // ... data to create a CvThequeView
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvThequeView we want to update
     *   }
     * })
     */
    upsert<T extends CvThequeViewUpsertArgs>(args: SelectSubset<T, CvThequeViewUpsertArgs<ExtArgs>>): Prisma__CvThequeViewClient<$Result.GetResult<Prisma.$CvThequeViewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvThequeViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeViewCountArgs} args - Arguments to filter CvThequeViews to count.
     * @example
     * // Count the number of CvThequeViews
     * const count = await prisma.cvThequeView.count({
     *   where: {
     *     // ... the filter for the CvThequeViews we want to count
     *   }
     * })
    **/
    count<T extends CvThequeViewCountArgs>(
      args?: Subset<T, CvThequeViewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvThequeViewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvThequeView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeViewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvThequeViewAggregateArgs>(args: Subset<T, CvThequeViewAggregateArgs>): Prisma.PrismaPromise<GetCvThequeViewAggregateType<T>>

    /**
     * Group by CvThequeView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeViewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvThequeViewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvThequeViewGroupByArgs['orderBy'] }
        : { orderBy?: CvThequeViewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvThequeViewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvThequeViewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvThequeView model
   */
  readonly fields: CvThequeViewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvThequeView.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvThequeViewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cvMinute<T extends CvMinuteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvMinuteDefaultArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvThequeCritere<T extends CvThequeCritereDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeCritereDefaultArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvThequeView model
   */
  interface CvThequeViewFieldRefs {
    readonly id: FieldRef<"CvThequeView", 'Int'>
    readonly count: FieldRef<"CvThequeView", 'Int'>
    readonly cvMinuteId: FieldRef<"CvThequeView", 'Int'>
    readonly cvThequeCritereId: FieldRef<"CvThequeView", 'Int'>
    readonly createdAt: FieldRef<"CvThequeView", 'DateTime'>
    readonly updatedAt: FieldRef<"CvThequeView", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CvThequeView findUnique
   */
  export type CvThequeViewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeView to fetch.
     */
    where: CvThequeViewWhereUniqueInput
  }

  /**
   * CvThequeView findUniqueOrThrow
   */
  export type CvThequeViewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeView to fetch.
     */
    where: CvThequeViewWhereUniqueInput
  }

  /**
   * CvThequeView findFirst
   */
  export type CvThequeViewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeView to fetch.
     */
    where?: CvThequeViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeViews to fetch.
     */
    orderBy?: CvThequeViewOrderByWithRelationInput | CvThequeViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeViews.
     */
    cursor?: CvThequeViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeViews.
     */
    distinct?: CvThequeViewScalarFieldEnum | CvThequeViewScalarFieldEnum[]
  }

  /**
   * CvThequeView findFirstOrThrow
   */
  export type CvThequeViewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeView to fetch.
     */
    where?: CvThequeViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeViews to fetch.
     */
    orderBy?: CvThequeViewOrderByWithRelationInput | CvThequeViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeViews.
     */
    cursor?: CvThequeViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeViews.
     */
    distinct?: CvThequeViewScalarFieldEnum | CvThequeViewScalarFieldEnum[]
  }

  /**
   * CvThequeView findMany
   */
  export type CvThequeViewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeViews to fetch.
     */
    where?: CvThequeViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeViews to fetch.
     */
    orderBy?: CvThequeViewOrderByWithRelationInput | CvThequeViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvThequeViews.
     */
    cursor?: CvThequeViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeViews.
     */
    skip?: number
    distinct?: CvThequeViewScalarFieldEnum | CvThequeViewScalarFieldEnum[]
  }

  /**
   * CvThequeView create
   */
  export type CvThequeViewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * The data needed to create a CvThequeView.
     */
    data: XOR<CvThequeViewCreateInput, CvThequeViewUncheckedCreateInput>
  }

  /**
   * CvThequeView createMany
   */
  export type CvThequeViewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvThequeViews.
     */
    data: CvThequeViewCreateManyInput | CvThequeViewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvThequeView createManyAndReturn
   */
  export type CvThequeViewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * The data used to create many CvThequeViews.
     */
    data: CvThequeViewCreateManyInput | CvThequeViewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeView update
   */
  export type CvThequeViewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * The data needed to update a CvThequeView.
     */
    data: XOR<CvThequeViewUpdateInput, CvThequeViewUncheckedUpdateInput>
    /**
     * Choose, which CvThequeView to update.
     */
    where: CvThequeViewWhereUniqueInput
  }

  /**
   * CvThequeView updateMany
   */
  export type CvThequeViewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvThequeViews.
     */
    data: XOR<CvThequeViewUpdateManyMutationInput, CvThequeViewUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeViews to update
     */
    where?: CvThequeViewWhereInput
    /**
     * Limit how many CvThequeViews to update.
     */
    limit?: number
  }

  /**
   * CvThequeView updateManyAndReturn
   */
  export type CvThequeViewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * The data used to update CvThequeViews.
     */
    data: XOR<CvThequeViewUpdateManyMutationInput, CvThequeViewUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeViews to update
     */
    where?: CvThequeViewWhereInput
    /**
     * Limit how many CvThequeViews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeView upsert
   */
  export type CvThequeViewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * The filter to search for the CvThequeView to update in case it exists.
     */
    where: CvThequeViewWhereUniqueInput
    /**
     * In case the CvThequeView found by the `where` argument doesn't exist, create a new CvThequeView with this data.
     */
    create: XOR<CvThequeViewCreateInput, CvThequeViewUncheckedCreateInput>
    /**
     * In case the CvThequeView was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvThequeViewUpdateInput, CvThequeViewUncheckedUpdateInput>
  }

  /**
   * CvThequeView delete
   */
  export type CvThequeViewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
    /**
     * Filter which CvThequeView to delete.
     */
    where: CvThequeViewWhereUniqueInput
  }

  /**
   * CvThequeView deleteMany
   */
  export type CvThequeViewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeViews to delete
     */
    where?: CvThequeViewWhereInput
    /**
     * Limit how many CvThequeViews to delete.
     */
    limit?: number
  }

  /**
   * CvThequeView without action
   */
  export type CvThequeViewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeView
     */
    select?: CvThequeViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeView
     */
    omit?: CvThequeViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeViewInclude<ExtArgs> | null
  }


  /**
   * Model CvThequeUser
   */

  export type AggregateCvThequeUser = {
    _count: CvThequeUserCountAggregateOutputType | null
    _avg: CvThequeUserAvgAggregateOutputType | null
    _sum: CvThequeUserSumAggregateOutputType | null
    _min: CvThequeUserMinAggregateOutputType | null
    _max: CvThequeUserMaxAggregateOutputType | null
  }

  export type CvThequeUserAvgAggregateOutputType = {
    id: number | null
    score: number | null
    userId: number | null
    cvThequeCritereId: number | null
  }

  export type CvThequeUserSumAggregateOutputType = {
    id: number | null
    score: number | null
    userId: number | null
    cvThequeCritereId: number | null
  }

  export type CvThequeUserMinAggregateOutputType = {
    id: number | null
    score: number | null
    userId: number | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeUserMaxAggregateOutputType = {
    id: number | null
    score: number | null
    userId: number | null
    cvThequeCritereId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeUserCountAggregateOutputType = {
    id: number
    score: number
    userId: number
    cvThequeCritereId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CvThequeUserAvgAggregateInputType = {
    id?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
  }

  export type CvThequeUserSumAggregateInputType = {
    id?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
  }

  export type CvThequeUserMinAggregateInputType = {
    id?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeUserMaxAggregateInputType = {
    id?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeUserCountAggregateInputType = {
    id?: true
    score?: true
    userId?: true
    cvThequeCritereId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CvThequeUserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeUser to aggregate.
     */
    where?: CvThequeUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeUsers to fetch.
     */
    orderBy?: CvThequeUserOrderByWithRelationInput | CvThequeUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvThequeUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvThequeUsers
    **/
    _count?: true | CvThequeUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvThequeUserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvThequeUserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvThequeUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvThequeUserMaxAggregateInputType
  }

  export type GetCvThequeUserAggregateType<T extends CvThequeUserAggregateArgs> = {
        [P in keyof T & keyof AggregateCvThequeUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvThequeUser[P]>
      : GetScalarType<T[P], AggregateCvThequeUser[P]>
  }




  export type CvThequeUserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeUserWhereInput
    orderBy?: CvThequeUserOrderByWithAggregationInput | CvThequeUserOrderByWithAggregationInput[]
    by: CvThequeUserScalarFieldEnum[] | CvThequeUserScalarFieldEnum
    having?: CvThequeUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvThequeUserCountAggregateInputType | true
    _avg?: CvThequeUserAvgAggregateInputType
    _sum?: CvThequeUserSumAggregateInputType
    _min?: CvThequeUserMinAggregateInputType
    _max?: CvThequeUserMaxAggregateInputType
  }

  export type CvThequeUserGroupByOutputType = {
    id: number
    score: number
    userId: number
    cvThequeCritereId: number
    createdAt: Date
    updatedAt: Date
    _count: CvThequeUserCountAggregateOutputType | null
    _avg: CvThequeUserAvgAggregateOutputType | null
    _sum: CvThequeUserSumAggregateOutputType | null
    _min: CvThequeUserMinAggregateOutputType | null
    _max: CvThequeUserMaxAggregateOutputType | null
  }

  type GetCvThequeUserGroupByPayload<T extends CvThequeUserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvThequeUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvThequeUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvThequeUserGroupByOutputType[P]>
            : GetScalarType<T[P], CvThequeUserGroupByOutputType[P]>
        }
      >
    >


  export type CvThequeUserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    score?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeUser"]>

  export type CvThequeUserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    score?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeUser"]>

  export type CvThequeUserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    score?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeUser"]>

  export type CvThequeUserSelectScalar = {
    id?: boolean
    score?: boolean
    userId?: boolean
    cvThequeCritereId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CvThequeUserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "score" | "userId" | "cvThequeCritereId" | "createdAt" | "updatedAt", ExtArgs["result"]["cvThequeUser"]>
  export type CvThequeUserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }
  export type CvThequeUserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }
  export type CvThequeUserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeCritere?: boolean | CvThequeCritereDefaultArgs<ExtArgs>
  }

  export type $CvThequeUserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvThequeUser"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      cvThequeCritere: Prisma.$CvThequeCriterePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      score: number
      userId: number
      cvThequeCritereId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cvThequeUser"]>
    composites: {}
  }

  type CvThequeUserGetPayload<S extends boolean | null | undefined | CvThequeUserDefaultArgs> = $Result.GetResult<Prisma.$CvThequeUserPayload, S>

  type CvThequeUserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvThequeUserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvThequeUserCountAggregateInputType | true
    }

  export interface CvThequeUserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvThequeUser'], meta: { name: 'CvThequeUser' } }
    /**
     * Find zero or one CvThequeUser that matches the filter.
     * @param {CvThequeUserFindUniqueArgs} args - Arguments to find a CvThequeUser
     * @example
     * // Get one CvThequeUser
     * const cvThequeUser = await prisma.cvThequeUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvThequeUserFindUniqueArgs>(args: SelectSubset<T, CvThequeUserFindUniqueArgs<ExtArgs>>): Prisma__CvThequeUserClient<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvThequeUser that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvThequeUserFindUniqueOrThrowArgs} args - Arguments to find a CvThequeUser
     * @example
     * // Get one CvThequeUser
     * const cvThequeUser = await prisma.cvThequeUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvThequeUserFindUniqueOrThrowArgs>(args: SelectSubset<T, CvThequeUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvThequeUserClient<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeUserFindFirstArgs} args - Arguments to find a CvThequeUser
     * @example
     * // Get one CvThequeUser
     * const cvThequeUser = await prisma.cvThequeUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvThequeUserFindFirstArgs>(args?: SelectSubset<T, CvThequeUserFindFirstArgs<ExtArgs>>): Prisma__CvThequeUserClient<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeUser that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeUserFindFirstOrThrowArgs} args - Arguments to find a CvThequeUser
     * @example
     * // Get one CvThequeUser
     * const cvThequeUser = await prisma.cvThequeUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvThequeUserFindFirstOrThrowArgs>(args?: SelectSubset<T, CvThequeUserFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvThequeUserClient<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvThequeUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeUserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvThequeUsers
     * const cvThequeUsers = await prisma.cvThequeUser.findMany()
     * 
     * // Get first 10 CvThequeUsers
     * const cvThequeUsers = await prisma.cvThequeUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvThequeUserWithIdOnly = await prisma.cvThequeUser.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvThequeUserFindManyArgs>(args?: SelectSubset<T, CvThequeUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvThequeUser.
     * @param {CvThequeUserCreateArgs} args - Arguments to create a CvThequeUser.
     * @example
     * // Create one CvThequeUser
     * const CvThequeUser = await prisma.cvThequeUser.create({
     *   data: {
     *     // ... data to create a CvThequeUser
     *   }
     * })
     * 
     */
    create<T extends CvThequeUserCreateArgs>(args: SelectSubset<T, CvThequeUserCreateArgs<ExtArgs>>): Prisma__CvThequeUserClient<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvThequeUsers.
     * @param {CvThequeUserCreateManyArgs} args - Arguments to create many CvThequeUsers.
     * @example
     * // Create many CvThequeUsers
     * const cvThequeUser = await prisma.cvThequeUser.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvThequeUserCreateManyArgs>(args?: SelectSubset<T, CvThequeUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvThequeUsers and returns the data saved in the database.
     * @param {CvThequeUserCreateManyAndReturnArgs} args - Arguments to create many CvThequeUsers.
     * @example
     * // Create many CvThequeUsers
     * const cvThequeUser = await prisma.cvThequeUser.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvThequeUsers and only return the `id`
     * const cvThequeUserWithIdOnly = await prisma.cvThequeUser.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvThequeUserCreateManyAndReturnArgs>(args?: SelectSubset<T, CvThequeUserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvThequeUser.
     * @param {CvThequeUserDeleteArgs} args - Arguments to delete one CvThequeUser.
     * @example
     * // Delete one CvThequeUser
     * const CvThequeUser = await prisma.cvThequeUser.delete({
     *   where: {
     *     // ... filter to delete one CvThequeUser
     *   }
     * })
     * 
     */
    delete<T extends CvThequeUserDeleteArgs>(args: SelectSubset<T, CvThequeUserDeleteArgs<ExtArgs>>): Prisma__CvThequeUserClient<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvThequeUser.
     * @param {CvThequeUserUpdateArgs} args - Arguments to update one CvThequeUser.
     * @example
     * // Update one CvThequeUser
     * const cvThequeUser = await prisma.cvThequeUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvThequeUserUpdateArgs>(args: SelectSubset<T, CvThequeUserUpdateArgs<ExtArgs>>): Prisma__CvThequeUserClient<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvThequeUsers.
     * @param {CvThequeUserDeleteManyArgs} args - Arguments to filter CvThequeUsers to delete.
     * @example
     * // Delete a few CvThequeUsers
     * const { count } = await prisma.cvThequeUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvThequeUserDeleteManyArgs>(args?: SelectSubset<T, CvThequeUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvThequeUsers
     * const cvThequeUser = await prisma.cvThequeUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvThequeUserUpdateManyArgs>(args: SelectSubset<T, CvThequeUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeUsers and returns the data updated in the database.
     * @param {CvThequeUserUpdateManyAndReturnArgs} args - Arguments to update many CvThequeUsers.
     * @example
     * // Update many CvThequeUsers
     * const cvThequeUser = await prisma.cvThequeUser.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvThequeUsers and only return the `id`
     * const cvThequeUserWithIdOnly = await prisma.cvThequeUser.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvThequeUserUpdateManyAndReturnArgs>(args: SelectSubset<T, CvThequeUserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvThequeUser.
     * @param {CvThequeUserUpsertArgs} args - Arguments to update or create a CvThequeUser.
     * @example
     * // Update or create a CvThequeUser
     * const cvThequeUser = await prisma.cvThequeUser.upsert({
     *   create: {
     *     // ... data to create a CvThequeUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvThequeUser we want to update
     *   }
     * })
     */
    upsert<T extends CvThequeUserUpsertArgs>(args: SelectSubset<T, CvThequeUserUpsertArgs<ExtArgs>>): Prisma__CvThequeUserClient<$Result.GetResult<Prisma.$CvThequeUserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvThequeUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeUserCountArgs} args - Arguments to filter CvThequeUsers to count.
     * @example
     * // Count the number of CvThequeUsers
     * const count = await prisma.cvThequeUser.count({
     *   where: {
     *     // ... the filter for the CvThequeUsers we want to count
     *   }
     * })
    **/
    count<T extends CvThequeUserCountArgs>(
      args?: Subset<T, CvThequeUserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvThequeUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvThequeUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvThequeUserAggregateArgs>(args: Subset<T, CvThequeUserAggregateArgs>): Prisma.PrismaPromise<GetCvThequeUserAggregateType<T>>

    /**
     * Group by CvThequeUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvThequeUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvThequeUserGroupByArgs['orderBy'] }
        : { orderBy?: CvThequeUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvThequeUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvThequeUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvThequeUser model
   */
  readonly fields: CvThequeUserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvThequeUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvThequeUserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvThequeCritere<T extends CvThequeCritereDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeCritereDefaultArgs<ExtArgs>>): Prisma__CvThequeCritereClient<$Result.GetResult<Prisma.$CvThequeCriterePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvThequeUser model
   */
  interface CvThequeUserFieldRefs {
    readonly id: FieldRef<"CvThequeUser", 'Int'>
    readonly score: FieldRef<"CvThequeUser", 'Int'>
    readonly userId: FieldRef<"CvThequeUser", 'Int'>
    readonly cvThequeCritereId: FieldRef<"CvThequeUser", 'Int'>
    readonly createdAt: FieldRef<"CvThequeUser", 'DateTime'>
    readonly updatedAt: FieldRef<"CvThequeUser", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CvThequeUser findUnique
   */
  export type CvThequeUserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeUser to fetch.
     */
    where: CvThequeUserWhereUniqueInput
  }

  /**
   * CvThequeUser findUniqueOrThrow
   */
  export type CvThequeUserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeUser to fetch.
     */
    where: CvThequeUserWhereUniqueInput
  }

  /**
   * CvThequeUser findFirst
   */
  export type CvThequeUserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeUser to fetch.
     */
    where?: CvThequeUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeUsers to fetch.
     */
    orderBy?: CvThequeUserOrderByWithRelationInput | CvThequeUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeUsers.
     */
    cursor?: CvThequeUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeUsers.
     */
    distinct?: CvThequeUserScalarFieldEnum | CvThequeUserScalarFieldEnum[]
  }

  /**
   * CvThequeUser findFirstOrThrow
   */
  export type CvThequeUserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeUser to fetch.
     */
    where?: CvThequeUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeUsers to fetch.
     */
    orderBy?: CvThequeUserOrderByWithRelationInput | CvThequeUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeUsers.
     */
    cursor?: CvThequeUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeUsers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeUsers.
     */
    distinct?: CvThequeUserScalarFieldEnum | CvThequeUserScalarFieldEnum[]
  }

  /**
   * CvThequeUser findMany
   */
  export type CvThequeUserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeUsers to fetch.
     */
    where?: CvThequeUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeUsers to fetch.
     */
    orderBy?: CvThequeUserOrderByWithRelationInput | CvThequeUserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvThequeUsers.
     */
    cursor?: CvThequeUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeUsers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeUsers.
     */
    skip?: number
    distinct?: CvThequeUserScalarFieldEnum | CvThequeUserScalarFieldEnum[]
  }

  /**
   * CvThequeUser create
   */
  export type CvThequeUserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * The data needed to create a CvThequeUser.
     */
    data: XOR<CvThequeUserCreateInput, CvThequeUserUncheckedCreateInput>
  }

  /**
   * CvThequeUser createMany
   */
  export type CvThequeUserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvThequeUsers.
     */
    data: CvThequeUserCreateManyInput | CvThequeUserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvThequeUser createManyAndReturn
   */
  export type CvThequeUserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * The data used to create many CvThequeUsers.
     */
    data: CvThequeUserCreateManyInput | CvThequeUserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeUser update
   */
  export type CvThequeUserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * The data needed to update a CvThequeUser.
     */
    data: XOR<CvThequeUserUpdateInput, CvThequeUserUncheckedUpdateInput>
    /**
     * Choose, which CvThequeUser to update.
     */
    where: CvThequeUserWhereUniqueInput
  }

  /**
   * CvThequeUser updateMany
   */
  export type CvThequeUserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvThequeUsers.
     */
    data: XOR<CvThequeUserUpdateManyMutationInput, CvThequeUserUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeUsers to update
     */
    where?: CvThequeUserWhereInput
    /**
     * Limit how many CvThequeUsers to update.
     */
    limit?: number
  }

  /**
   * CvThequeUser updateManyAndReturn
   */
  export type CvThequeUserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * The data used to update CvThequeUsers.
     */
    data: XOR<CvThequeUserUpdateManyMutationInput, CvThequeUserUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeUsers to update
     */
    where?: CvThequeUserWhereInput
    /**
     * Limit how many CvThequeUsers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeUser upsert
   */
  export type CvThequeUserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * The filter to search for the CvThequeUser to update in case it exists.
     */
    where: CvThequeUserWhereUniqueInput
    /**
     * In case the CvThequeUser found by the `where` argument doesn't exist, create a new CvThequeUser with this data.
     */
    create: XOR<CvThequeUserCreateInput, CvThequeUserUncheckedCreateInput>
    /**
     * In case the CvThequeUser was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvThequeUserUpdateInput, CvThequeUserUncheckedUpdateInput>
  }

  /**
   * CvThequeUser delete
   */
  export type CvThequeUserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
    /**
     * Filter which CvThequeUser to delete.
     */
    where: CvThequeUserWhereUniqueInput
  }

  /**
   * CvThequeUser deleteMany
   */
  export type CvThequeUserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeUsers to delete
     */
    where?: CvThequeUserWhereInput
    /**
     * Limit how many CvThequeUsers to delete.
     */
    limit?: number
  }

  /**
   * CvThequeUser without action
   */
  export type CvThequeUserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeUser
     */
    select?: CvThequeUserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeUser
     */
    omit?: CvThequeUserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeUserInclude<ExtArgs> | null
  }


  /**
   * Model CvThequeContact
   */

  export type AggregateCvThequeContact = {
    _count: CvThequeContactCountAggregateOutputType | null
    _avg: CvThequeContactAvgAggregateOutputType | null
    _sum: CvThequeContactSumAggregateOutputType | null
    _min: CvThequeContactMinAggregateOutputType | null
    _max: CvThequeContactMaxAggregateOutputType | null
  }

  export type CvThequeContactAvgAggregateOutputType = {
    id: number | null
    hour: number | null
    minute: number | null
    userId: number | null
    recruiterId: number | null
    cvMinuteId: number | null
  }

  export type CvThequeContactSumAggregateOutputType = {
    id: number | null
    hour: number | null
    minute: number | null
    userId: number | null
    recruiterId: number | null
    cvMinuteId: number | null
  }

  export type CvThequeContactMinAggregateOutputType = {
    id: number | null
    type: string | null
    date: string | null
    hour: number | null
    minute: number | null
    message: string | null
    status: string | null
    userId: number | null
    recruiterId: number | null
    cvMinuteId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeContactMaxAggregateOutputType = {
    id: number | null
    type: string | null
    date: string | null
    hour: number | null
    minute: number | null
    message: string | null
    status: string | null
    userId: number | null
    recruiterId: number | null
    cvMinuteId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeContactCountAggregateOutputType = {
    id: number
    type: number
    date: number
    hour: number
    minute: number
    message: number
    status: number
    userId: number
    recruiterId: number
    cvMinuteId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CvThequeContactAvgAggregateInputType = {
    id?: true
    hour?: true
    minute?: true
    userId?: true
    recruiterId?: true
    cvMinuteId?: true
  }

  export type CvThequeContactSumAggregateInputType = {
    id?: true
    hour?: true
    minute?: true
    userId?: true
    recruiterId?: true
    cvMinuteId?: true
  }

  export type CvThequeContactMinAggregateInputType = {
    id?: true
    type?: true
    date?: true
    hour?: true
    minute?: true
    message?: true
    status?: true
    userId?: true
    recruiterId?: true
    cvMinuteId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeContactMaxAggregateInputType = {
    id?: true
    type?: true
    date?: true
    hour?: true
    minute?: true
    message?: true
    status?: true
    userId?: true
    recruiterId?: true
    cvMinuteId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeContactCountAggregateInputType = {
    id?: true
    type?: true
    date?: true
    hour?: true
    minute?: true
    message?: true
    status?: true
    userId?: true
    recruiterId?: true
    cvMinuteId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CvThequeContactAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeContact to aggregate.
     */
    where?: CvThequeContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeContacts to fetch.
     */
    orderBy?: CvThequeContactOrderByWithRelationInput | CvThequeContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvThequeContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvThequeContacts
    **/
    _count?: true | CvThequeContactCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvThequeContactAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvThequeContactSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvThequeContactMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvThequeContactMaxAggregateInputType
  }

  export type GetCvThequeContactAggregateType<T extends CvThequeContactAggregateArgs> = {
        [P in keyof T & keyof AggregateCvThequeContact]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvThequeContact[P]>
      : GetScalarType<T[P], AggregateCvThequeContact[P]>
  }




  export type CvThequeContactGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeContactWhereInput
    orderBy?: CvThequeContactOrderByWithAggregationInput | CvThequeContactOrderByWithAggregationInput[]
    by: CvThequeContactScalarFieldEnum[] | CvThequeContactScalarFieldEnum
    having?: CvThequeContactScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvThequeContactCountAggregateInputType | true
    _avg?: CvThequeContactAvgAggregateInputType
    _sum?: CvThequeContactSumAggregateInputType
    _min?: CvThequeContactMinAggregateInputType
    _max?: CvThequeContactMaxAggregateInputType
  }

  export type CvThequeContactGroupByOutputType = {
    id: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status: string
    userId: number
    recruiterId: number
    cvMinuteId: number
    createdAt: Date
    updatedAt: Date
    _count: CvThequeContactCountAggregateOutputType | null
    _avg: CvThequeContactAvgAggregateOutputType | null
    _sum: CvThequeContactSumAggregateOutputType | null
    _min: CvThequeContactMinAggregateOutputType | null
    _max: CvThequeContactMaxAggregateOutputType | null
  }

  type GetCvThequeContactGroupByPayload<T extends CvThequeContactGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvThequeContactGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvThequeContactGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvThequeContactGroupByOutputType[P]>
            : GetScalarType<T[P], CvThequeContactGroupByOutputType[P]>
        }
      >
    >


  export type CvThequeContactSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    date?: boolean
    hour?: boolean
    minute?: boolean
    message?: boolean
    status?: boolean
    userId?: boolean
    recruiterId?: boolean
    cvMinuteId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    recruiter?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    cvThequeContactViews?: boolean | CvThequeContact$cvThequeContactViewsArgs<ExtArgs>
    _count?: boolean | CvThequeContactCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeContact"]>

  export type CvThequeContactSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    date?: boolean
    hour?: boolean
    minute?: boolean
    message?: boolean
    status?: boolean
    userId?: boolean
    recruiterId?: boolean
    cvMinuteId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    recruiter?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeContact"]>

  export type CvThequeContactSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    date?: boolean
    hour?: boolean
    minute?: boolean
    message?: boolean
    status?: boolean
    userId?: boolean
    recruiterId?: boolean
    cvMinuteId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    recruiter?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeContact"]>

  export type CvThequeContactSelectScalar = {
    id?: boolean
    type?: boolean
    date?: boolean
    hour?: boolean
    minute?: boolean
    message?: boolean
    status?: boolean
    userId?: boolean
    recruiterId?: boolean
    cvMinuteId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CvThequeContactOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "date" | "hour" | "minute" | "message" | "status" | "userId" | "recruiterId" | "cvMinuteId" | "createdAt" | "updatedAt", ExtArgs["result"]["cvThequeContact"]>
  export type CvThequeContactInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    recruiter?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
    cvThequeContactViews?: boolean | CvThequeContact$cvThequeContactViewsArgs<ExtArgs>
    _count?: boolean | CvThequeContactCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CvThequeContactIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    recruiter?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }
  export type CvThequeContactIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    recruiter?: boolean | UserDefaultArgs<ExtArgs>
    cvMinute?: boolean | CvMinuteDefaultArgs<ExtArgs>
  }

  export type $CvThequeContactPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvThequeContact"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      recruiter: Prisma.$UserPayload<ExtArgs>
      cvMinute: Prisma.$CvMinutePayload<ExtArgs>
      cvThequeContactViews: Prisma.$CvThequeContactViewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: string
      date: string
      hour: number
      minute: number
      message: string
      status: string
      userId: number
      recruiterId: number
      cvMinuteId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cvThequeContact"]>
    composites: {}
  }

  type CvThequeContactGetPayload<S extends boolean | null | undefined | CvThequeContactDefaultArgs> = $Result.GetResult<Prisma.$CvThequeContactPayload, S>

  type CvThequeContactCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvThequeContactFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvThequeContactCountAggregateInputType | true
    }

  export interface CvThequeContactDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvThequeContact'], meta: { name: 'CvThequeContact' } }
    /**
     * Find zero or one CvThequeContact that matches the filter.
     * @param {CvThequeContactFindUniqueArgs} args - Arguments to find a CvThequeContact
     * @example
     * // Get one CvThequeContact
     * const cvThequeContact = await prisma.cvThequeContact.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvThequeContactFindUniqueArgs>(args: SelectSubset<T, CvThequeContactFindUniqueArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvThequeContact that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvThequeContactFindUniqueOrThrowArgs} args - Arguments to find a CvThequeContact
     * @example
     * // Get one CvThequeContact
     * const cvThequeContact = await prisma.cvThequeContact.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvThequeContactFindUniqueOrThrowArgs>(args: SelectSubset<T, CvThequeContactFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeContact that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactFindFirstArgs} args - Arguments to find a CvThequeContact
     * @example
     * // Get one CvThequeContact
     * const cvThequeContact = await prisma.cvThequeContact.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvThequeContactFindFirstArgs>(args?: SelectSubset<T, CvThequeContactFindFirstArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeContact that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactFindFirstOrThrowArgs} args - Arguments to find a CvThequeContact
     * @example
     * // Get one CvThequeContact
     * const cvThequeContact = await prisma.cvThequeContact.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvThequeContactFindFirstOrThrowArgs>(args?: SelectSubset<T, CvThequeContactFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvThequeContacts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvThequeContacts
     * const cvThequeContacts = await prisma.cvThequeContact.findMany()
     * 
     * // Get first 10 CvThequeContacts
     * const cvThequeContacts = await prisma.cvThequeContact.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvThequeContactWithIdOnly = await prisma.cvThequeContact.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvThequeContactFindManyArgs>(args?: SelectSubset<T, CvThequeContactFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvThequeContact.
     * @param {CvThequeContactCreateArgs} args - Arguments to create a CvThequeContact.
     * @example
     * // Create one CvThequeContact
     * const CvThequeContact = await prisma.cvThequeContact.create({
     *   data: {
     *     // ... data to create a CvThequeContact
     *   }
     * })
     * 
     */
    create<T extends CvThequeContactCreateArgs>(args: SelectSubset<T, CvThequeContactCreateArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvThequeContacts.
     * @param {CvThequeContactCreateManyArgs} args - Arguments to create many CvThequeContacts.
     * @example
     * // Create many CvThequeContacts
     * const cvThequeContact = await prisma.cvThequeContact.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvThequeContactCreateManyArgs>(args?: SelectSubset<T, CvThequeContactCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvThequeContacts and returns the data saved in the database.
     * @param {CvThequeContactCreateManyAndReturnArgs} args - Arguments to create many CvThequeContacts.
     * @example
     * // Create many CvThequeContacts
     * const cvThequeContact = await prisma.cvThequeContact.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvThequeContacts and only return the `id`
     * const cvThequeContactWithIdOnly = await prisma.cvThequeContact.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvThequeContactCreateManyAndReturnArgs>(args?: SelectSubset<T, CvThequeContactCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvThequeContact.
     * @param {CvThequeContactDeleteArgs} args - Arguments to delete one CvThequeContact.
     * @example
     * // Delete one CvThequeContact
     * const CvThequeContact = await prisma.cvThequeContact.delete({
     *   where: {
     *     // ... filter to delete one CvThequeContact
     *   }
     * })
     * 
     */
    delete<T extends CvThequeContactDeleteArgs>(args: SelectSubset<T, CvThequeContactDeleteArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvThequeContact.
     * @param {CvThequeContactUpdateArgs} args - Arguments to update one CvThequeContact.
     * @example
     * // Update one CvThequeContact
     * const cvThequeContact = await prisma.cvThequeContact.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvThequeContactUpdateArgs>(args: SelectSubset<T, CvThequeContactUpdateArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvThequeContacts.
     * @param {CvThequeContactDeleteManyArgs} args - Arguments to filter CvThequeContacts to delete.
     * @example
     * // Delete a few CvThequeContacts
     * const { count } = await prisma.cvThequeContact.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvThequeContactDeleteManyArgs>(args?: SelectSubset<T, CvThequeContactDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvThequeContacts
     * const cvThequeContact = await prisma.cvThequeContact.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvThequeContactUpdateManyArgs>(args: SelectSubset<T, CvThequeContactUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeContacts and returns the data updated in the database.
     * @param {CvThequeContactUpdateManyAndReturnArgs} args - Arguments to update many CvThequeContacts.
     * @example
     * // Update many CvThequeContacts
     * const cvThequeContact = await prisma.cvThequeContact.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvThequeContacts and only return the `id`
     * const cvThequeContactWithIdOnly = await prisma.cvThequeContact.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvThequeContactUpdateManyAndReturnArgs>(args: SelectSubset<T, CvThequeContactUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvThequeContact.
     * @param {CvThequeContactUpsertArgs} args - Arguments to update or create a CvThequeContact.
     * @example
     * // Update or create a CvThequeContact
     * const cvThequeContact = await prisma.cvThequeContact.upsert({
     *   create: {
     *     // ... data to create a CvThequeContact
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvThequeContact we want to update
     *   }
     * })
     */
    upsert<T extends CvThequeContactUpsertArgs>(args: SelectSubset<T, CvThequeContactUpsertArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvThequeContacts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactCountArgs} args - Arguments to filter CvThequeContacts to count.
     * @example
     * // Count the number of CvThequeContacts
     * const count = await prisma.cvThequeContact.count({
     *   where: {
     *     // ... the filter for the CvThequeContacts we want to count
     *   }
     * })
    **/
    count<T extends CvThequeContactCountArgs>(
      args?: Subset<T, CvThequeContactCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvThequeContactCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvThequeContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvThequeContactAggregateArgs>(args: Subset<T, CvThequeContactAggregateArgs>): Prisma.PrismaPromise<GetCvThequeContactAggregateType<T>>

    /**
     * Group by CvThequeContact.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvThequeContactGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvThequeContactGroupByArgs['orderBy'] }
        : { orderBy?: CvThequeContactGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvThequeContactGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvThequeContactGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvThequeContact model
   */
  readonly fields: CvThequeContactFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvThequeContact.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvThequeContactClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    recruiter<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvMinute<T extends CvMinuteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvMinuteDefaultArgs<ExtArgs>>): Prisma__CvMinuteClient<$Result.GetResult<Prisma.$CvMinutePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvThequeContactViews<T extends CvThequeContact$cvThequeContactViewsArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeContact$cvThequeContactViewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvThequeContact model
   */
  interface CvThequeContactFieldRefs {
    readonly id: FieldRef<"CvThequeContact", 'Int'>
    readonly type: FieldRef<"CvThequeContact", 'String'>
    readonly date: FieldRef<"CvThequeContact", 'String'>
    readonly hour: FieldRef<"CvThequeContact", 'Int'>
    readonly minute: FieldRef<"CvThequeContact", 'Int'>
    readonly message: FieldRef<"CvThequeContact", 'String'>
    readonly status: FieldRef<"CvThequeContact", 'String'>
    readonly userId: FieldRef<"CvThequeContact", 'Int'>
    readonly recruiterId: FieldRef<"CvThequeContact", 'Int'>
    readonly cvMinuteId: FieldRef<"CvThequeContact", 'Int'>
    readonly createdAt: FieldRef<"CvThequeContact", 'DateTime'>
    readonly updatedAt: FieldRef<"CvThequeContact", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CvThequeContact findUnique
   */
  export type CvThequeContactFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContact to fetch.
     */
    where: CvThequeContactWhereUniqueInput
  }

  /**
   * CvThequeContact findUniqueOrThrow
   */
  export type CvThequeContactFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContact to fetch.
     */
    where: CvThequeContactWhereUniqueInput
  }

  /**
   * CvThequeContact findFirst
   */
  export type CvThequeContactFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContact to fetch.
     */
    where?: CvThequeContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeContacts to fetch.
     */
    orderBy?: CvThequeContactOrderByWithRelationInput | CvThequeContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeContacts.
     */
    cursor?: CvThequeContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeContacts.
     */
    distinct?: CvThequeContactScalarFieldEnum | CvThequeContactScalarFieldEnum[]
  }

  /**
   * CvThequeContact findFirstOrThrow
   */
  export type CvThequeContactFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContact to fetch.
     */
    where?: CvThequeContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeContacts to fetch.
     */
    orderBy?: CvThequeContactOrderByWithRelationInput | CvThequeContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeContacts.
     */
    cursor?: CvThequeContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeContacts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeContacts.
     */
    distinct?: CvThequeContactScalarFieldEnum | CvThequeContactScalarFieldEnum[]
  }

  /**
   * CvThequeContact findMany
   */
  export type CvThequeContactFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContacts to fetch.
     */
    where?: CvThequeContactWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeContacts to fetch.
     */
    orderBy?: CvThequeContactOrderByWithRelationInput | CvThequeContactOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvThequeContacts.
     */
    cursor?: CvThequeContactWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeContacts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeContacts.
     */
    skip?: number
    distinct?: CvThequeContactScalarFieldEnum | CvThequeContactScalarFieldEnum[]
  }

  /**
   * CvThequeContact create
   */
  export type CvThequeContactCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * The data needed to create a CvThequeContact.
     */
    data: XOR<CvThequeContactCreateInput, CvThequeContactUncheckedCreateInput>
  }

  /**
   * CvThequeContact createMany
   */
  export type CvThequeContactCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvThequeContacts.
     */
    data: CvThequeContactCreateManyInput | CvThequeContactCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvThequeContact createManyAndReturn
   */
  export type CvThequeContactCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * The data used to create many CvThequeContacts.
     */
    data: CvThequeContactCreateManyInput | CvThequeContactCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeContact update
   */
  export type CvThequeContactUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * The data needed to update a CvThequeContact.
     */
    data: XOR<CvThequeContactUpdateInput, CvThequeContactUncheckedUpdateInput>
    /**
     * Choose, which CvThequeContact to update.
     */
    where: CvThequeContactWhereUniqueInput
  }

  /**
   * CvThequeContact updateMany
   */
  export type CvThequeContactUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvThequeContacts.
     */
    data: XOR<CvThequeContactUpdateManyMutationInput, CvThequeContactUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeContacts to update
     */
    where?: CvThequeContactWhereInput
    /**
     * Limit how many CvThequeContacts to update.
     */
    limit?: number
  }

  /**
   * CvThequeContact updateManyAndReturn
   */
  export type CvThequeContactUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * The data used to update CvThequeContacts.
     */
    data: XOR<CvThequeContactUpdateManyMutationInput, CvThequeContactUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeContacts to update
     */
    where?: CvThequeContactWhereInput
    /**
     * Limit how many CvThequeContacts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeContact upsert
   */
  export type CvThequeContactUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * The filter to search for the CvThequeContact to update in case it exists.
     */
    where: CvThequeContactWhereUniqueInput
    /**
     * In case the CvThequeContact found by the `where` argument doesn't exist, create a new CvThequeContact with this data.
     */
    create: XOR<CvThequeContactCreateInput, CvThequeContactUncheckedCreateInput>
    /**
     * In case the CvThequeContact was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvThequeContactUpdateInput, CvThequeContactUncheckedUpdateInput>
  }

  /**
   * CvThequeContact delete
   */
  export type CvThequeContactDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
    /**
     * Filter which CvThequeContact to delete.
     */
    where: CvThequeContactWhereUniqueInput
  }

  /**
   * CvThequeContact deleteMany
   */
  export type CvThequeContactDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeContacts to delete
     */
    where?: CvThequeContactWhereInput
    /**
     * Limit how many CvThequeContacts to delete.
     */
    limit?: number
  }

  /**
   * CvThequeContact.cvThequeContactViews
   */
  export type CvThequeContact$cvThequeContactViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    where?: CvThequeContactViewWhereInput
    orderBy?: CvThequeContactViewOrderByWithRelationInput | CvThequeContactViewOrderByWithRelationInput[]
    cursor?: CvThequeContactViewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CvThequeContactViewScalarFieldEnum | CvThequeContactViewScalarFieldEnum[]
  }

  /**
   * CvThequeContact without action
   */
  export type CvThequeContactDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContact
     */
    select?: CvThequeContactSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContact
     */
    omit?: CvThequeContactOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactInclude<ExtArgs> | null
  }


  /**
   * Model CvThequeContactView
   */

  export type AggregateCvThequeContactView = {
    _count: CvThequeContactViewCountAggregateOutputType | null
    _avg: CvThequeContactViewAvgAggregateOutputType | null
    _sum: CvThequeContactViewSumAggregateOutputType | null
    _min: CvThequeContactViewMinAggregateOutputType | null
    _max: CvThequeContactViewMaxAggregateOutputType | null
  }

  export type CvThequeContactViewAvgAggregateOutputType = {
    id: number | null
    count: number | null
    userId: number | null
    cvThequeContactId: number | null
  }

  export type CvThequeContactViewSumAggregateOutputType = {
    id: number | null
    count: number | null
    userId: number | null
    cvThequeContactId: number | null
  }

  export type CvThequeContactViewMinAggregateOutputType = {
    id: number | null
    count: number | null
    userId: number | null
    cvThequeContactId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeContactViewMaxAggregateOutputType = {
    id: number | null
    count: number | null
    userId: number | null
    cvThequeContactId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CvThequeContactViewCountAggregateOutputType = {
    id: number
    count: number
    userId: number
    cvThequeContactId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CvThequeContactViewAvgAggregateInputType = {
    id?: true
    count?: true
    userId?: true
    cvThequeContactId?: true
  }

  export type CvThequeContactViewSumAggregateInputType = {
    id?: true
    count?: true
    userId?: true
    cvThequeContactId?: true
  }

  export type CvThequeContactViewMinAggregateInputType = {
    id?: true
    count?: true
    userId?: true
    cvThequeContactId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeContactViewMaxAggregateInputType = {
    id?: true
    count?: true
    userId?: true
    cvThequeContactId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CvThequeContactViewCountAggregateInputType = {
    id?: true
    count?: true
    userId?: true
    cvThequeContactId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CvThequeContactViewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeContactView to aggregate.
     */
    where?: CvThequeContactViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeContactViews to fetch.
     */
    orderBy?: CvThequeContactViewOrderByWithRelationInput | CvThequeContactViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CvThequeContactViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeContactViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeContactViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CvThequeContactViews
    **/
    _count?: true | CvThequeContactViewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CvThequeContactViewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CvThequeContactViewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CvThequeContactViewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CvThequeContactViewMaxAggregateInputType
  }

  export type GetCvThequeContactViewAggregateType<T extends CvThequeContactViewAggregateArgs> = {
        [P in keyof T & keyof AggregateCvThequeContactView]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCvThequeContactView[P]>
      : GetScalarType<T[P], AggregateCvThequeContactView[P]>
  }




  export type CvThequeContactViewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CvThequeContactViewWhereInput
    orderBy?: CvThequeContactViewOrderByWithAggregationInput | CvThequeContactViewOrderByWithAggregationInput[]
    by: CvThequeContactViewScalarFieldEnum[] | CvThequeContactViewScalarFieldEnum
    having?: CvThequeContactViewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CvThequeContactViewCountAggregateInputType | true
    _avg?: CvThequeContactViewAvgAggregateInputType
    _sum?: CvThequeContactViewSumAggregateInputType
    _min?: CvThequeContactViewMinAggregateInputType
    _max?: CvThequeContactViewMaxAggregateInputType
  }

  export type CvThequeContactViewGroupByOutputType = {
    id: number
    count: number
    userId: number
    cvThequeContactId: number
    createdAt: Date
    updatedAt: Date
    _count: CvThequeContactViewCountAggregateOutputType | null
    _avg: CvThequeContactViewAvgAggregateOutputType | null
    _sum: CvThequeContactViewSumAggregateOutputType | null
    _min: CvThequeContactViewMinAggregateOutputType | null
    _max: CvThequeContactViewMaxAggregateOutputType | null
  }

  type GetCvThequeContactViewGroupByPayload<T extends CvThequeContactViewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CvThequeContactViewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CvThequeContactViewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CvThequeContactViewGroupByOutputType[P]>
            : GetScalarType<T[P], CvThequeContactViewGroupByOutputType[P]>
        }
      >
    >


  export type CvThequeContactViewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    count?: boolean
    userId?: boolean
    cvThequeContactId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeContact?: boolean | CvThequeContactDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeContactView"]>

  export type CvThequeContactViewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    count?: boolean
    userId?: boolean
    cvThequeContactId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeContact?: boolean | CvThequeContactDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeContactView"]>

  export type CvThequeContactViewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    count?: boolean
    userId?: boolean
    cvThequeContactId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeContact?: boolean | CvThequeContactDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cvThequeContactView"]>

  export type CvThequeContactViewSelectScalar = {
    id?: boolean
    count?: boolean
    userId?: boolean
    cvThequeContactId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CvThequeContactViewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "count" | "userId" | "cvThequeContactId" | "createdAt" | "updatedAt", ExtArgs["result"]["cvThequeContactView"]>
  export type CvThequeContactViewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeContact?: boolean | CvThequeContactDefaultArgs<ExtArgs>
  }
  export type CvThequeContactViewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeContact?: boolean | CvThequeContactDefaultArgs<ExtArgs>
  }
  export type CvThequeContactViewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    cvThequeContact?: boolean | CvThequeContactDefaultArgs<ExtArgs>
  }

  export type $CvThequeContactViewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CvThequeContactView"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      cvThequeContact: Prisma.$CvThequeContactPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      count: number
      userId: number
      cvThequeContactId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cvThequeContactView"]>
    composites: {}
  }

  type CvThequeContactViewGetPayload<S extends boolean | null | undefined | CvThequeContactViewDefaultArgs> = $Result.GetResult<Prisma.$CvThequeContactViewPayload, S>

  type CvThequeContactViewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CvThequeContactViewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CvThequeContactViewCountAggregateInputType | true
    }

  export interface CvThequeContactViewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CvThequeContactView'], meta: { name: 'CvThequeContactView' } }
    /**
     * Find zero or one CvThequeContactView that matches the filter.
     * @param {CvThequeContactViewFindUniqueArgs} args - Arguments to find a CvThequeContactView
     * @example
     * // Get one CvThequeContactView
     * const cvThequeContactView = await prisma.cvThequeContactView.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CvThequeContactViewFindUniqueArgs>(args: SelectSubset<T, CvThequeContactViewFindUniqueArgs<ExtArgs>>): Prisma__CvThequeContactViewClient<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CvThequeContactView that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CvThequeContactViewFindUniqueOrThrowArgs} args - Arguments to find a CvThequeContactView
     * @example
     * // Get one CvThequeContactView
     * const cvThequeContactView = await prisma.cvThequeContactView.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CvThequeContactViewFindUniqueOrThrowArgs>(args: SelectSubset<T, CvThequeContactViewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CvThequeContactViewClient<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeContactView that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactViewFindFirstArgs} args - Arguments to find a CvThequeContactView
     * @example
     * // Get one CvThequeContactView
     * const cvThequeContactView = await prisma.cvThequeContactView.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CvThequeContactViewFindFirstArgs>(args?: SelectSubset<T, CvThequeContactViewFindFirstArgs<ExtArgs>>): Prisma__CvThequeContactViewClient<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CvThequeContactView that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactViewFindFirstOrThrowArgs} args - Arguments to find a CvThequeContactView
     * @example
     * // Get one CvThequeContactView
     * const cvThequeContactView = await prisma.cvThequeContactView.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CvThequeContactViewFindFirstOrThrowArgs>(args?: SelectSubset<T, CvThequeContactViewFindFirstOrThrowArgs<ExtArgs>>): Prisma__CvThequeContactViewClient<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CvThequeContactViews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactViewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CvThequeContactViews
     * const cvThequeContactViews = await prisma.cvThequeContactView.findMany()
     * 
     * // Get first 10 CvThequeContactViews
     * const cvThequeContactViews = await prisma.cvThequeContactView.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cvThequeContactViewWithIdOnly = await prisma.cvThequeContactView.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CvThequeContactViewFindManyArgs>(args?: SelectSubset<T, CvThequeContactViewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CvThequeContactView.
     * @param {CvThequeContactViewCreateArgs} args - Arguments to create a CvThequeContactView.
     * @example
     * // Create one CvThequeContactView
     * const CvThequeContactView = await prisma.cvThequeContactView.create({
     *   data: {
     *     // ... data to create a CvThequeContactView
     *   }
     * })
     * 
     */
    create<T extends CvThequeContactViewCreateArgs>(args: SelectSubset<T, CvThequeContactViewCreateArgs<ExtArgs>>): Prisma__CvThequeContactViewClient<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CvThequeContactViews.
     * @param {CvThequeContactViewCreateManyArgs} args - Arguments to create many CvThequeContactViews.
     * @example
     * // Create many CvThequeContactViews
     * const cvThequeContactView = await prisma.cvThequeContactView.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CvThequeContactViewCreateManyArgs>(args?: SelectSubset<T, CvThequeContactViewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CvThequeContactViews and returns the data saved in the database.
     * @param {CvThequeContactViewCreateManyAndReturnArgs} args - Arguments to create many CvThequeContactViews.
     * @example
     * // Create many CvThequeContactViews
     * const cvThequeContactView = await prisma.cvThequeContactView.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CvThequeContactViews and only return the `id`
     * const cvThequeContactViewWithIdOnly = await prisma.cvThequeContactView.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CvThequeContactViewCreateManyAndReturnArgs>(args?: SelectSubset<T, CvThequeContactViewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CvThequeContactView.
     * @param {CvThequeContactViewDeleteArgs} args - Arguments to delete one CvThequeContactView.
     * @example
     * // Delete one CvThequeContactView
     * const CvThequeContactView = await prisma.cvThequeContactView.delete({
     *   where: {
     *     // ... filter to delete one CvThequeContactView
     *   }
     * })
     * 
     */
    delete<T extends CvThequeContactViewDeleteArgs>(args: SelectSubset<T, CvThequeContactViewDeleteArgs<ExtArgs>>): Prisma__CvThequeContactViewClient<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CvThequeContactView.
     * @param {CvThequeContactViewUpdateArgs} args - Arguments to update one CvThequeContactView.
     * @example
     * // Update one CvThequeContactView
     * const cvThequeContactView = await prisma.cvThequeContactView.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CvThequeContactViewUpdateArgs>(args: SelectSubset<T, CvThequeContactViewUpdateArgs<ExtArgs>>): Prisma__CvThequeContactViewClient<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CvThequeContactViews.
     * @param {CvThequeContactViewDeleteManyArgs} args - Arguments to filter CvThequeContactViews to delete.
     * @example
     * // Delete a few CvThequeContactViews
     * const { count } = await prisma.cvThequeContactView.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CvThequeContactViewDeleteManyArgs>(args?: SelectSubset<T, CvThequeContactViewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeContactViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactViewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CvThequeContactViews
     * const cvThequeContactView = await prisma.cvThequeContactView.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CvThequeContactViewUpdateManyArgs>(args: SelectSubset<T, CvThequeContactViewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CvThequeContactViews and returns the data updated in the database.
     * @param {CvThequeContactViewUpdateManyAndReturnArgs} args - Arguments to update many CvThequeContactViews.
     * @example
     * // Update many CvThequeContactViews
     * const cvThequeContactView = await prisma.cvThequeContactView.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CvThequeContactViews and only return the `id`
     * const cvThequeContactViewWithIdOnly = await prisma.cvThequeContactView.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CvThequeContactViewUpdateManyAndReturnArgs>(args: SelectSubset<T, CvThequeContactViewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CvThequeContactView.
     * @param {CvThequeContactViewUpsertArgs} args - Arguments to update or create a CvThequeContactView.
     * @example
     * // Update or create a CvThequeContactView
     * const cvThequeContactView = await prisma.cvThequeContactView.upsert({
     *   create: {
     *     // ... data to create a CvThequeContactView
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CvThequeContactView we want to update
     *   }
     * })
     */
    upsert<T extends CvThequeContactViewUpsertArgs>(args: SelectSubset<T, CvThequeContactViewUpsertArgs<ExtArgs>>): Prisma__CvThequeContactViewClient<$Result.GetResult<Prisma.$CvThequeContactViewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CvThequeContactViews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactViewCountArgs} args - Arguments to filter CvThequeContactViews to count.
     * @example
     * // Count the number of CvThequeContactViews
     * const count = await prisma.cvThequeContactView.count({
     *   where: {
     *     // ... the filter for the CvThequeContactViews we want to count
     *   }
     * })
    **/
    count<T extends CvThequeContactViewCountArgs>(
      args?: Subset<T, CvThequeContactViewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CvThequeContactViewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CvThequeContactView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactViewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CvThequeContactViewAggregateArgs>(args: Subset<T, CvThequeContactViewAggregateArgs>): Prisma.PrismaPromise<GetCvThequeContactViewAggregateType<T>>

    /**
     * Group by CvThequeContactView.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CvThequeContactViewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CvThequeContactViewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CvThequeContactViewGroupByArgs['orderBy'] }
        : { orderBy?: CvThequeContactViewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CvThequeContactViewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCvThequeContactViewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CvThequeContactView model
   */
  readonly fields: CvThequeContactViewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CvThequeContactView.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CvThequeContactViewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    cvThequeContact<T extends CvThequeContactDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CvThequeContactDefaultArgs<ExtArgs>>): Prisma__CvThequeContactClient<$Result.GetResult<Prisma.$CvThequeContactPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CvThequeContactView model
   */
  interface CvThequeContactViewFieldRefs {
    readonly id: FieldRef<"CvThequeContactView", 'Int'>
    readonly count: FieldRef<"CvThequeContactView", 'Int'>
    readonly userId: FieldRef<"CvThequeContactView", 'Int'>
    readonly cvThequeContactId: FieldRef<"CvThequeContactView", 'Int'>
    readonly createdAt: FieldRef<"CvThequeContactView", 'DateTime'>
    readonly updatedAt: FieldRef<"CvThequeContactView", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CvThequeContactView findUnique
   */
  export type CvThequeContactViewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContactView to fetch.
     */
    where: CvThequeContactViewWhereUniqueInput
  }

  /**
   * CvThequeContactView findUniqueOrThrow
   */
  export type CvThequeContactViewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContactView to fetch.
     */
    where: CvThequeContactViewWhereUniqueInput
  }

  /**
   * CvThequeContactView findFirst
   */
  export type CvThequeContactViewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContactView to fetch.
     */
    where?: CvThequeContactViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeContactViews to fetch.
     */
    orderBy?: CvThequeContactViewOrderByWithRelationInput | CvThequeContactViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeContactViews.
     */
    cursor?: CvThequeContactViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeContactViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeContactViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeContactViews.
     */
    distinct?: CvThequeContactViewScalarFieldEnum | CvThequeContactViewScalarFieldEnum[]
  }

  /**
   * CvThequeContactView findFirstOrThrow
   */
  export type CvThequeContactViewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContactView to fetch.
     */
    where?: CvThequeContactViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeContactViews to fetch.
     */
    orderBy?: CvThequeContactViewOrderByWithRelationInput | CvThequeContactViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CvThequeContactViews.
     */
    cursor?: CvThequeContactViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeContactViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeContactViews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CvThequeContactViews.
     */
    distinct?: CvThequeContactViewScalarFieldEnum | CvThequeContactViewScalarFieldEnum[]
  }

  /**
   * CvThequeContactView findMany
   */
  export type CvThequeContactViewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * Filter, which CvThequeContactViews to fetch.
     */
    where?: CvThequeContactViewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CvThequeContactViews to fetch.
     */
    orderBy?: CvThequeContactViewOrderByWithRelationInput | CvThequeContactViewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CvThequeContactViews.
     */
    cursor?: CvThequeContactViewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CvThequeContactViews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CvThequeContactViews.
     */
    skip?: number
    distinct?: CvThequeContactViewScalarFieldEnum | CvThequeContactViewScalarFieldEnum[]
  }

  /**
   * CvThequeContactView create
   */
  export type CvThequeContactViewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * The data needed to create a CvThequeContactView.
     */
    data: XOR<CvThequeContactViewCreateInput, CvThequeContactViewUncheckedCreateInput>
  }

  /**
   * CvThequeContactView createMany
   */
  export type CvThequeContactViewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CvThequeContactViews.
     */
    data: CvThequeContactViewCreateManyInput | CvThequeContactViewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CvThequeContactView createManyAndReturn
   */
  export type CvThequeContactViewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * The data used to create many CvThequeContactViews.
     */
    data: CvThequeContactViewCreateManyInput | CvThequeContactViewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeContactView update
   */
  export type CvThequeContactViewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * The data needed to update a CvThequeContactView.
     */
    data: XOR<CvThequeContactViewUpdateInput, CvThequeContactViewUncheckedUpdateInput>
    /**
     * Choose, which CvThequeContactView to update.
     */
    where: CvThequeContactViewWhereUniqueInput
  }

  /**
   * CvThequeContactView updateMany
   */
  export type CvThequeContactViewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CvThequeContactViews.
     */
    data: XOR<CvThequeContactViewUpdateManyMutationInput, CvThequeContactViewUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeContactViews to update
     */
    where?: CvThequeContactViewWhereInput
    /**
     * Limit how many CvThequeContactViews to update.
     */
    limit?: number
  }

  /**
   * CvThequeContactView updateManyAndReturn
   */
  export type CvThequeContactViewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * The data used to update CvThequeContactViews.
     */
    data: XOR<CvThequeContactViewUpdateManyMutationInput, CvThequeContactViewUncheckedUpdateManyInput>
    /**
     * Filter which CvThequeContactViews to update
     */
    where?: CvThequeContactViewWhereInput
    /**
     * Limit how many CvThequeContactViews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CvThequeContactView upsert
   */
  export type CvThequeContactViewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * The filter to search for the CvThequeContactView to update in case it exists.
     */
    where: CvThequeContactViewWhereUniqueInput
    /**
     * In case the CvThequeContactView found by the `where` argument doesn't exist, create a new CvThequeContactView with this data.
     */
    create: XOR<CvThequeContactViewCreateInput, CvThequeContactViewUncheckedCreateInput>
    /**
     * In case the CvThequeContactView was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CvThequeContactViewUpdateInput, CvThequeContactViewUncheckedUpdateInput>
  }

  /**
   * CvThequeContactView delete
   */
  export type CvThequeContactViewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
    /**
     * Filter which CvThequeContactView to delete.
     */
    where: CvThequeContactViewWhereUniqueInput
  }

  /**
   * CvThequeContactView deleteMany
   */
  export type CvThequeContactViewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CvThequeContactViews to delete
     */
    where?: CvThequeContactViewWhereInput
    /**
     * Limit how many CvThequeContactViews to delete.
     */
    limit?: number
  }

  /**
   * CvThequeContactView without action
   */
  export type CvThequeContactViewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CvThequeContactView
     */
    select?: CvThequeContactViewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CvThequeContactView
     */
    omit?: CvThequeContactViewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CvThequeContactViewInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    acceptConditions: 'acceptConditions',
    role: 'role',
    qualiCarriere: 'qualiCarriere',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const FileScalarFieldEnum: {
    id: 'id',
    name: 'name',
    originalName: 'originalName',
    extension: 'extension',
    usage: 'usage',
    userId: 'userId',
    cvMinuteId: 'cvMinuteId',
    sectionInfoId: 'sectionInfoId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FileScalarFieldEnum = (typeof FileScalarFieldEnum)[keyof typeof FileScalarFieldEnum]


  export const CvMinuteScalarFieldEnum: {
    id: 'id',
    name: 'name',
    position: 'position',
    primaryBg: 'primaryBg',
    secondaryBg: 'secondaryBg',
    tertiaryBg: 'tertiaryBg',
    visible: 'visible',
    qualiCarriereRef: 'qualiCarriereRef',
    generated: 'generated',
    score: 'score',
    userId: 'userId',
    cvThequeCritereId: 'cvThequeCritereId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CvMinuteScalarFieldEnum = (typeof CvMinuteScalarFieldEnum)[keyof typeof CvMinuteScalarFieldEnum]


  export const CvMinuteDomainScalarFieldEnum: {
    id: 'id',
    content: 'content',
    cvMinuteId: 'cvMinuteId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CvMinuteDomainScalarFieldEnum = (typeof CvMinuteDomainScalarFieldEnum)[keyof typeof CvMinuteDomainScalarFieldEnum]


  export const SectionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    editable: 'editable',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SectionScalarFieldEnum = (typeof SectionScalarFieldEnum)[keyof typeof SectionScalarFieldEnum]


  export const CvMinuteSectionScalarFieldEnum: {
    id: 'id',
    sectionOrder: 'sectionOrder',
    sectionTitle: 'sectionTitle',
    cvMinuteId: 'cvMinuteId',
    sectionId: 'sectionId'
  };

  export type CvMinuteSectionScalarFieldEnum = (typeof CvMinuteSectionScalarFieldEnum)[keyof typeof CvMinuteSectionScalarFieldEnum]


  export const SectionInfoScalarFieldEnum: {
    id: 'id',
    order: 'order',
    content: 'content',
    title: 'title',
    company: 'company',
    date: 'date',
    contrat: 'contrat',
    icon: 'icon',
    iconSize: 'iconSize',
    cvMinuteSectionId: 'cvMinuteSectionId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SectionInfoScalarFieldEnum = (typeof SectionInfoScalarFieldEnum)[keyof typeof SectionInfoScalarFieldEnum]


  export const AdviceScalarFieldEnum: {
    id: 'id',
    type: 'type',
    content: 'content',
    cvMinuteId: 'cvMinuteId',
    sectionInfoId: 'sectionInfoId',
    cvMinuteSectionId: 'cvMinuteSectionId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AdviceScalarFieldEnum = (typeof AdviceScalarFieldEnum)[keyof typeof AdviceScalarFieldEnum]


  export const EvaluationScalarFieldEnum: {
    id: 'id',
    initialScore: 'initialScore',
    actualScore: 'actualScore',
    content: 'content',
    weakContent: 'weakContent',
    cvMinuteId: 'cvMinuteId',
    sectionInfoId: 'sectionInfoId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EvaluationScalarFieldEnum = (typeof EvaluationScalarFieldEnum)[keyof typeof EvaluationScalarFieldEnum]


  export const OpenaiResponseScalarFieldEnum: {
    id: 'id',
    responseId: 'responseId',
    request: 'request',
    response: 'response',
    index: 'index',
    cvMinuteId: 'cvMinuteId',
    userId: 'userId',
    cvThequeCritereId: 'cvThequeCritereId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OpenaiResponseScalarFieldEnum = (typeof OpenaiResponseScalarFieldEnum)[keyof typeof OpenaiResponseScalarFieldEnum]


  export const QualiCarriereQuestionScalarFieldEnum: {
    id: 'id',
    order: 'order',
    content: 'content',
    sectionInfoId: 'sectionInfoId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type QualiCarriereQuestionScalarFieldEnum = (typeof QualiCarriereQuestionScalarFieldEnum)[keyof typeof QualiCarriereQuestionScalarFieldEnum]


  export const QualiCarriereResponseScalarFieldEnum: {
    id: 'id',
    content: 'content',
    questionId: 'questionId',
    sectionInfoId: 'sectionInfoId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type QualiCarriereResponseScalarFieldEnum = (typeof QualiCarriereResponseScalarFieldEnum)[keyof typeof QualiCarriereResponseScalarFieldEnum]


  export const QualiCarriereResumeScalarFieldEnum: {
    id: 'id',
    content: 'content',
    sectionInfoId: 'sectionInfoId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type QualiCarriereResumeScalarFieldEnum = (typeof QualiCarriereResumeScalarFieldEnum)[keyof typeof QualiCarriereResumeScalarFieldEnum]


  export const QualiCarriereCompetenceScalarFieldEnum: {
    id: 'id',
    content: 'content',
    sectionInfoId: 'sectionInfoId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type QualiCarriereCompetenceScalarFieldEnum = (typeof QualiCarriereCompetenceScalarFieldEnum)[keyof typeof QualiCarriereCompetenceScalarFieldEnum]


  export const QualiCarriereChatScalarFieldEnum: {
    id: 'id',
    role: 'role',
    content: 'content',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type QualiCarriereChatScalarFieldEnum = (typeof QualiCarriereChatScalarFieldEnum)[keyof typeof QualiCarriereChatScalarFieldEnum]


  export const CvThequeCritereScalarFieldEnum: {
    id: 'id',
    position: 'position',
    domain: 'domain',
    description: 'description',
    diplome: 'diplome',
    localisation: 'localisation',
    distance: 'distance',
    experience: 'experience',
    evaluation: 'evaluation',
    saved: 'saved',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CvThequeCritereScalarFieldEnum = (typeof CvThequeCritereScalarFieldEnum)[keyof typeof CvThequeCritereScalarFieldEnum]


  export const CvThequeCompetenceScalarFieldEnum: {
    id: 'id',
    content: 'content',
    cvThequeCritereId: 'cvThequeCritereId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CvThequeCompetenceScalarFieldEnum = (typeof CvThequeCompetenceScalarFieldEnum)[keyof typeof CvThequeCompetenceScalarFieldEnum]


  export const CvThequeViewScalarFieldEnum: {
    id: 'id',
    count: 'count',
    cvMinuteId: 'cvMinuteId',
    cvThequeCritereId: 'cvThequeCritereId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CvThequeViewScalarFieldEnum = (typeof CvThequeViewScalarFieldEnum)[keyof typeof CvThequeViewScalarFieldEnum]


  export const CvThequeUserScalarFieldEnum: {
    id: 'id',
    score: 'score',
    userId: 'userId',
    cvThequeCritereId: 'cvThequeCritereId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CvThequeUserScalarFieldEnum = (typeof CvThequeUserScalarFieldEnum)[keyof typeof CvThequeUserScalarFieldEnum]


  export const CvThequeContactScalarFieldEnum: {
    id: 'id',
    type: 'type',
    date: 'date',
    hour: 'hour',
    minute: 'minute',
    message: 'message',
    status: 'status',
    userId: 'userId',
    recruiterId: 'recruiterId',
    cvMinuteId: 'cvMinuteId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CvThequeContactScalarFieldEnum = (typeof CvThequeContactScalarFieldEnum)[keyof typeof CvThequeContactScalarFieldEnum]


  export const CvThequeContactViewScalarFieldEnum: {
    id: 'id',
    count: 'count',
    userId: 'userId',
    cvThequeContactId: 'cvThequeContactId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CvThequeContactViewScalarFieldEnum = (typeof CvThequeContactViewScalarFieldEnum)[keyof typeof CvThequeContactViewScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    acceptConditions?: BoolFilter<"User"> | boolean
    role?: StringFilter<"User"> | string
    qualiCarriere?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    files?: FileListRelationFilter
    cvMinutes?: CvMinuteListRelationFilter
    cvMinuteDomains?: CvMinuteDomainListRelationFilter
    qualiCarriereQuestions?: QualiCarriereQuestionListRelationFilter
    qualiCarriereResponses?: QualiCarriereResponseListRelationFilter
    openaiResponses?: OpenaiResponseListRelationFilter
    qualiCarriereChat?: QualiCarriereChatListRelationFilter
    qualiCarriereResumes?: QualiCarriereResumeListRelationFilter
    qualiCarriereCompetences?: QualiCarriereCompetenceListRelationFilter
    cvThequeCriteres?: CvThequeCritereListRelationFilter
    cvThequeUsers?: CvThequeUserListRelationFilter
    userCvThequeContacts?: CvThequeContactListRelationFilter
    recruiterCvThequeContacts?: CvThequeContactListRelationFilter
    cvThequeContactViews?: CvThequeContactViewListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    acceptConditions?: SortOrder
    role?: SortOrder
    qualiCarriere?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    files?: FileOrderByRelationAggregateInput
    cvMinutes?: CvMinuteOrderByRelationAggregateInput
    cvMinuteDomains?: CvMinuteDomainOrderByRelationAggregateInput
    qualiCarriereQuestions?: QualiCarriereQuestionOrderByRelationAggregateInput
    qualiCarriereResponses?: QualiCarriereResponseOrderByRelationAggregateInput
    openaiResponses?: OpenaiResponseOrderByRelationAggregateInput
    qualiCarriereChat?: QualiCarriereChatOrderByRelationAggregateInput
    qualiCarriereResumes?: QualiCarriereResumeOrderByRelationAggregateInput
    qualiCarriereCompetences?: QualiCarriereCompetenceOrderByRelationAggregateInput
    cvThequeCriteres?: CvThequeCritereOrderByRelationAggregateInput
    cvThequeUsers?: CvThequeUserOrderByRelationAggregateInput
    userCvThequeContacts?: CvThequeContactOrderByRelationAggregateInput
    recruiterCvThequeContacts?: CvThequeContactOrderByRelationAggregateInput
    cvThequeContactViews?: CvThequeContactViewOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    acceptConditions?: BoolFilter<"User"> | boolean
    role?: StringFilter<"User"> | string
    qualiCarriere?: StringFilter<"User"> | string
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    files?: FileListRelationFilter
    cvMinutes?: CvMinuteListRelationFilter
    cvMinuteDomains?: CvMinuteDomainListRelationFilter
    qualiCarriereQuestions?: QualiCarriereQuestionListRelationFilter
    qualiCarriereResponses?: QualiCarriereResponseListRelationFilter
    openaiResponses?: OpenaiResponseListRelationFilter
    qualiCarriereChat?: QualiCarriereChatListRelationFilter
    qualiCarriereResumes?: QualiCarriereResumeListRelationFilter
    qualiCarriereCompetences?: QualiCarriereCompetenceListRelationFilter
    cvThequeCriteres?: CvThequeCritereListRelationFilter
    cvThequeUsers?: CvThequeUserListRelationFilter
    userCvThequeContacts?: CvThequeContactListRelationFilter
    recruiterCvThequeContacts?: CvThequeContactListRelationFilter
    cvThequeContactViews?: CvThequeContactViewListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    acceptConditions?: SortOrder
    role?: SortOrder
    qualiCarriere?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    acceptConditions?: BoolWithAggregatesFilter<"User"> | boolean
    role?: StringWithAggregatesFilter<"User"> | string
    qualiCarriere?: StringWithAggregatesFilter<"User"> | string
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type FileWhereInput = {
    AND?: FileWhereInput | FileWhereInput[]
    OR?: FileWhereInput[]
    NOT?: FileWhereInput | FileWhereInput[]
    id?: IntFilter<"File"> | number
    name?: StringFilter<"File"> | string
    originalName?: StringFilter<"File"> | string
    extension?: StringFilter<"File"> | string
    usage?: StringFilter<"File"> | string
    userId?: IntFilter<"File"> | number
    cvMinuteId?: IntNullableFilter<"File"> | number | null
    sectionInfoId?: IntNullableFilter<"File"> | number | null
    createdAt?: DateTimeFilter<"File"> | Date | string
    updatedAt?: DateTimeFilter<"File"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvMinute?: XOR<CvMinuteNullableScalarRelationFilter, CvMinuteWhereInput> | null
    sectionInfo?: XOR<SectionInfoNullableScalarRelationFilter, SectionInfoWhereInput> | null
  }

  export type FileOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    originalName?: SortOrder
    extension?: SortOrder
    usage?: SortOrder
    userId?: SortOrder
    cvMinuteId?: SortOrderInput | SortOrder
    sectionInfoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    cvMinute?: CvMinuteOrderByWithRelationInput
    sectionInfo?: SectionInfoOrderByWithRelationInput
  }

  export type FileWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sectionInfoId?: number
    AND?: FileWhereInput | FileWhereInput[]
    OR?: FileWhereInput[]
    NOT?: FileWhereInput | FileWhereInput[]
    name?: StringFilter<"File"> | string
    originalName?: StringFilter<"File"> | string
    extension?: StringFilter<"File"> | string
    usage?: StringFilter<"File"> | string
    userId?: IntFilter<"File"> | number
    cvMinuteId?: IntNullableFilter<"File"> | number | null
    createdAt?: DateTimeFilter<"File"> | Date | string
    updatedAt?: DateTimeFilter<"File"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvMinute?: XOR<CvMinuteNullableScalarRelationFilter, CvMinuteWhereInput> | null
    sectionInfo?: XOR<SectionInfoNullableScalarRelationFilter, SectionInfoWhereInput> | null
  }, "id" | "sectionInfoId">

  export type FileOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    originalName?: SortOrder
    extension?: SortOrder
    usage?: SortOrder
    userId?: SortOrder
    cvMinuteId?: SortOrderInput | SortOrder
    sectionInfoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FileCountOrderByAggregateInput
    _avg?: FileAvgOrderByAggregateInput
    _max?: FileMaxOrderByAggregateInput
    _min?: FileMinOrderByAggregateInput
    _sum?: FileSumOrderByAggregateInput
  }

  export type FileScalarWhereWithAggregatesInput = {
    AND?: FileScalarWhereWithAggregatesInput | FileScalarWhereWithAggregatesInput[]
    OR?: FileScalarWhereWithAggregatesInput[]
    NOT?: FileScalarWhereWithAggregatesInput | FileScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"File"> | number
    name?: StringWithAggregatesFilter<"File"> | string
    originalName?: StringWithAggregatesFilter<"File"> | string
    extension?: StringWithAggregatesFilter<"File"> | string
    usage?: StringWithAggregatesFilter<"File"> | string
    userId?: IntWithAggregatesFilter<"File"> | number
    cvMinuteId?: IntNullableWithAggregatesFilter<"File"> | number | null
    sectionInfoId?: IntNullableWithAggregatesFilter<"File"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"File"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"File"> | Date | string
  }

  export type CvMinuteWhereInput = {
    AND?: CvMinuteWhereInput | CvMinuteWhereInput[]
    OR?: CvMinuteWhereInput[]
    NOT?: CvMinuteWhereInput | CvMinuteWhereInput[]
    id?: IntFilter<"CvMinute"> | number
    name?: StringFilter<"CvMinute"> | string
    position?: StringFilter<"CvMinute"> | string
    primaryBg?: StringFilter<"CvMinute"> | string
    secondaryBg?: StringFilter<"CvMinute"> | string
    tertiaryBg?: StringFilter<"CvMinute"> | string
    visible?: BoolFilter<"CvMinute"> | boolean
    qualiCarriereRef?: BoolFilter<"CvMinute"> | boolean
    generated?: StringNullableFilter<"CvMinute"> | string | null
    score?: IntFilter<"CvMinute"> | number
    userId?: IntFilter<"CvMinute"> | number
    cvThequeCritereId?: IntNullableFilter<"CvMinute"> | number | null
    createdAt?: DateTimeFilter<"CvMinute"> | Date | string
    updatedAt?: DateTimeFilter<"CvMinute"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvThequeCritere?: XOR<CvThequeCritereNullableScalarRelationFilter, CvThequeCritereWhereInput> | null
    files?: FileListRelationFilter
    advices?: AdviceListRelationFilter
    cvMinuteSections?: CvMinuteSectionListRelationFilter
    openaiResponses?: OpenaiResponseListRelationFilter
    evaluation?: XOR<EvaluationNullableScalarRelationFilter, EvaluationWhereInput> | null
    cvThequeViews?: CvThequeViewListRelationFilter
    cvMinuteDomains?: CvMinuteDomainListRelationFilter
    cvThequeContacts?: CvThequeContactListRelationFilter
  }

  export type CvMinuteOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    primaryBg?: SortOrder
    secondaryBg?: SortOrder
    tertiaryBg?: SortOrder
    visible?: SortOrder
    qualiCarriereRef?: SortOrder
    generated?: SortOrderInput | SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    cvThequeCritere?: CvThequeCritereOrderByWithRelationInput
    files?: FileOrderByRelationAggregateInput
    advices?: AdviceOrderByRelationAggregateInput
    cvMinuteSections?: CvMinuteSectionOrderByRelationAggregateInput
    openaiResponses?: OpenaiResponseOrderByRelationAggregateInput
    evaluation?: EvaluationOrderByWithRelationInput
    cvThequeViews?: CvThequeViewOrderByRelationAggregateInput
    cvMinuteDomains?: CvMinuteDomainOrderByRelationAggregateInput
    cvThequeContacts?: CvThequeContactOrderByRelationAggregateInput
  }

  export type CvMinuteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CvMinuteWhereInput | CvMinuteWhereInput[]
    OR?: CvMinuteWhereInput[]
    NOT?: CvMinuteWhereInput | CvMinuteWhereInput[]
    name?: StringFilter<"CvMinute"> | string
    position?: StringFilter<"CvMinute"> | string
    primaryBg?: StringFilter<"CvMinute"> | string
    secondaryBg?: StringFilter<"CvMinute"> | string
    tertiaryBg?: StringFilter<"CvMinute"> | string
    visible?: BoolFilter<"CvMinute"> | boolean
    qualiCarriereRef?: BoolFilter<"CvMinute"> | boolean
    generated?: StringNullableFilter<"CvMinute"> | string | null
    score?: IntFilter<"CvMinute"> | number
    userId?: IntFilter<"CvMinute"> | number
    cvThequeCritereId?: IntNullableFilter<"CvMinute"> | number | null
    createdAt?: DateTimeFilter<"CvMinute"> | Date | string
    updatedAt?: DateTimeFilter<"CvMinute"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvThequeCritere?: XOR<CvThequeCritereNullableScalarRelationFilter, CvThequeCritereWhereInput> | null
    files?: FileListRelationFilter
    advices?: AdviceListRelationFilter
    cvMinuteSections?: CvMinuteSectionListRelationFilter
    openaiResponses?: OpenaiResponseListRelationFilter
    evaluation?: XOR<EvaluationNullableScalarRelationFilter, EvaluationWhereInput> | null
    cvThequeViews?: CvThequeViewListRelationFilter
    cvMinuteDomains?: CvMinuteDomainListRelationFilter
    cvThequeContacts?: CvThequeContactListRelationFilter
  }, "id">

  export type CvMinuteOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    primaryBg?: SortOrder
    secondaryBg?: SortOrder
    tertiaryBg?: SortOrder
    visible?: SortOrder
    qualiCarriereRef?: SortOrder
    generated?: SortOrderInput | SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CvMinuteCountOrderByAggregateInput
    _avg?: CvMinuteAvgOrderByAggregateInput
    _max?: CvMinuteMaxOrderByAggregateInput
    _min?: CvMinuteMinOrderByAggregateInput
    _sum?: CvMinuteSumOrderByAggregateInput
  }

  export type CvMinuteScalarWhereWithAggregatesInput = {
    AND?: CvMinuteScalarWhereWithAggregatesInput | CvMinuteScalarWhereWithAggregatesInput[]
    OR?: CvMinuteScalarWhereWithAggregatesInput[]
    NOT?: CvMinuteScalarWhereWithAggregatesInput | CvMinuteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvMinute"> | number
    name?: StringWithAggregatesFilter<"CvMinute"> | string
    position?: StringWithAggregatesFilter<"CvMinute"> | string
    primaryBg?: StringWithAggregatesFilter<"CvMinute"> | string
    secondaryBg?: StringWithAggregatesFilter<"CvMinute"> | string
    tertiaryBg?: StringWithAggregatesFilter<"CvMinute"> | string
    visible?: BoolWithAggregatesFilter<"CvMinute"> | boolean
    qualiCarriereRef?: BoolWithAggregatesFilter<"CvMinute"> | boolean
    generated?: StringNullableWithAggregatesFilter<"CvMinute"> | string | null
    score?: IntWithAggregatesFilter<"CvMinute"> | number
    userId?: IntWithAggregatesFilter<"CvMinute"> | number
    cvThequeCritereId?: IntNullableWithAggregatesFilter<"CvMinute"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"CvMinute"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CvMinute"> | Date | string
  }

  export type CvMinuteDomainWhereInput = {
    AND?: CvMinuteDomainWhereInput | CvMinuteDomainWhereInput[]
    OR?: CvMinuteDomainWhereInput[]
    NOT?: CvMinuteDomainWhereInput | CvMinuteDomainWhereInput[]
    id?: IntFilter<"CvMinuteDomain"> | number
    content?: StringFilter<"CvMinuteDomain"> | string
    cvMinuteId?: IntFilter<"CvMinuteDomain"> | number
    userId?: IntFilter<"CvMinuteDomain"> | number
    createdAt?: DateTimeFilter<"CvMinuteDomain"> | Date | string
    updatedAt?: DateTimeFilter<"CvMinuteDomain"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvMinute?: XOR<CvMinuteScalarRelationFilter, CvMinuteWhereInput>
  }

  export type CvMinuteDomainOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    cvMinute?: CvMinuteOrderByWithRelationInput
  }

  export type CvMinuteDomainWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CvMinuteDomainWhereInput | CvMinuteDomainWhereInput[]
    OR?: CvMinuteDomainWhereInput[]
    NOT?: CvMinuteDomainWhereInput | CvMinuteDomainWhereInput[]
    content?: StringFilter<"CvMinuteDomain"> | string
    cvMinuteId?: IntFilter<"CvMinuteDomain"> | number
    userId?: IntFilter<"CvMinuteDomain"> | number
    createdAt?: DateTimeFilter<"CvMinuteDomain"> | Date | string
    updatedAt?: DateTimeFilter<"CvMinuteDomain"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvMinute?: XOR<CvMinuteScalarRelationFilter, CvMinuteWhereInput>
  }, "id">

  export type CvMinuteDomainOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CvMinuteDomainCountOrderByAggregateInput
    _avg?: CvMinuteDomainAvgOrderByAggregateInput
    _max?: CvMinuteDomainMaxOrderByAggregateInput
    _min?: CvMinuteDomainMinOrderByAggregateInput
    _sum?: CvMinuteDomainSumOrderByAggregateInput
  }

  export type CvMinuteDomainScalarWhereWithAggregatesInput = {
    AND?: CvMinuteDomainScalarWhereWithAggregatesInput | CvMinuteDomainScalarWhereWithAggregatesInput[]
    OR?: CvMinuteDomainScalarWhereWithAggregatesInput[]
    NOT?: CvMinuteDomainScalarWhereWithAggregatesInput | CvMinuteDomainScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvMinuteDomain"> | number
    content?: StringWithAggregatesFilter<"CvMinuteDomain"> | string
    cvMinuteId?: IntWithAggregatesFilter<"CvMinuteDomain"> | number
    userId?: IntWithAggregatesFilter<"CvMinuteDomain"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CvMinuteDomain"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CvMinuteDomain"> | Date | string
  }

  export type SectionWhereInput = {
    AND?: SectionWhereInput | SectionWhereInput[]
    OR?: SectionWhereInput[]
    NOT?: SectionWhereInput | SectionWhereInput[]
    id?: IntFilter<"Section"> | number
    name?: StringFilter<"Section"> | string
    editable?: BoolFilter<"Section"> | boolean
    createdAt?: DateTimeFilter<"Section"> | Date | string
    updatedAt?: DateTimeFilter<"Section"> | Date | string
    cvMinuteSections?: CvMinuteSectionListRelationFilter
  }

  export type SectionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    editable?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cvMinuteSections?: CvMinuteSectionOrderByRelationAggregateInput
  }

  export type SectionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: SectionWhereInput | SectionWhereInput[]
    OR?: SectionWhereInput[]
    NOT?: SectionWhereInput | SectionWhereInput[]
    editable?: BoolFilter<"Section"> | boolean
    createdAt?: DateTimeFilter<"Section"> | Date | string
    updatedAt?: DateTimeFilter<"Section"> | Date | string
    cvMinuteSections?: CvMinuteSectionListRelationFilter
  }, "id" | "name">

  export type SectionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    editable?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SectionCountOrderByAggregateInput
    _avg?: SectionAvgOrderByAggregateInput
    _max?: SectionMaxOrderByAggregateInput
    _min?: SectionMinOrderByAggregateInput
    _sum?: SectionSumOrderByAggregateInput
  }

  export type SectionScalarWhereWithAggregatesInput = {
    AND?: SectionScalarWhereWithAggregatesInput | SectionScalarWhereWithAggregatesInput[]
    OR?: SectionScalarWhereWithAggregatesInput[]
    NOT?: SectionScalarWhereWithAggregatesInput | SectionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Section"> | number
    name?: StringWithAggregatesFilter<"Section"> | string
    editable?: BoolWithAggregatesFilter<"Section"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Section"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Section"> | Date | string
  }

  export type CvMinuteSectionWhereInput = {
    AND?: CvMinuteSectionWhereInput | CvMinuteSectionWhereInput[]
    OR?: CvMinuteSectionWhereInput[]
    NOT?: CvMinuteSectionWhereInput | CvMinuteSectionWhereInput[]
    id?: IntFilter<"CvMinuteSection"> | number
    sectionOrder?: IntNullableFilter<"CvMinuteSection"> | number | null
    sectionTitle?: StringNullableFilter<"CvMinuteSection"> | string | null
    cvMinuteId?: IntFilter<"CvMinuteSection"> | number
    sectionId?: IntFilter<"CvMinuteSection"> | number
    cvMinute?: XOR<CvMinuteScalarRelationFilter, CvMinuteWhereInput>
    section?: XOR<SectionScalarRelationFilter, SectionWhereInput>
    advices?: AdviceListRelationFilter
    sectionInfos?: SectionInfoListRelationFilter
  }

  export type CvMinuteSectionOrderByWithRelationInput = {
    id?: SortOrder
    sectionOrder?: SortOrderInput | SortOrder
    sectionTitle?: SortOrderInput | SortOrder
    cvMinuteId?: SortOrder
    sectionId?: SortOrder
    cvMinute?: CvMinuteOrderByWithRelationInput
    section?: SectionOrderByWithRelationInput
    advices?: AdviceOrderByRelationAggregateInput
    sectionInfos?: SectionInfoOrderByRelationAggregateInput
  }

  export type CvMinuteSectionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cvMinuteId_sectionId?: CvMinuteSectionCvMinuteIdSectionIdCompoundUniqueInput
    AND?: CvMinuteSectionWhereInput | CvMinuteSectionWhereInput[]
    OR?: CvMinuteSectionWhereInput[]
    NOT?: CvMinuteSectionWhereInput | CvMinuteSectionWhereInput[]
    sectionOrder?: IntNullableFilter<"CvMinuteSection"> | number | null
    sectionTitle?: StringNullableFilter<"CvMinuteSection"> | string | null
    cvMinuteId?: IntFilter<"CvMinuteSection"> | number
    sectionId?: IntFilter<"CvMinuteSection"> | number
    cvMinute?: XOR<CvMinuteScalarRelationFilter, CvMinuteWhereInput>
    section?: XOR<SectionScalarRelationFilter, SectionWhereInput>
    advices?: AdviceListRelationFilter
    sectionInfos?: SectionInfoListRelationFilter
  }, "id" | "cvMinuteId_sectionId">

  export type CvMinuteSectionOrderByWithAggregationInput = {
    id?: SortOrder
    sectionOrder?: SortOrderInput | SortOrder
    sectionTitle?: SortOrderInput | SortOrder
    cvMinuteId?: SortOrder
    sectionId?: SortOrder
    _count?: CvMinuteSectionCountOrderByAggregateInput
    _avg?: CvMinuteSectionAvgOrderByAggregateInput
    _max?: CvMinuteSectionMaxOrderByAggregateInput
    _min?: CvMinuteSectionMinOrderByAggregateInput
    _sum?: CvMinuteSectionSumOrderByAggregateInput
  }

  export type CvMinuteSectionScalarWhereWithAggregatesInput = {
    AND?: CvMinuteSectionScalarWhereWithAggregatesInput | CvMinuteSectionScalarWhereWithAggregatesInput[]
    OR?: CvMinuteSectionScalarWhereWithAggregatesInput[]
    NOT?: CvMinuteSectionScalarWhereWithAggregatesInput | CvMinuteSectionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvMinuteSection"> | number
    sectionOrder?: IntNullableWithAggregatesFilter<"CvMinuteSection"> | number | null
    sectionTitle?: StringNullableWithAggregatesFilter<"CvMinuteSection"> | string | null
    cvMinuteId?: IntWithAggregatesFilter<"CvMinuteSection"> | number
    sectionId?: IntWithAggregatesFilter<"CvMinuteSection"> | number
  }

  export type SectionInfoWhereInput = {
    AND?: SectionInfoWhereInput | SectionInfoWhereInput[]
    OR?: SectionInfoWhereInput[]
    NOT?: SectionInfoWhereInput | SectionInfoWhereInput[]
    id?: IntFilter<"SectionInfo"> | number
    order?: IntNullableFilter<"SectionInfo"> | number | null
    content?: StringFilter<"SectionInfo"> | string
    title?: StringNullableFilter<"SectionInfo"> | string | null
    company?: StringNullableFilter<"SectionInfo"> | string | null
    date?: StringNullableFilter<"SectionInfo"> | string | null
    contrat?: StringNullableFilter<"SectionInfo"> | string | null
    icon?: StringNullableFilter<"SectionInfo"> | string | null
    iconSize?: IntNullableFilter<"SectionInfo"> | number | null
    cvMinuteSectionId?: IntFilter<"SectionInfo"> | number
    createdAt?: DateTimeFilter<"SectionInfo"> | Date | string
    updatedAt?: DateTimeFilter<"SectionInfo"> | Date | string
    file?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    advices?: AdviceListRelationFilter
    evaluation?: XOR<EvaluationNullableScalarRelationFilter, EvaluationWhereInput> | null
    cvMinuteSection?: XOR<CvMinuteSectionScalarRelationFilter, CvMinuteSectionWhereInput>
    qualiCarriereQuestions?: QualiCarriereQuestionListRelationFilter
    qualiCarriereResponses?: QualiCarriereResponseListRelationFilter
    qualiCarriereResumes?: QualiCarriereResumeListRelationFilter
    qualiCarriereCompetences?: QualiCarriereCompetenceListRelationFilter
  }

  export type SectionInfoOrderByWithRelationInput = {
    id?: SortOrder
    order?: SortOrderInput | SortOrder
    content?: SortOrder
    title?: SortOrderInput | SortOrder
    company?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    contrat?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    iconSize?: SortOrderInput | SortOrder
    cvMinuteSectionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    file?: FileOrderByWithRelationInput
    advices?: AdviceOrderByRelationAggregateInput
    evaluation?: EvaluationOrderByWithRelationInput
    cvMinuteSection?: CvMinuteSectionOrderByWithRelationInput
    qualiCarriereQuestions?: QualiCarriereQuestionOrderByRelationAggregateInput
    qualiCarriereResponses?: QualiCarriereResponseOrderByRelationAggregateInput
    qualiCarriereResumes?: QualiCarriereResumeOrderByRelationAggregateInput
    qualiCarriereCompetences?: QualiCarriereCompetenceOrderByRelationAggregateInput
  }

  export type SectionInfoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SectionInfoWhereInput | SectionInfoWhereInput[]
    OR?: SectionInfoWhereInput[]
    NOT?: SectionInfoWhereInput | SectionInfoWhereInput[]
    order?: IntNullableFilter<"SectionInfo"> | number | null
    content?: StringFilter<"SectionInfo"> | string
    title?: StringNullableFilter<"SectionInfo"> | string | null
    company?: StringNullableFilter<"SectionInfo"> | string | null
    date?: StringNullableFilter<"SectionInfo"> | string | null
    contrat?: StringNullableFilter<"SectionInfo"> | string | null
    icon?: StringNullableFilter<"SectionInfo"> | string | null
    iconSize?: IntNullableFilter<"SectionInfo"> | number | null
    cvMinuteSectionId?: IntFilter<"SectionInfo"> | number
    createdAt?: DateTimeFilter<"SectionInfo"> | Date | string
    updatedAt?: DateTimeFilter<"SectionInfo"> | Date | string
    file?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    advices?: AdviceListRelationFilter
    evaluation?: XOR<EvaluationNullableScalarRelationFilter, EvaluationWhereInput> | null
    cvMinuteSection?: XOR<CvMinuteSectionScalarRelationFilter, CvMinuteSectionWhereInput>
    qualiCarriereQuestions?: QualiCarriereQuestionListRelationFilter
    qualiCarriereResponses?: QualiCarriereResponseListRelationFilter
    qualiCarriereResumes?: QualiCarriereResumeListRelationFilter
    qualiCarriereCompetences?: QualiCarriereCompetenceListRelationFilter
  }, "id">

  export type SectionInfoOrderByWithAggregationInput = {
    id?: SortOrder
    order?: SortOrderInput | SortOrder
    content?: SortOrder
    title?: SortOrderInput | SortOrder
    company?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    contrat?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    iconSize?: SortOrderInput | SortOrder
    cvMinuteSectionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SectionInfoCountOrderByAggregateInput
    _avg?: SectionInfoAvgOrderByAggregateInput
    _max?: SectionInfoMaxOrderByAggregateInput
    _min?: SectionInfoMinOrderByAggregateInput
    _sum?: SectionInfoSumOrderByAggregateInput
  }

  export type SectionInfoScalarWhereWithAggregatesInput = {
    AND?: SectionInfoScalarWhereWithAggregatesInput | SectionInfoScalarWhereWithAggregatesInput[]
    OR?: SectionInfoScalarWhereWithAggregatesInput[]
    NOT?: SectionInfoScalarWhereWithAggregatesInput | SectionInfoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SectionInfo"> | number
    order?: IntNullableWithAggregatesFilter<"SectionInfo"> | number | null
    content?: StringWithAggregatesFilter<"SectionInfo"> | string
    title?: StringNullableWithAggregatesFilter<"SectionInfo"> | string | null
    company?: StringNullableWithAggregatesFilter<"SectionInfo"> | string | null
    date?: StringNullableWithAggregatesFilter<"SectionInfo"> | string | null
    contrat?: StringNullableWithAggregatesFilter<"SectionInfo"> | string | null
    icon?: StringNullableWithAggregatesFilter<"SectionInfo"> | string | null
    iconSize?: IntNullableWithAggregatesFilter<"SectionInfo"> | number | null
    cvMinuteSectionId?: IntWithAggregatesFilter<"SectionInfo"> | number
    createdAt?: DateTimeWithAggregatesFilter<"SectionInfo"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SectionInfo"> | Date | string
  }

  export type AdviceWhereInput = {
    AND?: AdviceWhereInput | AdviceWhereInput[]
    OR?: AdviceWhereInput[]
    NOT?: AdviceWhereInput | AdviceWhereInput[]
    id?: IntFilter<"Advice"> | number
    type?: StringFilter<"Advice"> | string
    content?: StringFilter<"Advice"> | string
    cvMinuteId?: IntNullableFilter<"Advice"> | number | null
    sectionInfoId?: IntNullableFilter<"Advice"> | number | null
    cvMinuteSectionId?: IntNullableFilter<"Advice"> | number | null
    createdAt?: DateTimeFilter<"Advice"> | Date | string
    updatedAt?: DateTimeFilter<"Advice"> | Date | string
    cvMinute?: XOR<CvMinuteNullableScalarRelationFilter, CvMinuteWhereInput> | null
    sectionInfo?: XOR<SectionInfoNullableScalarRelationFilter, SectionInfoWhereInput> | null
    cvMinuteSection?: XOR<CvMinuteSectionNullableScalarRelationFilter, CvMinuteSectionWhereInput> | null
  }

  export type AdviceOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrderInput | SortOrder
    sectionInfoId?: SortOrderInput | SortOrder
    cvMinuteSectionId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cvMinute?: CvMinuteOrderByWithRelationInput
    sectionInfo?: SectionInfoOrderByWithRelationInput
    cvMinuteSection?: CvMinuteSectionOrderByWithRelationInput
  }

  export type AdviceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AdviceWhereInput | AdviceWhereInput[]
    OR?: AdviceWhereInput[]
    NOT?: AdviceWhereInput | AdviceWhereInput[]
    type?: StringFilter<"Advice"> | string
    content?: StringFilter<"Advice"> | string
    cvMinuteId?: IntNullableFilter<"Advice"> | number | null
    sectionInfoId?: IntNullableFilter<"Advice"> | number | null
    cvMinuteSectionId?: IntNullableFilter<"Advice"> | number | null
    createdAt?: DateTimeFilter<"Advice"> | Date | string
    updatedAt?: DateTimeFilter<"Advice"> | Date | string
    cvMinute?: XOR<CvMinuteNullableScalarRelationFilter, CvMinuteWhereInput> | null
    sectionInfo?: XOR<SectionInfoNullableScalarRelationFilter, SectionInfoWhereInput> | null
    cvMinuteSection?: XOR<CvMinuteSectionNullableScalarRelationFilter, CvMinuteSectionWhereInput> | null
  }, "id">

  export type AdviceOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrderInput | SortOrder
    sectionInfoId?: SortOrderInput | SortOrder
    cvMinuteSectionId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AdviceCountOrderByAggregateInput
    _avg?: AdviceAvgOrderByAggregateInput
    _max?: AdviceMaxOrderByAggregateInput
    _min?: AdviceMinOrderByAggregateInput
    _sum?: AdviceSumOrderByAggregateInput
  }

  export type AdviceScalarWhereWithAggregatesInput = {
    AND?: AdviceScalarWhereWithAggregatesInput | AdviceScalarWhereWithAggregatesInput[]
    OR?: AdviceScalarWhereWithAggregatesInput[]
    NOT?: AdviceScalarWhereWithAggregatesInput | AdviceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Advice"> | number
    type?: StringWithAggregatesFilter<"Advice"> | string
    content?: StringWithAggregatesFilter<"Advice"> | string
    cvMinuteId?: IntNullableWithAggregatesFilter<"Advice"> | number | null
    sectionInfoId?: IntNullableWithAggregatesFilter<"Advice"> | number | null
    cvMinuteSectionId?: IntNullableWithAggregatesFilter<"Advice"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Advice"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Advice"> | Date | string
  }

  export type EvaluationWhereInput = {
    AND?: EvaluationWhereInput | EvaluationWhereInput[]
    OR?: EvaluationWhereInput[]
    NOT?: EvaluationWhereInput | EvaluationWhereInput[]
    id?: IntFilter<"Evaluation"> | number
    initialScore?: IntFilter<"Evaluation"> | number
    actualScore?: IntNullableFilter<"Evaluation"> | number | null
    content?: StringFilter<"Evaluation"> | string
    weakContent?: StringNullableFilter<"Evaluation"> | string | null
    cvMinuteId?: IntNullableFilter<"Evaluation"> | number | null
    sectionInfoId?: IntNullableFilter<"Evaluation"> | number | null
    createdAt?: DateTimeFilter<"Evaluation"> | Date | string
    updatedAt?: DateTimeFilter<"Evaluation"> | Date | string
    cvMinute?: XOR<CvMinuteNullableScalarRelationFilter, CvMinuteWhereInput> | null
    sectionInfo?: XOR<SectionInfoNullableScalarRelationFilter, SectionInfoWhereInput> | null
  }

  export type EvaluationOrderByWithRelationInput = {
    id?: SortOrder
    initialScore?: SortOrder
    actualScore?: SortOrderInput | SortOrder
    content?: SortOrder
    weakContent?: SortOrderInput | SortOrder
    cvMinuteId?: SortOrderInput | SortOrder
    sectionInfoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cvMinute?: CvMinuteOrderByWithRelationInput
    sectionInfo?: SectionInfoOrderByWithRelationInput
  }

  export type EvaluationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cvMinuteId?: number
    sectionInfoId?: number
    AND?: EvaluationWhereInput | EvaluationWhereInput[]
    OR?: EvaluationWhereInput[]
    NOT?: EvaluationWhereInput | EvaluationWhereInput[]
    initialScore?: IntFilter<"Evaluation"> | number
    actualScore?: IntNullableFilter<"Evaluation"> | number | null
    content?: StringFilter<"Evaluation"> | string
    weakContent?: StringNullableFilter<"Evaluation"> | string | null
    createdAt?: DateTimeFilter<"Evaluation"> | Date | string
    updatedAt?: DateTimeFilter<"Evaluation"> | Date | string
    cvMinute?: XOR<CvMinuteNullableScalarRelationFilter, CvMinuteWhereInput> | null
    sectionInfo?: XOR<SectionInfoNullableScalarRelationFilter, SectionInfoWhereInput> | null
  }, "id" | "cvMinuteId" | "sectionInfoId">

  export type EvaluationOrderByWithAggregationInput = {
    id?: SortOrder
    initialScore?: SortOrder
    actualScore?: SortOrderInput | SortOrder
    content?: SortOrder
    weakContent?: SortOrderInput | SortOrder
    cvMinuteId?: SortOrderInput | SortOrder
    sectionInfoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EvaluationCountOrderByAggregateInput
    _avg?: EvaluationAvgOrderByAggregateInput
    _max?: EvaluationMaxOrderByAggregateInput
    _min?: EvaluationMinOrderByAggregateInput
    _sum?: EvaluationSumOrderByAggregateInput
  }

  export type EvaluationScalarWhereWithAggregatesInput = {
    AND?: EvaluationScalarWhereWithAggregatesInput | EvaluationScalarWhereWithAggregatesInput[]
    OR?: EvaluationScalarWhereWithAggregatesInput[]
    NOT?: EvaluationScalarWhereWithAggregatesInput | EvaluationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Evaluation"> | number
    initialScore?: IntWithAggregatesFilter<"Evaluation"> | number
    actualScore?: IntNullableWithAggregatesFilter<"Evaluation"> | number | null
    content?: StringWithAggregatesFilter<"Evaluation"> | string
    weakContent?: StringNullableWithAggregatesFilter<"Evaluation"> | string | null
    cvMinuteId?: IntNullableWithAggregatesFilter<"Evaluation"> | number | null
    sectionInfoId?: IntNullableWithAggregatesFilter<"Evaluation"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"Evaluation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Evaluation"> | Date | string
  }

  export type OpenaiResponseWhereInput = {
    AND?: OpenaiResponseWhereInput | OpenaiResponseWhereInput[]
    OR?: OpenaiResponseWhereInput[]
    NOT?: OpenaiResponseWhereInput | OpenaiResponseWhereInput[]
    id?: IntFilter<"OpenaiResponse"> | number
    responseId?: StringFilter<"OpenaiResponse"> | string
    request?: StringFilter<"OpenaiResponse"> | string
    response?: StringFilter<"OpenaiResponse"> | string
    index?: IntFilter<"OpenaiResponse"> | number
    cvMinuteId?: IntNullableFilter<"OpenaiResponse"> | number | null
    userId?: IntNullableFilter<"OpenaiResponse"> | number | null
    cvThequeCritereId?: IntNullableFilter<"OpenaiResponse"> | number | null
    createdAt?: DateTimeFilter<"OpenaiResponse"> | Date | string
    updatedAt?: DateTimeFilter<"OpenaiResponse"> | Date | string
    cvMinute?: XOR<CvMinuteNullableScalarRelationFilter, CvMinuteWhereInput> | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    cvThequeCritere?: XOR<CvThequeCritereNullableScalarRelationFilter, CvThequeCritereWhereInput> | null
  }

  export type OpenaiResponseOrderByWithRelationInput = {
    id?: SortOrder
    responseId?: SortOrder
    request?: SortOrder
    response?: SortOrder
    index?: SortOrder
    cvMinuteId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    cvThequeCritereId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cvMinute?: CvMinuteOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    cvThequeCritere?: CvThequeCritereOrderByWithRelationInput
  }

  export type OpenaiResponseWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OpenaiResponseWhereInput | OpenaiResponseWhereInput[]
    OR?: OpenaiResponseWhereInput[]
    NOT?: OpenaiResponseWhereInput | OpenaiResponseWhereInput[]
    responseId?: StringFilter<"OpenaiResponse"> | string
    request?: StringFilter<"OpenaiResponse"> | string
    response?: StringFilter<"OpenaiResponse"> | string
    index?: IntFilter<"OpenaiResponse"> | number
    cvMinuteId?: IntNullableFilter<"OpenaiResponse"> | number | null
    userId?: IntNullableFilter<"OpenaiResponse"> | number | null
    cvThequeCritereId?: IntNullableFilter<"OpenaiResponse"> | number | null
    createdAt?: DateTimeFilter<"OpenaiResponse"> | Date | string
    updatedAt?: DateTimeFilter<"OpenaiResponse"> | Date | string
    cvMinute?: XOR<CvMinuteNullableScalarRelationFilter, CvMinuteWhereInput> | null
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    cvThequeCritere?: XOR<CvThequeCritereNullableScalarRelationFilter, CvThequeCritereWhereInput> | null
  }, "id">

  export type OpenaiResponseOrderByWithAggregationInput = {
    id?: SortOrder
    responseId?: SortOrder
    request?: SortOrder
    response?: SortOrder
    index?: SortOrder
    cvMinuteId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    cvThequeCritereId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OpenaiResponseCountOrderByAggregateInput
    _avg?: OpenaiResponseAvgOrderByAggregateInput
    _max?: OpenaiResponseMaxOrderByAggregateInput
    _min?: OpenaiResponseMinOrderByAggregateInput
    _sum?: OpenaiResponseSumOrderByAggregateInput
  }

  export type OpenaiResponseScalarWhereWithAggregatesInput = {
    AND?: OpenaiResponseScalarWhereWithAggregatesInput | OpenaiResponseScalarWhereWithAggregatesInput[]
    OR?: OpenaiResponseScalarWhereWithAggregatesInput[]
    NOT?: OpenaiResponseScalarWhereWithAggregatesInput | OpenaiResponseScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OpenaiResponse"> | number
    responseId?: StringWithAggregatesFilter<"OpenaiResponse"> | string
    request?: StringWithAggregatesFilter<"OpenaiResponse"> | string
    response?: StringWithAggregatesFilter<"OpenaiResponse"> | string
    index?: IntWithAggregatesFilter<"OpenaiResponse"> | number
    cvMinuteId?: IntNullableWithAggregatesFilter<"OpenaiResponse"> | number | null
    userId?: IntNullableWithAggregatesFilter<"OpenaiResponse"> | number | null
    cvThequeCritereId?: IntNullableWithAggregatesFilter<"OpenaiResponse"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"OpenaiResponse"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OpenaiResponse"> | Date | string
  }

  export type QualiCarriereQuestionWhereInput = {
    AND?: QualiCarriereQuestionWhereInput | QualiCarriereQuestionWhereInput[]
    OR?: QualiCarriereQuestionWhereInput[]
    NOT?: QualiCarriereQuestionWhereInput | QualiCarriereQuestionWhereInput[]
    id?: IntFilter<"QualiCarriereQuestion"> | number
    order?: IntFilter<"QualiCarriereQuestion"> | number
    content?: StringFilter<"QualiCarriereQuestion"> | string
    sectionInfoId?: IntFilter<"QualiCarriereQuestion"> | number
    userId?: IntFilter<"QualiCarriereQuestion"> | number
    createdAt?: DateTimeFilter<"QualiCarriereQuestion"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereQuestion"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    sectionInfo?: XOR<SectionInfoScalarRelationFilter, SectionInfoWhereInput>
    qualiCarriereResponse?: XOR<QualiCarriereResponseNullableScalarRelationFilter, QualiCarriereResponseWhereInput> | null
  }

  export type QualiCarriereQuestionOrderByWithRelationInput = {
    id?: SortOrder
    order?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    sectionInfo?: SectionInfoOrderByWithRelationInput
    qualiCarriereResponse?: QualiCarriereResponseOrderByWithRelationInput
  }

  export type QualiCarriereQuestionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: QualiCarriereQuestionWhereInput | QualiCarriereQuestionWhereInput[]
    OR?: QualiCarriereQuestionWhereInput[]
    NOT?: QualiCarriereQuestionWhereInput | QualiCarriereQuestionWhereInput[]
    order?: IntFilter<"QualiCarriereQuestion"> | number
    content?: StringFilter<"QualiCarriereQuestion"> | string
    sectionInfoId?: IntFilter<"QualiCarriereQuestion"> | number
    userId?: IntFilter<"QualiCarriereQuestion"> | number
    createdAt?: DateTimeFilter<"QualiCarriereQuestion"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereQuestion"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    sectionInfo?: XOR<SectionInfoScalarRelationFilter, SectionInfoWhereInput>
    qualiCarriereResponse?: XOR<QualiCarriereResponseNullableScalarRelationFilter, QualiCarriereResponseWhereInput> | null
  }, "id">

  export type QualiCarriereQuestionOrderByWithAggregationInput = {
    id?: SortOrder
    order?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: QualiCarriereQuestionCountOrderByAggregateInput
    _avg?: QualiCarriereQuestionAvgOrderByAggregateInput
    _max?: QualiCarriereQuestionMaxOrderByAggregateInput
    _min?: QualiCarriereQuestionMinOrderByAggregateInput
    _sum?: QualiCarriereQuestionSumOrderByAggregateInput
  }

  export type QualiCarriereQuestionScalarWhereWithAggregatesInput = {
    AND?: QualiCarriereQuestionScalarWhereWithAggregatesInput | QualiCarriereQuestionScalarWhereWithAggregatesInput[]
    OR?: QualiCarriereQuestionScalarWhereWithAggregatesInput[]
    NOT?: QualiCarriereQuestionScalarWhereWithAggregatesInput | QualiCarriereQuestionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"QualiCarriereQuestion"> | number
    order?: IntWithAggregatesFilter<"QualiCarriereQuestion"> | number
    content?: StringWithAggregatesFilter<"QualiCarriereQuestion"> | string
    sectionInfoId?: IntWithAggregatesFilter<"QualiCarriereQuestion"> | number
    userId?: IntWithAggregatesFilter<"QualiCarriereQuestion"> | number
    createdAt?: DateTimeWithAggregatesFilter<"QualiCarriereQuestion"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"QualiCarriereQuestion"> | Date | string
  }

  export type QualiCarriereResponseWhereInput = {
    AND?: QualiCarriereResponseWhereInput | QualiCarriereResponseWhereInput[]
    OR?: QualiCarriereResponseWhereInput[]
    NOT?: QualiCarriereResponseWhereInput | QualiCarriereResponseWhereInput[]
    id?: IntFilter<"QualiCarriereResponse"> | number
    content?: StringFilter<"QualiCarriereResponse"> | string
    questionId?: IntFilter<"QualiCarriereResponse"> | number
    sectionInfoId?: IntFilter<"QualiCarriereResponse"> | number
    userId?: IntFilter<"QualiCarriereResponse"> | number
    createdAt?: DateTimeFilter<"QualiCarriereResponse"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereResponse"> | Date | string
    qualiCarriereQuestion?: XOR<QualiCarriereQuestionScalarRelationFilter, QualiCarriereQuestionWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    SectionInfo?: XOR<SectionInfoNullableScalarRelationFilter, SectionInfoWhereInput> | null
  }

  export type QualiCarriereResponseOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    questionId?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    qualiCarriereQuestion?: QualiCarriereQuestionOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    SectionInfo?: SectionInfoOrderByWithRelationInput
  }

  export type QualiCarriereResponseWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    questionId?: number
    AND?: QualiCarriereResponseWhereInput | QualiCarriereResponseWhereInput[]
    OR?: QualiCarriereResponseWhereInput[]
    NOT?: QualiCarriereResponseWhereInput | QualiCarriereResponseWhereInput[]
    content?: StringFilter<"QualiCarriereResponse"> | string
    sectionInfoId?: IntFilter<"QualiCarriereResponse"> | number
    userId?: IntFilter<"QualiCarriereResponse"> | number
    createdAt?: DateTimeFilter<"QualiCarriereResponse"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereResponse"> | Date | string
    qualiCarriereQuestion?: XOR<QualiCarriereQuestionScalarRelationFilter, QualiCarriereQuestionWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    SectionInfo?: XOR<SectionInfoNullableScalarRelationFilter, SectionInfoWhereInput> | null
  }, "id" | "questionId">

  export type QualiCarriereResponseOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    questionId?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: QualiCarriereResponseCountOrderByAggregateInput
    _avg?: QualiCarriereResponseAvgOrderByAggregateInput
    _max?: QualiCarriereResponseMaxOrderByAggregateInput
    _min?: QualiCarriereResponseMinOrderByAggregateInput
    _sum?: QualiCarriereResponseSumOrderByAggregateInput
  }

  export type QualiCarriereResponseScalarWhereWithAggregatesInput = {
    AND?: QualiCarriereResponseScalarWhereWithAggregatesInput | QualiCarriereResponseScalarWhereWithAggregatesInput[]
    OR?: QualiCarriereResponseScalarWhereWithAggregatesInput[]
    NOT?: QualiCarriereResponseScalarWhereWithAggregatesInput | QualiCarriereResponseScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"QualiCarriereResponse"> | number
    content?: StringWithAggregatesFilter<"QualiCarriereResponse"> | string
    questionId?: IntWithAggregatesFilter<"QualiCarriereResponse"> | number
    sectionInfoId?: IntWithAggregatesFilter<"QualiCarriereResponse"> | number
    userId?: IntWithAggregatesFilter<"QualiCarriereResponse"> | number
    createdAt?: DateTimeWithAggregatesFilter<"QualiCarriereResponse"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"QualiCarriereResponse"> | Date | string
  }

  export type QualiCarriereResumeWhereInput = {
    AND?: QualiCarriereResumeWhereInput | QualiCarriereResumeWhereInput[]
    OR?: QualiCarriereResumeWhereInput[]
    NOT?: QualiCarriereResumeWhereInput | QualiCarriereResumeWhereInput[]
    id?: IntFilter<"QualiCarriereResume"> | number
    content?: StringFilter<"QualiCarriereResume"> | string
    sectionInfoId?: IntFilter<"QualiCarriereResume"> | number
    userId?: IntFilter<"QualiCarriereResume"> | number
    createdAt?: DateTimeFilter<"QualiCarriereResume"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereResume"> | Date | string
    sectionInfo?: XOR<SectionInfoScalarRelationFilter, SectionInfoWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type QualiCarriereResumeOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sectionInfo?: SectionInfoOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type QualiCarriereResumeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sectionInfoId?: number
    AND?: QualiCarriereResumeWhereInput | QualiCarriereResumeWhereInput[]
    OR?: QualiCarriereResumeWhereInput[]
    NOT?: QualiCarriereResumeWhereInput | QualiCarriereResumeWhereInput[]
    content?: StringFilter<"QualiCarriereResume"> | string
    userId?: IntFilter<"QualiCarriereResume"> | number
    createdAt?: DateTimeFilter<"QualiCarriereResume"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereResume"> | Date | string
    sectionInfo?: XOR<SectionInfoScalarRelationFilter, SectionInfoWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "sectionInfoId">

  export type QualiCarriereResumeOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: QualiCarriereResumeCountOrderByAggregateInput
    _avg?: QualiCarriereResumeAvgOrderByAggregateInput
    _max?: QualiCarriereResumeMaxOrderByAggregateInput
    _min?: QualiCarriereResumeMinOrderByAggregateInput
    _sum?: QualiCarriereResumeSumOrderByAggregateInput
  }

  export type QualiCarriereResumeScalarWhereWithAggregatesInput = {
    AND?: QualiCarriereResumeScalarWhereWithAggregatesInput | QualiCarriereResumeScalarWhereWithAggregatesInput[]
    OR?: QualiCarriereResumeScalarWhereWithAggregatesInput[]
    NOT?: QualiCarriereResumeScalarWhereWithAggregatesInput | QualiCarriereResumeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"QualiCarriereResume"> | number
    content?: StringWithAggregatesFilter<"QualiCarriereResume"> | string
    sectionInfoId?: IntWithAggregatesFilter<"QualiCarriereResume"> | number
    userId?: IntWithAggregatesFilter<"QualiCarriereResume"> | number
    createdAt?: DateTimeWithAggregatesFilter<"QualiCarriereResume"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"QualiCarriereResume"> | Date | string
  }

  export type QualiCarriereCompetenceWhereInput = {
    AND?: QualiCarriereCompetenceWhereInput | QualiCarriereCompetenceWhereInput[]
    OR?: QualiCarriereCompetenceWhereInput[]
    NOT?: QualiCarriereCompetenceWhereInput | QualiCarriereCompetenceWhereInput[]
    id?: IntFilter<"QualiCarriereCompetence"> | number
    content?: StringFilter<"QualiCarriereCompetence"> | string
    sectionInfoId?: IntFilter<"QualiCarriereCompetence"> | number
    userId?: IntFilter<"QualiCarriereCompetence"> | number
    createdAt?: DateTimeFilter<"QualiCarriereCompetence"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereCompetence"> | Date | string
    sectionInfo?: XOR<SectionInfoScalarRelationFilter, SectionInfoWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type QualiCarriereCompetenceOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sectionInfo?: SectionInfoOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type QualiCarriereCompetenceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: QualiCarriereCompetenceWhereInput | QualiCarriereCompetenceWhereInput[]
    OR?: QualiCarriereCompetenceWhereInput[]
    NOT?: QualiCarriereCompetenceWhereInput | QualiCarriereCompetenceWhereInput[]
    content?: StringFilter<"QualiCarriereCompetence"> | string
    sectionInfoId?: IntFilter<"QualiCarriereCompetence"> | number
    userId?: IntFilter<"QualiCarriereCompetence"> | number
    createdAt?: DateTimeFilter<"QualiCarriereCompetence"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereCompetence"> | Date | string
    sectionInfo?: XOR<SectionInfoScalarRelationFilter, SectionInfoWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type QualiCarriereCompetenceOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: QualiCarriereCompetenceCountOrderByAggregateInput
    _avg?: QualiCarriereCompetenceAvgOrderByAggregateInput
    _max?: QualiCarriereCompetenceMaxOrderByAggregateInput
    _min?: QualiCarriereCompetenceMinOrderByAggregateInput
    _sum?: QualiCarriereCompetenceSumOrderByAggregateInput
  }

  export type QualiCarriereCompetenceScalarWhereWithAggregatesInput = {
    AND?: QualiCarriereCompetenceScalarWhereWithAggregatesInput | QualiCarriereCompetenceScalarWhereWithAggregatesInput[]
    OR?: QualiCarriereCompetenceScalarWhereWithAggregatesInput[]
    NOT?: QualiCarriereCompetenceScalarWhereWithAggregatesInput | QualiCarriereCompetenceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"QualiCarriereCompetence"> | number
    content?: StringWithAggregatesFilter<"QualiCarriereCompetence"> | string
    sectionInfoId?: IntWithAggregatesFilter<"QualiCarriereCompetence"> | number
    userId?: IntWithAggregatesFilter<"QualiCarriereCompetence"> | number
    createdAt?: DateTimeWithAggregatesFilter<"QualiCarriereCompetence"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"QualiCarriereCompetence"> | Date | string
  }

  export type QualiCarriereChatWhereInput = {
    AND?: QualiCarriereChatWhereInput | QualiCarriereChatWhereInput[]
    OR?: QualiCarriereChatWhereInput[]
    NOT?: QualiCarriereChatWhereInput | QualiCarriereChatWhereInput[]
    id?: IntFilter<"QualiCarriereChat"> | number
    role?: StringFilter<"QualiCarriereChat"> | string
    content?: StringFilter<"QualiCarriereChat"> | string
    userId?: IntFilter<"QualiCarriereChat"> | number
    createdAt?: DateTimeFilter<"QualiCarriereChat"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereChat"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type QualiCarriereChatOrderByWithRelationInput = {
    id?: SortOrder
    role?: SortOrder
    content?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type QualiCarriereChatWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: QualiCarriereChatWhereInput | QualiCarriereChatWhereInput[]
    OR?: QualiCarriereChatWhereInput[]
    NOT?: QualiCarriereChatWhereInput | QualiCarriereChatWhereInput[]
    role?: StringFilter<"QualiCarriereChat"> | string
    content?: StringFilter<"QualiCarriereChat"> | string
    userId?: IntFilter<"QualiCarriereChat"> | number
    createdAt?: DateTimeFilter<"QualiCarriereChat"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereChat"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type QualiCarriereChatOrderByWithAggregationInput = {
    id?: SortOrder
    role?: SortOrder
    content?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: QualiCarriereChatCountOrderByAggregateInput
    _avg?: QualiCarriereChatAvgOrderByAggregateInput
    _max?: QualiCarriereChatMaxOrderByAggregateInput
    _min?: QualiCarriereChatMinOrderByAggregateInput
    _sum?: QualiCarriereChatSumOrderByAggregateInput
  }

  export type QualiCarriereChatScalarWhereWithAggregatesInput = {
    AND?: QualiCarriereChatScalarWhereWithAggregatesInput | QualiCarriereChatScalarWhereWithAggregatesInput[]
    OR?: QualiCarriereChatScalarWhereWithAggregatesInput[]
    NOT?: QualiCarriereChatScalarWhereWithAggregatesInput | QualiCarriereChatScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"QualiCarriereChat"> | number
    role?: StringWithAggregatesFilter<"QualiCarriereChat"> | string
    content?: StringWithAggregatesFilter<"QualiCarriereChat"> | string
    userId?: IntWithAggregatesFilter<"QualiCarriereChat"> | number
    createdAt?: DateTimeWithAggregatesFilter<"QualiCarriereChat"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"QualiCarriereChat"> | Date | string
  }

  export type CvThequeCritereWhereInput = {
    AND?: CvThequeCritereWhereInput | CvThequeCritereWhereInput[]
    OR?: CvThequeCritereWhereInput[]
    NOT?: CvThequeCritereWhereInput | CvThequeCritereWhereInput[]
    id?: IntFilter<"CvThequeCritere"> | number
    position?: StringFilter<"CvThequeCritere"> | string
    domain?: StringFilter<"CvThequeCritere"> | string
    description?: StringFilter<"CvThequeCritere"> | string
    diplome?: StringFilter<"CvThequeCritere"> | string
    localisation?: StringFilter<"CvThequeCritere"> | string
    distance?: IntFilter<"CvThequeCritere"> | number
    experience?: IntNullableFilter<"CvThequeCritere"> | number | null
    evaluation?: IntFilter<"CvThequeCritere"> | number
    saved?: BoolFilter<"CvThequeCritere"> | boolean
    userId?: IntFilter<"CvThequeCritere"> | number
    createdAt?: DateTimeFilter<"CvThequeCritere"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeCritere"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvThequeCompetences?: CvThequeCompetenceListRelationFilter
    cvThequeViews?: CvThequeViewListRelationFilter
    cvThequeUsers?: CvThequeUserListRelationFilter
    cvMinutes?: CvMinuteListRelationFilter
    openaiResponses?: OpenaiResponseListRelationFilter
  }

  export type CvThequeCritereOrderByWithRelationInput = {
    id?: SortOrder
    position?: SortOrder
    domain?: SortOrder
    description?: SortOrder
    diplome?: SortOrder
    localisation?: SortOrder
    distance?: SortOrder
    experience?: SortOrderInput | SortOrder
    evaluation?: SortOrder
    saved?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    cvThequeCompetences?: CvThequeCompetenceOrderByRelationAggregateInput
    cvThequeViews?: CvThequeViewOrderByRelationAggregateInput
    cvThequeUsers?: CvThequeUserOrderByRelationAggregateInput
    cvMinutes?: CvMinuteOrderByRelationAggregateInput
    openaiResponses?: OpenaiResponseOrderByRelationAggregateInput
  }

  export type CvThequeCritereWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CvThequeCritereWhereInput | CvThequeCritereWhereInput[]
    OR?: CvThequeCritereWhereInput[]
    NOT?: CvThequeCritereWhereInput | CvThequeCritereWhereInput[]
    position?: StringFilter<"CvThequeCritere"> | string
    domain?: StringFilter<"CvThequeCritere"> | string
    description?: StringFilter<"CvThequeCritere"> | string
    diplome?: StringFilter<"CvThequeCritere"> | string
    localisation?: StringFilter<"CvThequeCritere"> | string
    distance?: IntFilter<"CvThequeCritere"> | number
    experience?: IntNullableFilter<"CvThequeCritere"> | number | null
    evaluation?: IntFilter<"CvThequeCritere"> | number
    saved?: BoolFilter<"CvThequeCritere"> | boolean
    userId?: IntFilter<"CvThequeCritere"> | number
    createdAt?: DateTimeFilter<"CvThequeCritere"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeCritere"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvThequeCompetences?: CvThequeCompetenceListRelationFilter
    cvThequeViews?: CvThequeViewListRelationFilter
    cvThequeUsers?: CvThequeUserListRelationFilter
    cvMinutes?: CvMinuteListRelationFilter
    openaiResponses?: OpenaiResponseListRelationFilter
  }, "id">

  export type CvThequeCritereOrderByWithAggregationInput = {
    id?: SortOrder
    position?: SortOrder
    domain?: SortOrder
    description?: SortOrder
    diplome?: SortOrder
    localisation?: SortOrder
    distance?: SortOrder
    experience?: SortOrderInput | SortOrder
    evaluation?: SortOrder
    saved?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CvThequeCritereCountOrderByAggregateInput
    _avg?: CvThequeCritereAvgOrderByAggregateInput
    _max?: CvThequeCritereMaxOrderByAggregateInput
    _min?: CvThequeCritereMinOrderByAggregateInput
    _sum?: CvThequeCritereSumOrderByAggregateInput
  }

  export type CvThequeCritereScalarWhereWithAggregatesInput = {
    AND?: CvThequeCritereScalarWhereWithAggregatesInput | CvThequeCritereScalarWhereWithAggregatesInput[]
    OR?: CvThequeCritereScalarWhereWithAggregatesInput[]
    NOT?: CvThequeCritereScalarWhereWithAggregatesInput | CvThequeCritereScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvThequeCritere"> | number
    position?: StringWithAggregatesFilter<"CvThequeCritere"> | string
    domain?: StringWithAggregatesFilter<"CvThequeCritere"> | string
    description?: StringWithAggregatesFilter<"CvThequeCritere"> | string
    diplome?: StringWithAggregatesFilter<"CvThequeCritere"> | string
    localisation?: StringWithAggregatesFilter<"CvThequeCritere"> | string
    distance?: IntWithAggregatesFilter<"CvThequeCritere"> | number
    experience?: IntNullableWithAggregatesFilter<"CvThequeCritere"> | number | null
    evaluation?: IntWithAggregatesFilter<"CvThequeCritere"> | number
    saved?: BoolWithAggregatesFilter<"CvThequeCritere"> | boolean
    userId?: IntWithAggregatesFilter<"CvThequeCritere"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CvThequeCritere"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CvThequeCritere"> | Date | string
  }

  export type CvThequeCompetenceWhereInput = {
    AND?: CvThequeCompetenceWhereInput | CvThequeCompetenceWhereInput[]
    OR?: CvThequeCompetenceWhereInput[]
    NOT?: CvThequeCompetenceWhereInput | CvThequeCompetenceWhereInput[]
    id?: IntFilter<"CvThequeCompetence"> | number
    content?: StringFilter<"CvThequeCompetence"> | string
    cvThequeCritereId?: IntFilter<"CvThequeCompetence"> | number
    createdAt?: DateTimeFilter<"CvThequeCompetence"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeCompetence"> | Date | string
    cvThequeCritere?: XOR<CvThequeCritereScalarRelationFilter, CvThequeCritereWhereInput>
  }

  export type CvThequeCompetenceOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cvThequeCritere?: CvThequeCritereOrderByWithRelationInput
  }

  export type CvThequeCompetenceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CvThequeCompetenceWhereInput | CvThequeCompetenceWhereInput[]
    OR?: CvThequeCompetenceWhereInput[]
    NOT?: CvThequeCompetenceWhereInput | CvThequeCompetenceWhereInput[]
    content?: StringFilter<"CvThequeCompetence"> | string
    cvThequeCritereId?: IntFilter<"CvThequeCompetence"> | number
    createdAt?: DateTimeFilter<"CvThequeCompetence"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeCompetence"> | Date | string
    cvThequeCritere?: XOR<CvThequeCritereScalarRelationFilter, CvThequeCritereWhereInput>
  }, "id">

  export type CvThequeCompetenceOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CvThequeCompetenceCountOrderByAggregateInput
    _avg?: CvThequeCompetenceAvgOrderByAggregateInput
    _max?: CvThequeCompetenceMaxOrderByAggregateInput
    _min?: CvThequeCompetenceMinOrderByAggregateInput
    _sum?: CvThequeCompetenceSumOrderByAggregateInput
  }

  export type CvThequeCompetenceScalarWhereWithAggregatesInput = {
    AND?: CvThequeCompetenceScalarWhereWithAggregatesInput | CvThequeCompetenceScalarWhereWithAggregatesInput[]
    OR?: CvThequeCompetenceScalarWhereWithAggregatesInput[]
    NOT?: CvThequeCompetenceScalarWhereWithAggregatesInput | CvThequeCompetenceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvThequeCompetence"> | number
    content?: StringWithAggregatesFilter<"CvThequeCompetence"> | string
    cvThequeCritereId?: IntWithAggregatesFilter<"CvThequeCompetence"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CvThequeCompetence"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CvThequeCompetence"> | Date | string
  }

  export type CvThequeViewWhereInput = {
    AND?: CvThequeViewWhereInput | CvThequeViewWhereInput[]
    OR?: CvThequeViewWhereInput[]
    NOT?: CvThequeViewWhereInput | CvThequeViewWhereInput[]
    id?: IntFilter<"CvThequeView"> | number
    count?: IntFilter<"CvThequeView"> | number
    cvMinuteId?: IntFilter<"CvThequeView"> | number
    cvThequeCritereId?: IntFilter<"CvThequeView"> | number
    createdAt?: DateTimeFilter<"CvThequeView"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeView"> | Date | string
    cvMinute?: XOR<CvMinuteScalarRelationFilter, CvMinuteWhereInput>
    cvThequeCritere?: XOR<CvThequeCritereScalarRelationFilter, CvThequeCritereWhereInput>
  }

  export type CvThequeViewOrderByWithRelationInput = {
    id?: SortOrder
    count?: SortOrder
    cvMinuteId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    cvMinute?: CvMinuteOrderByWithRelationInput
    cvThequeCritere?: CvThequeCritereOrderByWithRelationInput
  }

  export type CvThequeViewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    cvMinuteId?: number
    AND?: CvThequeViewWhereInput | CvThequeViewWhereInput[]
    OR?: CvThequeViewWhereInput[]
    NOT?: CvThequeViewWhereInput | CvThequeViewWhereInput[]
    count?: IntFilter<"CvThequeView"> | number
    cvThequeCritereId?: IntFilter<"CvThequeView"> | number
    createdAt?: DateTimeFilter<"CvThequeView"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeView"> | Date | string
    cvMinute?: XOR<CvMinuteScalarRelationFilter, CvMinuteWhereInput>
    cvThequeCritere?: XOR<CvThequeCritereScalarRelationFilter, CvThequeCritereWhereInput>
  }, "id" | "cvMinuteId">

  export type CvThequeViewOrderByWithAggregationInput = {
    id?: SortOrder
    count?: SortOrder
    cvMinuteId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CvThequeViewCountOrderByAggregateInput
    _avg?: CvThequeViewAvgOrderByAggregateInput
    _max?: CvThequeViewMaxOrderByAggregateInput
    _min?: CvThequeViewMinOrderByAggregateInput
    _sum?: CvThequeViewSumOrderByAggregateInput
  }

  export type CvThequeViewScalarWhereWithAggregatesInput = {
    AND?: CvThequeViewScalarWhereWithAggregatesInput | CvThequeViewScalarWhereWithAggregatesInput[]
    OR?: CvThequeViewScalarWhereWithAggregatesInput[]
    NOT?: CvThequeViewScalarWhereWithAggregatesInput | CvThequeViewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvThequeView"> | number
    count?: IntWithAggregatesFilter<"CvThequeView"> | number
    cvMinuteId?: IntWithAggregatesFilter<"CvThequeView"> | number
    cvThequeCritereId?: IntWithAggregatesFilter<"CvThequeView"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CvThequeView"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CvThequeView"> | Date | string
  }

  export type CvThequeUserWhereInput = {
    AND?: CvThequeUserWhereInput | CvThequeUserWhereInput[]
    OR?: CvThequeUserWhereInput[]
    NOT?: CvThequeUserWhereInput | CvThequeUserWhereInput[]
    id?: IntFilter<"CvThequeUser"> | number
    score?: IntFilter<"CvThequeUser"> | number
    userId?: IntFilter<"CvThequeUser"> | number
    cvThequeCritereId?: IntFilter<"CvThequeUser"> | number
    createdAt?: DateTimeFilter<"CvThequeUser"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeUser"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvThequeCritere?: XOR<CvThequeCritereScalarRelationFilter, CvThequeCritereWhereInput>
  }

  export type CvThequeUserOrderByWithRelationInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    cvThequeCritere?: CvThequeCritereOrderByWithRelationInput
  }

  export type CvThequeUserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId_cvThequeCritereId?: CvThequeUserUserIdCvThequeCritereIdCompoundUniqueInput
    AND?: CvThequeUserWhereInput | CvThequeUserWhereInput[]
    OR?: CvThequeUserWhereInput[]
    NOT?: CvThequeUserWhereInput | CvThequeUserWhereInput[]
    score?: IntFilter<"CvThequeUser"> | number
    userId?: IntFilter<"CvThequeUser"> | number
    cvThequeCritereId?: IntFilter<"CvThequeUser"> | number
    createdAt?: DateTimeFilter<"CvThequeUser"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeUser"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvThequeCritere?: XOR<CvThequeCritereScalarRelationFilter, CvThequeCritereWhereInput>
  }, "id" | "userId_cvThequeCritereId">

  export type CvThequeUserOrderByWithAggregationInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CvThequeUserCountOrderByAggregateInput
    _avg?: CvThequeUserAvgOrderByAggregateInput
    _max?: CvThequeUserMaxOrderByAggregateInput
    _min?: CvThequeUserMinOrderByAggregateInput
    _sum?: CvThequeUserSumOrderByAggregateInput
  }

  export type CvThequeUserScalarWhereWithAggregatesInput = {
    AND?: CvThequeUserScalarWhereWithAggregatesInput | CvThequeUserScalarWhereWithAggregatesInput[]
    OR?: CvThequeUserScalarWhereWithAggregatesInput[]
    NOT?: CvThequeUserScalarWhereWithAggregatesInput | CvThequeUserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvThequeUser"> | number
    score?: IntWithAggregatesFilter<"CvThequeUser"> | number
    userId?: IntWithAggregatesFilter<"CvThequeUser"> | number
    cvThequeCritereId?: IntWithAggregatesFilter<"CvThequeUser"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CvThequeUser"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CvThequeUser"> | Date | string
  }

  export type CvThequeContactWhereInput = {
    AND?: CvThequeContactWhereInput | CvThequeContactWhereInput[]
    OR?: CvThequeContactWhereInput[]
    NOT?: CvThequeContactWhereInput | CvThequeContactWhereInput[]
    id?: IntFilter<"CvThequeContact"> | number
    type?: StringFilter<"CvThequeContact"> | string
    date?: StringFilter<"CvThequeContact"> | string
    hour?: IntFilter<"CvThequeContact"> | number
    minute?: IntFilter<"CvThequeContact"> | number
    message?: StringFilter<"CvThequeContact"> | string
    status?: StringFilter<"CvThequeContact"> | string
    userId?: IntFilter<"CvThequeContact"> | number
    recruiterId?: IntFilter<"CvThequeContact"> | number
    cvMinuteId?: IntFilter<"CvThequeContact"> | number
    createdAt?: DateTimeFilter<"CvThequeContact"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeContact"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    recruiter?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvMinute?: XOR<CvMinuteScalarRelationFilter, CvMinuteWhereInput>
    cvThequeContactViews?: CvThequeContactViewListRelationFilter
  }

  export type CvThequeContactOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    date?: SortOrder
    hour?: SortOrder
    minute?: SortOrder
    message?: SortOrder
    status?: SortOrder
    userId?: SortOrder
    recruiterId?: SortOrder
    cvMinuteId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    recruiter?: UserOrderByWithRelationInput
    cvMinute?: CvMinuteOrderByWithRelationInput
    cvThequeContactViews?: CvThequeContactViewOrderByRelationAggregateInput
  }

  export type CvThequeContactWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    recruiterId_cvMinuteId?: CvThequeContactRecruiterIdCvMinuteIdCompoundUniqueInput
    AND?: CvThequeContactWhereInput | CvThequeContactWhereInput[]
    OR?: CvThequeContactWhereInput[]
    NOT?: CvThequeContactWhereInput | CvThequeContactWhereInput[]
    type?: StringFilter<"CvThequeContact"> | string
    date?: StringFilter<"CvThequeContact"> | string
    hour?: IntFilter<"CvThequeContact"> | number
    minute?: IntFilter<"CvThequeContact"> | number
    message?: StringFilter<"CvThequeContact"> | string
    status?: StringFilter<"CvThequeContact"> | string
    userId?: IntFilter<"CvThequeContact"> | number
    recruiterId?: IntFilter<"CvThequeContact"> | number
    cvMinuteId?: IntFilter<"CvThequeContact"> | number
    createdAt?: DateTimeFilter<"CvThequeContact"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeContact"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    recruiter?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvMinute?: XOR<CvMinuteScalarRelationFilter, CvMinuteWhereInput>
    cvThequeContactViews?: CvThequeContactViewListRelationFilter
  }, "id" | "recruiterId_cvMinuteId">

  export type CvThequeContactOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    date?: SortOrder
    hour?: SortOrder
    minute?: SortOrder
    message?: SortOrder
    status?: SortOrder
    userId?: SortOrder
    recruiterId?: SortOrder
    cvMinuteId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CvThequeContactCountOrderByAggregateInput
    _avg?: CvThequeContactAvgOrderByAggregateInput
    _max?: CvThequeContactMaxOrderByAggregateInput
    _min?: CvThequeContactMinOrderByAggregateInput
    _sum?: CvThequeContactSumOrderByAggregateInput
  }

  export type CvThequeContactScalarWhereWithAggregatesInput = {
    AND?: CvThequeContactScalarWhereWithAggregatesInput | CvThequeContactScalarWhereWithAggregatesInput[]
    OR?: CvThequeContactScalarWhereWithAggregatesInput[]
    NOT?: CvThequeContactScalarWhereWithAggregatesInput | CvThequeContactScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvThequeContact"> | number
    type?: StringWithAggregatesFilter<"CvThequeContact"> | string
    date?: StringWithAggregatesFilter<"CvThequeContact"> | string
    hour?: IntWithAggregatesFilter<"CvThequeContact"> | number
    minute?: IntWithAggregatesFilter<"CvThequeContact"> | number
    message?: StringWithAggregatesFilter<"CvThequeContact"> | string
    status?: StringWithAggregatesFilter<"CvThequeContact"> | string
    userId?: IntWithAggregatesFilter<"CvThequeContact"> | number
    recruiterId?: IntWithAggregatesFilter<"CvThequeContact"> | number
    cvMinuteId?: IntWithAggregatesFilter<"CvThequeContact"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CvThequeContact"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CvThequeContact"> | Date | string
  }

  export type CvThequeContactViewWhereInput = {
    AND?: CvThequeContactViewWhereInput | CvThequeContactViewWhereInput[]
    OR?: CvThequeContactViewWhereInput[]
    NOT?: CvThequeContactViewWhereInput | CvThequeContactViewWhereInput[]
    id?: IntFilter<"CvThequeContactView"> | number
    count?: IntFilter<"CvThequeContactView"> | number
    userId?: IntFilter<"CvThequeContactView"> | number
    cvThequeContactId?: IntFilter<"CvThequeContactView"> | number
    createdAt?: DateTimeFilter<"CvThequeContactView"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeContactView"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvThequeContact?: XOR<CvThequeContactScalarRelationFilter, CvThequeContactWhereInput>
  }

  export type CvThequeContactViewOrderByWithRelationInput = {
    id?: SortOrder
    count?: SortOrder
    userId?: SortOrder
    cvThequeContactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    cvThequeContact?: CvThequeContactOrderByWithRelationInput
  }

  export type CvThequeContactViewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CvThequeContactViewWhereInput | CvThequeContactViewWhereInput[]
    OR?: CvThequeContactViewWhereInput[]
    NOT?: CvThequeContactViewWhereInput | CvThequeContactViewWhereInput[]
    count?: IntFilter<"CvThequeContactView"> | number
    userId?: IntFilter<"CvThequeContactView"> | number
    cvThequeContactId?: IntFilter<"CvThequeContactView"> | number
    createdAt?: DateTimeFilter<"CvThequeContactView"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeContactView"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    cvThequeContact?: XOR<CvThequeContactScalarRelationFilter, CvThequeContactWhereInput>
  }, "id">

  export type CvThequeContactViewOrderByWithAggregationInput = {
    id?: SortOrder
    count?: SortOrder
    userId?: SortOrder
    cvThequeContactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CvThequeContactViewCountOrderByAggregateInput
    _avg?: CvThequeContactViewAvgOrderByAggregateInput
    _max?: CvThequeContactViewMaxOrderByAggregateInput
    _min?: CvThequeContactViewMinOrderByAggregateInput
    _sum?: CvThequeContactViewSumOrderByAggregateInput
  }

  export type CvThequeContactViewScalarWhereWithAggregatesInput = {
    AND?: CvThequeContactViewScalarWhereWithAggregatesInput | CvThequeContactViewScalarWhereWithAggregatesInput[]
    OR?: CvThequeContactViewScalarWhereWithAggregatesInput[]
    NOT?: CvThequeContactViewScalarWhereWithAggregatesInput | CvThequeContactViewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CvThequeContactView"> | number
    count?: IntWithAggregatesFilter<"CvThequeContactView"> | number
    userId?: IntWithAggregatesFilter<"CvThequeContactView"> | number
    cvThequeContactId?: IntWithAggregatesFilter<"CvThequeContactView"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CvThequeContactView"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CvThequeContactView"> | Date | string
  }

  export type UserCreateInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileCreateInput = {
    name: string
    originalName: string
    extension: string
    usage: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutFilesInput
    cvMinute?: CvMinuteCreateNestedOneWithoutFilesInput
    sectionInfo?: SectionInfoCreateNestedOneWithoutFileInput
  }

  export type FileUncheckedCreateInput = {
    id?: number
    name: string
    originalName: string
    extension: string
    usage: string
    userId: number
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFilesNestedInput
    cvMinute?: CvMinuteUpdateOneWithoutFilesNestedInput
    sectionInfo?: SectionInfoUpdateOneWithoutFileNestedInput
  }

  export type FileUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileCreateManyInput = {
    id?: number
    name: string
    originalName: string
    extension: string
    usage: string
    userId: number
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteCreateInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteCreateManyInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteDomainCreateInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinuteDomainsInput
    cvMinute: CvMinuteCreateNestedOneWithoutCvMinuteDomainsInput
  }

  export type CvMinuteDomainUncheckedCreateInput = {
    id?: number
    content: string
    cvMinuteId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteDomainUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinuteDomainsNestedInput
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvMinuteDomainsNestedInput
  }

  export type CvMinuteDomainUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteDomainCreateManyInput = {
    id?: number
    content: string
    cvMinuteId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteDomainUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteDomainUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SectionCreateInput = {
    name: string
    editable?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutSectionInput
  }

  export type SectionUncheckedCreateInput = {
    id?: number
    name: string
    editable?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutSectionInput
  }

  export type SectionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    editable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutSectionNestedInput
  }

  export type SectionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    editable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutSectionNestedInput
  }

  export type SectionCreateManyInput = {
    id?: number
    name: string
    editable?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SectionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    editable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SectionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    editable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteSectionCreateInput = {
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinute: CvMinuteCreateNestedOneWithoutCvMinuteSectionsInput
    section: SectionCreateNestedOneWithoutCvMinuteSectionsInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteSectionInput
    sectionInfos?: SectionInfoCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionUncheckedCreateInput = {
    id?: number
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinuteId: number
    sectionId: number
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteSectionInput
    sectionInfos?: SectionInfoUncheckedCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionUpdateInput = {
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvMinuteSectionsNestedInput
    section?: SectionUpdateOneRequiredWithoutCvMinuteSectionsNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteSectionNestedInput
    sectionInfos?: SectionInfoUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteSectionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    sectionId?: IntFieldUpdateOperationsInput | number
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteSectionNestedInput
    sectionInfos?: SectionInfoUncheckedUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteSectionCreateManyInput = {
    id?: number
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinuteId: number
    sectionId: number
  }

  export type CvMinuteSectionUpdateManyMutationInput = {
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CvMinuteSectionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    sectionId?: IntFieldUpdateOperationsInput | number
  }

  export type SectionInfoCreateInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationCreateNestedOneWithoutSectionInfoInput
    cvMinuteSection: CvMinuteSectionCreateNestedOneWithoutSectionInfosInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileUncheckedCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceUncheckedCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUpdateInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUpdateOneWithoutSectionInfoNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUncheckedUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoCreateManyInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SectionInfoUpdateManyMutationInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SectionInfoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceCreateInput = {
    type: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutAdvicesInput
    sectionInfo?: SectionInfoCreateNestedOneWithoutAdvicesInput
    cvMinuteSection?: CvMinuteSectionCreateNestedOneWithoutAdvicesInput
  }

  export type AdviceUncheckedCreateInput = {
    id?: number
    type: string
    content: string
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    cvMinuteSectionId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdviceUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutAdvicesNestedInput
    sectionInfo?: SectionInfoUpdateOneWithoutAdvicesNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneWithoutAdvicesNestedInput
  }

  export type AdviceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceCreateManyInput = {
    id?: number
    type: string
    content: string
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    cvMinuteSectionId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdviceUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EvaluationCreateInput = {
    initialScore: number
    actualScore?: number | null
    content: string
    weakContent?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutEvaluationInput
    sectionInfo?: SectionInfoCreateNestedOneWithoutEvaluationInput
  }

  export type EvaluationUncheckedCreateInput = {
    id?: number
    initialScore: number
    actualScore?: number | null
    content: string
    weakContent?: string | null
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EvaluationUpdateInput = {
    initialScore?: IntFieldUpdateOperationsInput | number
    actualScore?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    weakContent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutEvaluationNestedInput
    sectionInfo?: SectionInfoUpdateOneWithoutEvaluationNestedInput
  }

  export type EvaluationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    initialScore?: IntFieldUpdateOperationsInput | number
    actualScore?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    weakContent?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EvaluationCreateManyInput = {
    id?: number
    initialScore: number
    actualScore?: number | null
    content: string
    weakContent?: string | null
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EvaluationUpdateManyMutationInput = {
    initialScore?: IntFieldUpdateOperationsInput | number
    actualScore?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    weakContent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EvaluationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    initialScore?: IntFieldUpdateOperationsInput | number
    actualScore?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    weakContent?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpenaiResponseCreateInput = {
    responseId: string
    request: string
    response: string
    index: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutOpenaiResponsesInput
    user?: UserCreateNestedOneWithoutOpenaiResponsesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutOpenaiResponsesInput
  }

  export type OpenaiResponseUncheckedCreateInput = {
    id?: number
    responseId: string
    request: string
    response: string
    index: number
    cvMinuteId?: number | null
    userId?: number | null
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OpenaiResponseUpdateInput = {
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutOpenaiResponsesNestedInput
    user?: UserUpdateOneWithoutOpenaiResponsesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutOpenaiResponsesNestedInput
  }

  export type OpenaiResponseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpenaiResponseCreateManyInput = {
    id?: number
    responseId: string
    request: string
    response: string
    index: number
    cvMinuteId?: number | null
    userId?: number | null
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OpenaiResponseUpdateManyMutationInput = {
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpenaiResponseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereQuestionCreateInput = {
    order: number
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutQualiCarriereQuestionsInput
    sectionInfo: SectionInfoCreateNestedOneWithoutQualiCarriereQuestionsInput
    qualiCarriereResponse?: QualiCarriereResponseCreateNestedOneWithoutQualiCarriereQuestionInput
  }

  export type QualiCarriereQuestionUncheckedCreateInput = {
    id?: number
    order: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    qualiCarriereResponse?: QualiCarriereResponseUncheckedCreateNestedOneWithoutQualiCarriereQuestionInput
  }

  export type QualiCarriereQuestionUpdateInput = {
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutQualiCarriereQuestionsNestedInput
    sectionInfo?: SectionInfoUpdateOneRequiredWithoutQualiCarriereQuestionsNestedInput
    qualiCarriereResponse?: QualiCarriereResponseUpdateOneWithoutQualiCarriereQuestionNestedInput
  }

  export type QualiCarriereQuestionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    qualiCarriereResponse?: QualiCarriereResponseUncheckedUpdateOneWithoutQualiCarriereQuestionNestedInput
  }

  export type QualiCarriereQuestionCreateManyInput = {
    id?: number
    order: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereQuestionUpdateManyMutationInput = {
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereQuestionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResponseCreateInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    qualiCarriereQuestion: QualiCarriereQuestionCreateNestedOneWithoutQualiCarriereResponseInput
    user: UserCreateNestedOneWithoutQualiCarriereResponsesInput
    SectionInfo?: SectionInfoCreateNestedOneWithoutQualiCarriereResponsesInput
  }

  export type QualiCarriereResponseUncheckedCreateInput = {
    id?: number
    content: string
    questionId: number
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResponseUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    qualiCarriereQuestion?: QualiCarriereQuestionUpdateOneRequiredWithoutQualiCarriereResponseNestedInput
    user?: UserUpdateOneRequiredWithoutQualiCarriereResponsesNestedInput
    SectionInfo?: SectionInfoUpdateOneWithoutQualiCarriereResponsesNestedInput
  }

  export type QualiCarriereResponseUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    questionId?: IntFieldUpdateOperationsInput | number
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResponseCreateManyInput = {
    id?: number
    content: string
    questionId: number
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResponseUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResponseUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    questionId?: IntFieldUpdateOperationsInput | number
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResumeCreateInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sectionInfo: SectionInfoCreateNestedOneWithoutQualiCarriereResumesInput
    user: UserCreateNestedOneWithoutQualiCarriereResumesInput
  }

  export type QualiCarriereResumeUncheckedCreateInput = {
    id?: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResumeUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sectionInfo?: SectionInfoUpdateOneRequiredWithoutQualiCarriereResumesNestedInput
    user?: UserUpdateOneRequiredWithoutQualiCarriereResumesNestedInput
  }

  export type QualiCarriereResumeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResumeCreateManyInput = {
    id?: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResumeUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResumeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereCompetenceCreateInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sectionInfo: SectionInfoCreateNestedOneWithoutQualiCarriereCompetencesInput
    user: UserCreateNestedOneWithoutQualiCarriereCompetencesInput
  }

  export type QualiCarriereCompetenceUncheckedCreateInput = {
    id?: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereCompetenceUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sectionInfo?: SectionInfoUpdateOneRequiredWithoutQualiCarriereCompetencesNestedInput
    user?: UserUpdateOneRequiredWithoutQualiCarriereCompetencesNestedInput
  }

  export type QualiCarriereCompetenceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereCompetenceCreateManyInput = {
    id?: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereCompetenceUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereCompetenceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereChatCreateInput = {
    role: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutQualiCarriereChatInput
  }

  export type QualiCarriereChatUncheckedCreateInput = {
    id?: number
    role: string
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereChatUpdateInput = {
    role?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutQualiCarriereChatNestedInput
  }

  export type QualiCarriereChatUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereChatCreateManyInput = {
    id?: number
    role: string
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereChatUpdateManyMutationInput = {
    role?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereChatUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCritereCreateInput = {
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeCriteresInput
    cvThequeCompetences?: CvThequeCompetenceCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereUncheckedCreateInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereUpdateInput = {
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeCriteresNestedInput
    cvThequeCompetences?: CvThequeCompetenceUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereCreateManyInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeCritereUpdateManyMutationInput = {
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCritereUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCompetenceCreateInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCritere: CvThequeCritereCreateNestedOneWithoutCvThequeCompetencesInput
  }

  export type CvThequeCompetenceUncheckedCreateInput = {
    id?: number
    content: string
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeCompetenceUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCritere?: CvThequeCritereUpdateOneRequiredWithoutCvThequeCompetencesNestedInput
  }

  export type CvThequeCompetenceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCompetenceCreateManyInput = {
    id?: number
    content: string
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeCompetenceUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCompetenceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeViewCreateInput = {
    count: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute: CvMinuteCreateNestedOneWithoutCvThequeViewsInput
    cvThequeCritere: CvThequeCritereCreateNestedOneWithoutCvThequeViewsInput
  }

  export type CvThequeViewUncheckedCreateInput = {
    id?: number
    count: number
    cvMinuteId: number
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeViewUpdateInput = {
    count?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvThequeViewsNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneRequiredWithoutCvThequeViewsNestedInput
  }

  export type CvThequeViewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeViewCreateManyInput = {
    id?: number
    count: number
    cvMinuteId: number
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeViewUpdateManyMutationInput = {
    count?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeViewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeUserCreateInput = {
    score: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeUsersInput
    cvThequeCritere: CvThequeCritereCreateNestedOneWithoutCvThequeUsersInput
  }

  export type CvThequeUserUncheckedCreateInput = {
    id?: number
    score: number
    userId: number
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeUserUpdateInput = {
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeUsersNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneRequiredWithoutCvThequeUsersNestedInput
  }

  export type CvThequeUserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeUserCreateManyInput = {
    id?: number
    score: number
    userId: number
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeUserUpdateManyMutationInput = {
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeUserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactCreateInput = {
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserCvThequeContactsInput
    recruiter: UserCreateNestedOneWithoutRecruiterCvThequeContactsInput
    cvMinute: CvMinuteCreateNestedOneWithoutCvThequeContactsInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutCvThequeContactInput
  }

  export type CvThequeContactUncheckedCreateInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    userId: number
    recruiterId: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutCvThequeContactInput
  }

  export type CvThequeContactUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserCvThequeContactsNestedInput
    recruiter?: UserUpdateOneRequiredWithoutRecruiterCvThequeContactsNestedInput
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvThequeContactsNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutCvThequeContactNestedInput
  }

  export type CvThequeContactUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    recruiterId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutCvThequeContactNestedInput
  }

  export type CvThequeContactCreateManyInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    userId: number
    recruiterId: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    recruiterId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactViewCreateInput = {
    count: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeContactViewsInput
    cvThequeContact: CvThequeContactCreateNestedOneWithoutCvThequeContactViewsInput
  }

  export type CvThequeContactViewUncheckedCreateInput = {
    id?: number
    count: number
    userId: number
    cvThequeContactId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactViewUpdateInput = {
    count?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeContactViewsNestedInput
    cvThequeContact?: CvThequeContactUpdateOneRequiredWithoutCvThequeContactViewsNestedInput
  }

  export type CvThequeContactViewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeContactId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactViewCreateManyInput = {
    id?: number
    count: number
    userId: number
    cvThequeContactId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactViewUpdateManyMutationInput = {
    count?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactViewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeContactId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FileListRelationFilter = {
    every?: FileWhereInput
    some?: FileWhereInput
    none?: FileWhereInput
  }

  export type CvMinuteListRelationFilter = {
    every?: CvMinuteWhereInput
    some?: CvMinuteWhereInput
    none?: CvMinuteWhereInput
  }

  export type CvMinuteDomainListRelationFilter = {
    every?: CvMinuteDomainWhereInput
    some?: CvMinuteDomainWhereInput
    none?: CvMinuteDomainWhereInput
  }

  export type QualiCarriereQuestionListRelationFilter = {
    every?: QualiCarriereQuestionWhereInput
    some?: QualiCarriereQuestionWhereInput
    none?: QualiCarriereQuestionWhereInput
  }

  export type QualiCarriereResponseListRelationFilter = {
    every?: QualiCarriereResponseWhereInput
    some?: QualiCarriereResponseWhereInput
    none?: QualiCarriereResponseWhereInput
  }

  export type OpenaiResponseListRelationFilter = {
    every?: OpenaiResponseWhereInput
    some?: OpenaiResponseWhereInput
    none?: OpenaiResponseWhereInput
  }

  export type QualiCarriereChatListRelationFilter = {
    every?: QualiCarriereChatWhereInput
    some?: QualiCarriereChatWhereInput
    none?: QualiCarriereChatWhereInput
  }

  export type QualiCarriereResumeListRelationFilter = {
    every?: QualiCarriereResumeWhereInput
    some?: QualiCarriereResumeWhereInput
    none?: QualiCarriereResumeWhereInput
  }

  export type QualiCarriereCompetenceListRelationFilter = {
    every?: QualiCarriereCompetenceWhereInput
    some?: QualiCarriereCompetenceWhereInput
    none?: QualiCarriereCompetenceWhereInput
  }

  export type CvThequeCritereListRelationFilter = {
    every?: CvThequeCritereWhereInput
    some?: CvThequeCritereWhereInput
    none?: CvThequeCritereWhereInput
  }

  export type CvThequeUserListRelationFilter = {
    every?: CvThequeUserWhereInput
    some?: CvThequeUserWhereInput
    none?: CvThequeUserWhereInput
  }

  export type CvThequeContactListRelationFilter = {
    every?: CvThequeContactWhereInput
    some?: CvThequeContactWhereInput
    none?: CvThequeContactWhereInput
  }

  export type CvThequeContactViewListRelationFilter = {
    every?: CvThequeContactViewWhereInput
    some?: CvThequeContactViewWhereInput
    none?: CvThequeContactViewWhereInput
  }

  export type FileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvMinuteOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvMinuteDomainOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QualiCarriereQuestionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QualiCarriereResponseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OpenaiResponseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QualiCarriereChatOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QualiCarriereResumeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type QualiCarriereCompetenceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvThequeCritereOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvThequeUserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvThequeContactOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvThequeContactViewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    acceptConditions?: SortOrder
    role?: SortOrder
    qualiCarriere?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    acceptConditions?: SortOrder
    role?: SortOrder
    qualiCarriere?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    acceptConditions?: SortOrder
    role?: SortOrder
    qualiCarriere?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type CvMinuteNullableScalarRelationFilter = {
    is?: CvMinuteWhereInput | null
    isNot?: CvMinuteWhereInput | null
  }

  export type SectionInfoNullableScalarRelationFilter = {
    is?: SectionInfoWhereInput | null
    isNot?: SectionInfoWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type FileCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    originalName?: SortOrder
    extension?: SortOrder
    usage?: SortOrder
    userId?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FileAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
  }

  export type FileMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    originalName?: SortOrder
    extension?: SortOrder
    usage?: SortOrder
    userId?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FileMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    originalName?: SortOrder
    extension?: SortOrder
    usage?: SortOrder
    userId?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FileSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type CvThequeCritereNullableScalarRelationFilter = {
    is?: CvThequeCritereWhereInput | null
    isNot?: CvThequeCritereWhereInput | null
  }

  export type AdviceListRelationFilter = {
    every?: AdviceWhereInput
    some?: AdviceWhereInput
    none?: AdviceWhereInput
  }

  export type CvMinuteSectionListRelationFilter = {
    every?: CvMinuteSectionWhereInput
    some?: CvMinuteSectionWhereInput
    none?: CvMinuteSectionWhereInput
  }

  export type EvaluationNullableScalarRelationFilter = {
    is?: EvaluationWhereInput | null
    isNot?: EvaluationWhereInput | null
  }

  export type CvThequeViewListRelationFilter = {
    every?: CvThequeViewWhereInput
    some?: CvThequeViewWhereInput
    none?: CvThequeViewWhereInput
  }

  export type AdviceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvMinuteSectionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvThequeViewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvMinuteCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    primaryBg?: SortOrder
    secondaryBg?: SortOrder
    tertiaryBg?: SortOrder
    visible?: SortOrder
    qualiCarriereRef?: SortOrder
    generated?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvMinuteAvgOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type CvMinuteMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    primaryBg?: SortOrder
    secondaryBg?: SortOrder
    tertiaryBg?: SortOrder
    visible?: SortOrder
    qualiCarriereRef?: SortOrder
    generated?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvMinuteMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    position?: SortOrder
    primaryBg?: SortOrder
    secondaryBg?: SortOrder
    tertiaryBg?: SortOrder
    visible?: SortOrder
    qualiCarriereRef?: SortOrder
    generated?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvMinuteSumOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type CvMinuteScalarRelationFilter = {
    is?: CvMinuteWhereInput
    isNot?: CvMinuteWhereInput
  }

  export type CvMinuteDomainCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvMinuteDomainAvgOrderByAggregateInput = {
    id?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
  }

  export type CvMinuteDomainMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvMinuteDomainMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvMinuteDomainSumOrderByAggregateInput = {
    id?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
  }

  export type SectionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    editable?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SectionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SectionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    editable?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SectionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    editable?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SectionSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SectionScalarRelationFilter = {
    is?: SectionWhereInput
    isNot?: SectionWhereInput
  }

  export type SectionInfoListRelationFilter = {
    every?: SectionInfoWhereInput
    some?: SectionInfoWhereInput
    none?: SectionInfoWhereInput
  }

  export type SectionInfoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvMinuteSectionCvMinuteIdSectionIdCompoundUniqueInput = {
    cvMinuteId: number
    sectionId: number
  }

  export type CvMinuteSectionCountOrderByAggregateInput = {
    id?: SortOrder
    sectionOrder?: SortOrder
    sectionTitle?: SortOrder
    cvMinuteId?: SortOrder
    sectionId?: SortOrder
  }

  export type CvMinuteSectionAvgOrderByAggregateInput = {
    id?: SortOrder
    sectionOrder?: SortOrder
    cvMinuteId?: SortOrder
    sectionId?: SortOrder
  }

  export type CvMinuteSectionMaxOrderByAggregateInput = {
    id?: SortOrder
    sectionOrder?: SortOrder
    sectionTitle?: SortOrder
    cvMinuteId?: SortOrder
    sectionId?: SortOrder
  }

  export type CvMinuteSectionMinOrderByAggregateInput = {
    id?: SortOrder
    sectionOrder?: SortOrder
    sectionTitle?: SortOrder
    cvMinuteId?: SortOrder
    sectionId?: SortOrder
  }

  export type CvMinuteSectionSumOrderByAggregateInput = {
    id?: SortOrder
    sectionOrder?: SortOrder
    cvMinuteId?: SortOrder
    sectionId?: SortOrder
  }

  export type FileNullableScalarRelationFilter = {
    is?: FileWhereInput | null
    isNot?: FileWhereInput | null
  }

  export type CvMinuteSectionScalarRelationFilter = {
    is?: CvMinuteSectionWhereInput
    isNot?: CvMinuteSectionWhereInput
  }

  export type SectionInfoCountOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    content?: SortOrder
    title?: SortOrder
    company?: SortOrder
    date?: SortOrder
    contrat?: SortOrder
    icon?: SortOrder
    iconSize?: SortOrder
    cvMinuteSectionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SectionInfoAvgOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    iconSize?: SortOrder
    cvMinuteSectionId?: SortOrder
  }

  export type SectionInfoMaxOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    content?: SortOrder
    title?: SortOrder
    company?: SortOrder
    date?: SortOrder
    contrat?: SortOrder
    icon?: SortOrder
    iconSize?: SortOrder
    cvMinuteSectionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SectionInfoMinOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    content?: SortOrder
    title?: SortOrder
    company?: SortOrder
    date?: SortOrder
    contrat?: SortOrder
    icon?: SortOrder
    iconSize?: SortOrder
    cvMinuteSectionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SectionInfoSumOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    iconSize?: SortOrder
    cvMinuteSectionId?: SortOrder
  }

  export type CvMinuteSectionNullableScalarRelationFilter = {
    is?: CvMinuteSectionWhereInput | null
    isNot?: CvMinuteSectionWhereInput | null
  }

  export type AdviceCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    cvMinuteSectionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdviceAvgOrderByAggregateInput = {
    id?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    cvMinuteSectionId?: SortOrder
  }

  export type AdviceMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    cvMinuteSectionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdviceMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    cvMinuteSectionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AdviceSumOrderByAggregateInput = {
    id?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    cvMinuteSectionId?: SortOrder
  }

  export type EvaluationCountOrderByAggregateInput = {
    id?: SortOrder
    initialScore?: SortOrder
    actualScore?: SortOrder
    content?: SortOrder
    weakContent?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EvaluationAvgOrderByAggregateInput = {
    id?: SortOrder
    initialScore?: SortOrder
    actualScore?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
  }

  export type EvaluationMaxOrderByAggregateInput = {
    id?: SortOrder
    initialScore?: SortOrder
    actualScore?: SortOrder
    content?: SortOrder
    weakContent?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EvaluationMinOrderByAggregateInput = {
    id?: SortOrder
    initialScore?: SortOrder
    actualScore?: SortOrder
    content?: SortOrder
    weakContent?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EvaluationSumOrderByAggregateInput = {
    id?: SortOrder
    initialScore?: SortOrder
    actualScore?: SortOrder
    cvMinuteId?: SortOrder
    sectionInfoId?: SortOrder
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type OpenaiResponseCountOrderByAggregateInput = {
    id?: SortOrder
    responseId?: SortOrder
    request?: SortOrder
    response?: SortOrder
    index?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OpenaiResponseAvgOrderByAggregateInput = {
    id?: SortOrder
    index?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type OpenaiResponseMaxOrderByAggregateInput = {
    id?: SortOrder
    responseId?: SortOrder
    request?: SortOrder
    response?: SortOrder
    index?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OpenaiResponseMinOrderByAggregateInput = {
    id?: SortOrder
    responseId?: SortOrder
    request?: SortOrder
    response?: SortOrder
    index?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OpenaiResponseSumOrderByAggregateInput = {
    id?: SortOrder
    index?: SortOrder
    cvMinuteId?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type SectionInfoScalarRelationFilter = {
    is?: SectionInfoWhereInput
    isNot?: SectionInfoWhereInput
  }

  export type QualiCarriereResponseNullableScalarRelationFilter = {
    is?: QualiCarriereResponseWhereInput | null
    isNot?: QualiCarriereResponseWhereInput | null
  }

  export type QualiCarriereQuestionCountOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereQuestionAvgOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereQuestionMaxOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereQuestionMinOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereQuestionSumOrderByAggregateInput = {
    id?: SortOrder
    order?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereQuestionScalarRelationFilter = {
    is?: QualiCarriereQuestionWhereInput
    isNot?: QualiCarriereQuestionWhereInput
  }

  export type QualiCarriereResponseCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    questionId?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereResponseAvgOrderByAggregateInput = {
    id?: SortOrder
    questionId?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereResponseMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    questionId?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereResponseMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    questionId?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereResponseSumOrderByAggregateInput = {
    id?: SortOrder
    questionId?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereResumeCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereResumeAvgOrderByAggregateInput = {
    id?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereResumeMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereResumeMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereResumeSumOrderByAggregateInput = {
    id?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereCompetenceCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereCompetenceAvgOrderByAggregateInput = {
    id?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereCompetenceMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereCompetenceMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereCompetenceSumOrderByAggregateInput = {
    id?: SortOrder
    sectionInfoId?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereChatCountOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    content?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereChatAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type QualiCarriereChatMaxOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    content?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereChatMinOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    content?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type QualiCarriereChatSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type CvThequeCompetenceListRelationFilter = {
    every?: CvThequeCompetenceWhereInput
    some?: CvThequeCompetenceWhereInput
    none?: CvThequeCompetenceWhereInput
  }

  export type CvThequeCompetenceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CvThequeCritereCountOrderByAggregateInput = {
    id?: SortOrder
    position?: SortOrder
    domain?: SortOrder
    description?: SortOrder
    diplome?: SortOrder
    localisation?: SortOrder
    distance?: SortOrder
    experience?: SortOrder
    evaluation?: SortOrder
    saved?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeCritereAvgOrderByAggregateInput = {
    id?: SortOrder
    distance?: SortOrder
    experience?: SortOrder
    evaluation?: SortOrder
    userId?: SortOrder
  }

  export type CvThequeCritereMaxOrderByAggregateInput = {
    id?: SortOrder
    position?: SortOrder
    domain?: SortOrder
    description?: SortOrder
    diplome?: SortOrder
    localisation?: SortOrder
    distance?: SortOrder
    experience?: SortOrder
    evaluation?: SortOrder
    saved?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeCritereMinOrderByAggregateInput = {
    id?: SortOrder
    position?: SortOrder
    domain?: SortOrder
    description?: SortOrder
    diplome?: SortOrder
    localisation?: SortOrder
    distance?: SortOrder
    experience?: SortOrder
    evaluation?: SortOrder
    saved?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeCritereSumOrderByAggregateInput = {
    id?: SortOrder
    distance?: SortOrder
    experience?: SortOrder
    evaluation?: SortOrder
    userId?: SortOrder
  }

  export type CvThequeCritereScalarRelationFilter = {
    is?: CvThequeCritereWhereInput
    isNot?: CvThequeCritereWhereInput
  }

  export type CvThequeCompetenceCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeCompetenceAvgOrderByAggregateInput = {
    id?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type CvThequeCompetenceMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeCompetenceMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeCompetenceSumOrderByAggregateInput = {
    id?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type CvThequeViewCountOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    cvMinuteId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeViewAvgOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    cvMinuteId?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type CvThequeViewMaxOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    cvMinuteId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeViewMinOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    cvMinuteId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeViewSumOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    cvMinuteId?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type CvThequeUserUserIdCvThequeCritereIdCompoundUniqueInput = {
    userId: number
    cvThequeCritereId: number
  }

  export type CvThequeUserCountOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeUserAvgOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type CvThequeUserMaxOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeUserMinOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeUserSumOrderByAggregateInput = {
    id?: SortOrder
    score?: SortOrder
    userId?: SortOrder
    cvThequeCritereId?: SortOrder
  }

  export type CvThequeContactRecruiterIdCvMinuteIdCompoundUniqueInput = {
    recruiterId: number
    cvMinuteId: number
  }

  export type CvThequeContactCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    date?: SortOrder
    hour?: SortOrder
    minute?: SortOrder
    message?: SortOrder
    status?: SortOrder
    userId?: SortOrder
    recruiterId?: SortOrder
    cvMinuteId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeContactAvgOrderByAggregateInput = {
    id?: SortOrder
    hour?: SortOrder
    minute?: SortOrder
    userId?: SortOrder
    recruiterId?: SortOrder
    cvMinuteId?: SortOrder
  }

  export type CvThequeContactMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    date?: SortOrder
    hour?: SortOrder
    minute?: SortOrder
    message?: SortOrder
    status?: SortOrder
    userId?: SortOrder
    recruiterId?: SortOrder
    cvMinuteId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeContactMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    date?: SortOrder
    hour?: SortOrder
    minute?: SortOrder
    message?: SortOrder
    status?: SortOrder
    userId?: SortOrder
    recruiterId?: SortOrder
    cvMinuteId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeContactSumOrderByAggregateInput = {
    id?: SortOrder
    hour?: SortOrder
    minute?: SortOrder
    userId?: SortOrder
    recruiterId?: SortOrder
    cvMinuteId?: SortOrder
  }

  export type CvThequeContactScalarRelationFilter = {
    is?: CvThequeContactWhereInput
    isNot?: CvThequeContactWhereInput
  }

  export type CvThequeContactViewCountOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    userId?: SortOrder
    cvThequeContactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeContactViewAvgOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    userId?: SortOrder
    cvThequeContactId?: SortOrder
  }

  export type CvThequeContactViewMaxOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    userId?: SortOrder
    cvThequeContactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeContactViewMinOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    userId?: SortOrder
    cvThequeContactId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CvThequeContactViewSumOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    userId?: SortOrder
    cvThequeContactId?: SortOrder
  }

  export type FileCreateNestedManyWithoutUserInput = {
    create?: XOR<FileCreateWithoutUserInput, FileUncheckedCreateWithoutUserInput> | FileCreateWithoutUserInput[] | FileUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FileCreateOrConnectWithoutUserInput | FileCreateOrConnectWithoutUserInput[]
    createMany?: FileCreateManyUserInputEnvelope
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type CvMinuteCreateNestedManyWithoutUserInput = {
    create?: XOR<CvMinuteCreateWithoutUserInput, CvMinuteUncheckedCreateWithoutUserInput> | CvMinuteCreateWithoutUserInput[] | CvMinuteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvMinuteCreateOrConnectWithoutUserInput | CvMinuteCreateOrConnectWithoutUserInput[]
    createMany?: CvMinuteCreateManyUserInputEnvelope
    connect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
  }

  export type CvMinuteDomainCreateNestedManyWithoutUserInput = {
    create?: XOR<CvMinuteDomainCreateWithoutUserInput, CvMinuteDomainUncheckedCreateWithoutUserInput> | CvMinuteDomainCreateWithoutUserInput[] | CvMinuteDomainUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvMinuteDomainCreateOrConnectWithoutUserInput | CvMinuteDomainCreateOrConnectWithoutUserInput[]
    createMany?: CvMinuteDomainCreateManyUserInputEnvelope
    connect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
  }

  export type QualiCarriereQuestionCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutUserInput, QualiCarriereQuestionUncheckedCreateWithoutUserInput> | QualiCarriereQuestionCreateWithoutUserInput[] | QualiCarriereQuestionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutUserInput | QualiCarriereQuestionCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereQuestionCreateManyUserInputEnvelope
    connect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
  }

  export type QualiCarriereResponseCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutUserInput, QualiCarriereResponseUncheckedCreateWithoutUserInput> | QualiCarriereResponseCreateWithoutUserInput[] | QualiCarriereResponseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutUserInput | QualiCarriereResponseCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereResponseCreateManyUserInputEnvelope
    connect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
  }

  export type OpenaiResponseCreateNestedManyWithoutUserInput = {
    create?: XOR<OpenaiResponseCreateWithoutUserInput, OpenaiResponseUncheckedCreateWithoutUserInput> | OpenaiResponseCreateWithoutUserInput[] | OpenaiResponseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutUserInput | OpenaiResponseCreateOrConnectWithoutUserInput[]
    createMany?: OpenaiResponseCreateManyUserInputEnvelope
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
  }

  export type QualiCarriereChatCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereChatCreateWithoutUserInput, QualiCarriereChatUncheckedCreateWithoutUserInput> | QualiCarriereChatCreateWithoutUserInput[] | QualiCarriereChatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereChatCreateOrConnectWithoutUserInput | QualiCarriereChatCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereChatCreateManyUserInputEnvelope
    connect?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
  }

  export type QualiCarriereResumeCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereResumeCreateWithoutUserInput, QualiCarriereResumeUncheckedCreateWithoutUserInput> | QualiCarriereResumeCreateWithoutUserInput[] | QualiCarriereResumeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereResumeCreateOrConnectWithoutUserInput | QualiCarriereResumeCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereResumeCreateManyUserInputEnvelope
    connect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
  }

  export type QualiCarriereCompetenceCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereCompetenceCreateWithoutUserInput, QualiCarriereCompetenceUncheckedCreateWithoutUserInput> | QualiCarriereCompetenceCreateWithoutUserInput[] | QualiCarriereCompetenceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereCompetenceCreateOrConnectWithoutUserInput | QualiCarriereCompetenceCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereCompetenceCreateManyUserInputEnvelope
    connect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
  }

  export type CvThequeCritereCreateNestedManyWithoutUserInput = {
    create?: XOR<CvThequeCritereCreateWithoutUserInput, CvThequeCritereUncheckedCreateWithoutUserInput> | CvThequeCritereCreateWithoutUserInput[] | CvThequeCritereUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutUserInput | CvThequeCritereCreateOrConnectWithoutUserInput[]
    createMany?: CvThequeCritereCreateManyUserInputEnvelope
    connect?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
  }

  export type CvThequeUserCreateNestedManyWithoutUserInput = {
    create?: XOR<CvThequeUserCreateWithoutUserInput, CvThequeUserUncheckedCreateWithoutUserInput> | CvThequeUserCreateWithoutUserInput[] | CvThequeUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeUserCreateOrConnectWithoutUserInput | CvThequeUserCreateOrConnectWithoutUserInput[]
    createMany?: CvThequeUserCreateManyUserInputEnvelope
    connect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
  }

  export type CvThequeContactCreateNestedManyWithoutUserInput = {
    create?: XOR<CvThequeContactCreateWithoutUserInput, CvThequeContactUncheckedCreateWithoutUserInput> | CvThequeContactCreateWithoutUserInput[] | CvThequeContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutUserInput | CvThequeContactCreateOrConnectWithoutUserInput[]
    createMany?: CvThequeContactCreateManyUserInputEnvelope
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
  }

  export type CvThequeContactCreateNestedManyWithoutRecruiterInput = {
    create?: XOR<CvThequeContactCreateWithoutRecruiterInput, CvThequeContactUncheckedCreateWithoutRecruiterInput> | CvThequeContactCreateWithoutRecruiterInput[] | CvThequeContactUncheckedCreateWithoutRecruiterInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutRecruiterInput | CvThequeContactCreateOrConnectWithoutRecruiterInput[]
    createMany?: CvThequeContactCreateManyRecruiterInputEnvelope
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
  }

  export type CvThequeContactViewCreateNestedManyWithoutUserInput = {
    create?: XOR<CvThequeContactViewCreateWithoutUserInput, CvThequeContactViewUncheckedCreateWithoutUserInput> | CvThequeContactViewCreateWithoutUserInput[] | CvThequeContactViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeContactViewCreateOrConnectWithoutUserInput | CvThequeContactViewCreateOrConnectWithoutUserInput[]
    createMany?: CvThequeContactViewCreateManyUserInputEnvelope
    connect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
  }

  export type FileUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FileCreateWithoutUserInput, FileUncheckedCreateWithoutUserInput> | FileCreateWithoutUserInput[] | FileUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FileCreateOrConnectWithoutUserInput | FileCreateOrConnectWithoutUserInput[]
    createMany?: FileCreateManyUserInputEnvelope
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type CvMinuteUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CvMinuteCreateWithoutUserInput, CvMinuteUncheckedCreateWithoutUserInput> | CvMinuteCreateWithoutUserInput[] | CvMinuteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvMinuteCreateOrConnectWithoutUserInput | CvMinuteCreateOrConnectWithoutUserInput[]
    createMany?: CvMinuteCreateManyUserInputEnvelope
    connect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
  }

  export type CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CvMinuteDomainCreateWithoutUserInput, CvMinuteDomainUncheckedCreateWithoutUserInput> | CvMinuteDomainCreateWithoutUserInput[] | CvMinuteDomainUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvMinuteDomainCreateOrConnectWithoutUserInput | CvMinuteDomainCreateOrConnectWithoutUserInput[]
    createMany?: CvMinuteDomainCreateManyUserInputEnvelope
    connect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
  }

  export type QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutUserInput, QualiCarriereQuestionUncheckedCreateWithoutUserInput> | QualiCarriereQuestionCreateWithoutUserInput[] | QualiCarriereQuestionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutUserInput | QualiCarriereQuestionCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereQuestionCreateManyUserInputEnvelope
    connect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
  }

  export type QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutUserInput, QualiCarriereResponseUncheckedCreateWithoutUserInput> | QualiCarriereResponseCreateWithoutUserInput[] | QualiCarriereResponseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutUserInput | QualiCarriereResponseCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereResponseCreateManyUserInputEnvelope
    connect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
  }

  export type OpenaiResponseUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<OpenaiResponseCreateWithoutUserInput, OpenaiResponseUncheckedCreateWithoutUserInput> | OpenaiResponseCreateWithoutUserInput[] | OpenaiResponseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutUserInput | OpenaiResponseCreateOrConnectWithoutUserInput[]
    createMany?: OpenaiResponseCreateManyUserInputEnvelope
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
  }

  export type QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereChatCreateWithoutUserInput, QualiCarriereChatUncheckedCreateWithoutUserInput> | QualiCarriereChatCreateWithoutUserInput[] | QualiCarriereChatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereChatCreateOrConnectWithoutUserInput | QualiCarriereChatCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereChatCreateManyUserInputEnvelope
    connect?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
  }

  export type QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereResumeCreateWithoutUserInput, QualiCarriereResumeUncheckedCreateWithoutUserInput> | QualiCarriereResumeCreateWithoutUserInput[] | QualiCarriereResumeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereResumeCreateOrConnectWithoutUserInput | QualiCarriereResumeCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereResumeCreateManyUserInputEnvelope
    connect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
  }

  export type QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<QualiCarriereCompetenceCreateWithoutUserInput, QualiCarriereCompetenceUncheckedCreateWithoutUserInput> | QualiCarriereCompetenceCreateWithoutUserInput[] | QualiCarriereCompetenceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereCompetenceCreateOrConnectWithoutUserInput | QualiCarriereCompetenceCreateOrConnectWithoutUserInput[]
    createMany?: QualiCarriereCompetenceCreateManyUserInputEnvelope
    connect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
  }

  export type CvThequeCritereUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CvThequeCritereCreateWithoutUserInput, CvThequeCritereUncheckedCreateWithoutUserInput> | CvThequeCritereCreateWithoutUserInput[] | CvThequeCritereUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutUserInput | CvThequeCritereCreateOrConnectWithoutUserInput[]
    createMany?: CvThequeCritereCreateManyUserInputEnvelope
    connect?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
  }

  export type CvThequeUserUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CvThequeUserCreateWithoutUserInput, CvThequeUserUncheckedCreateWithoutUserInput> | CvThequeUserCreateWithoutUserInput[] | CvThequeUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeUserCreateOrConnectWithoutUserInput | CvThequeUserCreateOrConnectWithoutUserInput[]
    createMany?: CvThequeUserCreateManyUserInputEnvelope
    connect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
  }

  export type CvThequeContactUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CvThequeContactCreateWithoutUserInput, CvThequeContactUncheckedCreateWithoutUserInput> | CvThequeContactCreateWithoutUserInput[] | CvThequeContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutUserInput | CvThequeContactCreateOrConnectWithoutUserInput[]
    createMany?: CvThequeContactCreateManyUserInputEnvelope
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
  }

  export type CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput = {
    create?: XOR<CvThequeContactCreateWithoutRecruiterInput, CvThequeContactUncheckedCreateWithoutRecruiterInput> | CvThequeContactCreateWithoutRecruiterInput[] | CvThequeContactUncheckedCreateWithoutRecruiterInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutRecruiterInput | CvThequeContactCreateOrConnectWithoutRecruiterInput[]
    createMany?: CvThequeContactCreateManyRecruiterInputEnvelope
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
  }

  export type CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CvThequeContactViewCreateWithoutUserInput, CvThequeContactViewUncheckedCreateWithoutUserInput> | CvThequeContactViewCreateWithoutUserInput[] | CvThequeContactViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeContactViewCreateOrConnectWithoutUserInput | CvThequeContactViewCreateOrConnectWithoutUserInput[]
    createMany?: CvThequeContactViewCreateManyUserInputEnvelope
    connect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type FileUpdateManyWithoutUserNestedInput = {
    create?: XOR<FileCreateWithoutUserInput, FileUncheckedCreateWithoutUserInput> | FileCreateWithoutUserInput[] | FileUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FileCreateOrConnectWithoutUserInput | FileCreateOrConnectWithoutUserInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutUserInput | FileUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FileCreateManyUserInputEnvelope
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutUserInput | FileUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FileUpdateManyWithWhereWithoutUserInput | FileUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type CvMinuteUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvMinuteCreateWithoutUserInput, CvMinuteUncheckedCreateWithoutUserInput> | CvMinuteCreateWithoutUserInput[] | CvMinuteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvMinuteCreateOrConnectWithoutUserInput | CvMinuteCreateOrConnectWithoutUserInput[]
    upsert?: CvMinuteUpsertWithWhereUniqueWithoutUserInput | CvMinuteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvMinuteCreateManyUserInputEnvelope
    set?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    disconnect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    delete?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    connect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    update?: CvMinuteUpdateWithWhereUniqueWithoutUserInput | CvMinuteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvMinuteUpdateManyWithWhereWithoutUserInput | CvMinuteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvMinuteScalarWhereInput | CvMinuteScalarWhereInput[]
  }

  export type CvMinuteDomainUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvMinuteDomainCreateWithoutUserInput, CvMinuteDomainUncheckedCreateWithoutUserInput> | CvMinuteDomainCreateWithoutUserInput[] | CvMinuteDomainUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvMinuteDomainCreateOrConnectWithoutUserInput | CvMinuteDomainCreateOrConnectWithoutUserInput[]
    upsert?: CvMinuteDomainUpsertWithWhereUniqueWithoutUserInput | CvMinuteDomainUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvMinuteDomainCreateManyUserInputEnvelope
    set?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    disconnect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    delete?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    connect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    update?: CvMinuteDomainUpdateWithWhereUniqueWithoutUserInput | CvMinuteDomainUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvMinuteDomainUpdateManyWithWhereWithoutUserInput | CvMinuteDomainUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvMinuteDomainScalarWhereInput | CvMinuteDomainScalarWhereInput[]
  }

  export type QualiCarriereQuestionUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutUserInput, QualiCarriereQuestionUncheckedCreateWithoutUserInput> | QualiCarriereQuestionCreateWithoutUserInput[] | QualiCarriereQuestionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutUserInput | QualiCarriereQuestionCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereQuestionUpsertWithWhereUniqueWithoutUserInput | QualiCarriereQuestionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereQuestionCreateManyUserInputEnvelope
    set?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    disconnect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    delete?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    connect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    update?: QualiCarriereQuestionUpdateWithWhereUniqueWithoutUserInput | QualiCarriereQuestionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereQuestionUpdateManyWithWhereWithoutUserInput | QualiCarriereQuestionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereQuestionScalarWhereInput | QualiCarriereQuestionScalarWhereInput[]
  }

  export type QualiCarriereResponseUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutUserInput, QualiCarriereResponseUncheckedCreateWithoutUserInput> | QualiCarriereResponseCreateWithoutUserInput[] | QualiCarriereResponseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutUserInput | QualiCarriereResponseCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereResponseUpsertWithWhereUniqueWithoutUserInput | QualiCarriereResponseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereResponseCreateManyUserInputEnvelope
    set?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    disconnect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    delete?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    connect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    update?: QualiCarriereResponseUpdateWithWhereUniqueWithoutUserInput | QualiCarriereResponseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereResponseUpdateManyWithWhereWithoutUserInput | QualiCarriereResponseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereResponseScalarWhereInput | QualiCarriereResponseScalarWhereInput[]
  }

  export type OpenaiResponseUpdateManyWithoutUserNestedInput = {
    create?: XOR<OpenaiResponseCreateWithoutUserInput, OpenaiResponseUncheckedCreateWithoutUserInput> | OpenaiResponseCreateWithoutUserInput[] | OpenaiResponseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutUserInput | OpenaiResponseCreateOrConnectWithoutUserInput[]
    upsert?: OpenaiResponseUpsertWithWhereUniqueWithoutUserInput | OpenaiResponseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OpenaiResponseCreateManyUserInputEnvelope
    set?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    disconnect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    delete?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    update?: OpenaiResponseUpdateWithWhereUniqueWithoutUserInput | OpenaiResponseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OpenaiResponseUpdateManyWithWhereWithoutUserInput | OpenaiResponseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OpenaiResponseScalarWhereInput | OpenaiResponseScalarWhereInput[]
  }

  export type QualiCarriereChatUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereChatCreateWithoutUserInput, QualiCarriereChatUncheckedCreateWithoutUserInput> | QualiCarriereChatCreateWithoutUserInput[] | QualiCarriereChatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereChatCreateOrConnectWithoutUserInput | QualiCarriereChatCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereChatUpsertWithWhereUniqueWithoutUserInput | QualiCarriereChatUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereChatCreateManyUserInputEnvelope
    set?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
    disconnect?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
    delete?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
    connect?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
    update?: QualiCarriereChatUpdateWithWhereUniqueWithoutUserInput | QualiCarriereChatUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereChatUpdateManyWithWhereWithoutUserInput | QualiCarriereChatUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereChatScalarWhereInput | QualiCarriereChatScalarWhereInput[]
  }

  export type QualiCarriereResumeUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereResumeCreateWithoutUserInput, QualiCarriereResumeUncheckedCreateWithoutUserInput> | QualiCarriereResumeCreateWithoutUserInput[] | QualiCarriereResumeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereResumeCreateOrConnectWithoutUserInput | QualiCarriereResumeCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereResumeUpsertWithWhereUniqueWithoutUserInput | QualiCarriereResumeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereResumeCreateManyUserInputEnvelope
    set?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    disconnect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    delete?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    connect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    update?: QualiCarriereResumeUpdateWithWhereUniqueWithoutUserInput | QualiCarriereResumeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereResumeUpdateManyWithWhereWithoutUserInput | QualiCarriereResumeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereResumeScalarWhereInput | QualiCarriereResumeScalarWhereInput[]
  }

  export type QualiCarriereCompetenceUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereCompetenceCreateWithoutUserInput, QualiCarriereCompetenceUncheckedCreateWithoutUserInput> | QualiCarriereCompetenceCreateWithoutUserInput[] | QualiCarriereCompetenceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereCompetenceCreateOrConnectWithoutUserInput | QualiCarriereCompetenceCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereCompetenceUpsertWithWhereUniqueWithoutUserInput | QualiCarriereCompetenceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereCompetenceCreateManyUserInputEnvelope
    set?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    disconnect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    delete?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    connect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    update?: QualiCarriereCompetenceUpdateWithWhereUniqueWithoutUserInput | QualiCarriereCompetenceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereCompetenceUpdateManyWithWhereWithoutUserInput | QualiCarriereCompetenceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereCompetenceScalarWhereInput | QualiCarriereCompetenceScalarWhereInput[]
  }

  export type CvThequeCritereUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvThequeCritereCreateWithoutUserInput, CvThequeCritereUncheckedCreateWithoutUserInput> | CvThequeCritereCreateWithoutUserInput[] | CvThequeCritereUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutUserInput | CvThequeCritereCreateOrConnectWithoutUserInput[]
    upsert?: CvThequeCritereUpsertWithWhereUniqueWithoutUserInput | CvThequeCritereUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvThequeCritereCreateManyUserInputEnvelope
    set?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
    disconnect?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
    delete?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
    connect?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
    update?: CvThequeCritereUpdateWithWhereUniqueWithoutUserInput | CvThequeCritereUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvThequeCritereUpdateManyWithWhereWithoutUserInput | CvThequeCritereUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvThequeCritereScalarWhereInput | CvThequeCritereScalarWhereInput[]
  }

  export type CvThequeUserUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvThequeUserCreateWithoutUserInput, CvThequeUserUncheckedCreateWithoutUserInput> | CvThequeUserCreateWithoutUserInput[] | CvThequeUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeUserCreateOrConnectWithoutUserInput | CvThequeUserCreateOrConnectWithoutUserInput[]
    upsert?: CvThequeUserUpsertWithWhereUniqueWithoutUserInput | CvThequeUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvThequeUserCreateManyUserInputEnvelope
    set?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    disconnect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    delete?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    connect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    update?: CvThequeUserUpdateWithWhereUniqueWithoutUserInput | CvThequeUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvThequeUserUpdateManyWithWhereWithoutUserInput | CvThequeUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvThequeUserScalarWhereInput | CvThequeUserScalarWhereInput[]
  }

  export type CvThequeContactUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvThequeContactCreateWithoutUserInput, CvThequeContactUncheckedCreateWithoutUserInput> | CvThequeContactCreateWithoutUserInput[] | CvThequeContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutUserInput | CvThequeContactCreateOrConnectWithoutUserInput[]
    upsert?: CvThequeContactUpsertWithWhereUniqueWithoutUserInput | CvThequeContactUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvThequeContactCreateManyUserInputEnvelope
    set?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    disconnect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    delete?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    update?: CvThequeContactUpdateWithWhereUniqueWithoutUserInput | CvThequeContactUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvThequeContactUpdateManyWithWhereWithoutUserInput | CvThequeContactUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvThequeContactScalarWhereInput | CvThequeContactScalarWhereInput[]
  }

  export type CvThequeContactUpdateManyWithoutRecruiterNestedInput = {
    create?: XOR<CvThequeContactCreateWithoutRecruiterInput, CvThequeContactUncheckedCreateWithoutRecruiterInput> | CvThequeContactCreateWithoutRecruiterInput[] | CvThequeContactUncheckedCreateWithoutRecruiterInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutRecruiterInput | CvThequeContactCreateOrConnectWithoutRecruiterInput[]
    upsert?: CvThequeContactUpsertWithWhereUniqueWithoutRecruiterInput | CvThequeContactUpsertWithWhereUniqueWithoutRecruiterInput[]
    createMany?: CvThequeContactCreateManyRecruiterInputEnvelope
    set?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    disconnect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    delete?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    update?: CvThequeContactUpdateWithWhereUniqueWithoutRecruiterInput | CvThequeContactUpdateWithWhereUniqueWithoutRecruiterInput[]
    updateMany?: CvThequeContactUpdateManyWithWhereWithoutRecruiterInput | CvThequeContactUpdateManyWithWhereWithoutRecruiterInput[]
    deleteMany?: CvThequeContactScalarWhereInput | CvThequeContactScalarWhereInput[]
  }

  export type CvThequeContactViewUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvThequeContactViewCreateWithoutUserInput, CvThequeContactViewUncheckedCreateWithoutUserInput> | CvThequeContactViewCreateWithoutUserInput[] | CvThequeContactViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeContactViewCreateOrConnectWithoutUserInput | CvThequeContactViewCreateOrConnectWithoutUserInput[]
    upsert?: CvThequeContactViewUpsertWithWhereUniqueWithoutUserInput | CvThequeContactViewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvThequeContactViewCreateManyUserInputEnvelope
    set?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    disconnect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    delete?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    connect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    update?: CvThequeContactViewUpdateWithWhereUniqueWithoutUserInput | CvThequeContactViewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvThequeContactViewUpdateManyWithWhereWithoutUserInput | CvThequeContactViewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvThequeContactViewScalarWhereInput | CvThequeContactViewScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FileUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FileCreateWithoutUserInput, FileUncheckedCreateWithoutUserInput> | FileCreateWithoutUserInput[] | FileUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FileCreateOrConnectWithoutUserInput | FileCreateOrConnectWithoutUserInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutUserInput | FileUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FileCreateManyUserInputEnvelope
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutUserInput | FileUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FileUpdateManyWithWhereWithoutUserInput | FileUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type CvMinuteUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvMinuteCreateWithoutUserInput, CvMinuteUncheckedCreateWithoutUserInput> | CvMinuteCreateWithoutUserInput[] | CvMinuteUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvMinuteCreateOrConnectWithoutUserInput | CvMinuteCreateOrConnectWithoutUserInput[]
    upsert?: CvMinuteUpsertWithWhereUniqueWithoutUserInput | CvMinuteUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvMinuteCreateManyUserInputEnvelope
    set?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    disconnect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    delete?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    connect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    update?: CvMinuteUpdateWithWhereUniqueWithoutUserInput | CvMinuteUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvMinuteUpdateManyWithWhereWithoutUserInput | CvMinuteUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvMinuteScalarWhereInput | CvMinuteScalarWhereInput[]
  }

  export type CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvMinuteDomainCreateWithoutUserInput, CvMinuteDomainUncheckedCreateWithoutUserInput> | CvMinuteDomainCreateWithoutUserInput[] | CvMinuteDomainUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvMinuteDomainCreateOrConnectWithoutUserInput | CvMinuteDomainCreateOrConnectWithoutUserInput[]
    upsert?: CvMinuteDomainUpsertWithWhereUniqueWithoutUserInput | CvMinuteDomainUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvMinuteDomainCreateManyUserInputEnvelope
    set?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    disconnect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    delete?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    connect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    update?: CvMinuteDomainUpdateWithWhereUniqueWithoutUserInput | CvMinuteDomainUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvMinuteDomainUpdateManyWithWhereWithoutUserInput | CvMinuteDomainUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvMinuteDomainScalarWhereInput | CvMinuteDomainScalarWhereInput[]
  }

  export type QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutUserInput, QualiCarriereQuestionUncheckedCreateWithoutUserInput> | QualiCarriereQuestionCreateWithoutUserInput[] | QualiCarriereQuestionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutUserInput | QualiCarriereQuestionCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereQuestionUpsertWithWhereUniqueWithoutUserInput | QualiCarriereQuestionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereQuestionCreateManyUserInputEnvelope
    set?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    disconnect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    delete?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    connect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    update?: QualiCarriereQuestionUpdateWithWhereUniqueWithoutUserInput | QualiCarriereQuestionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereQuestionUpdateManyWithWhereWithoutUserInput | QualiCarriereQuestionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereQuestionScalarWhereInput | QualiCarriereQuestionScalarWhereInput[]
  }

  export type QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutUserInput, QualiCarriereResponseUncheckedCreateWithoutUserInput> | QualiCarriereResponseCreateWithoutUserInput[] | QualiCarriereResponseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutUserInput | QualiCarriereResponseCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereResponseUpsertWithWhereUniqueWithoutUserInput | QualiCarriereResponseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereResponseCreateManyUserInputEnvelope
    set?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    disconnect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    delete?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    connect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    update?: QualiCarriereResponseUpdateWithWhereUniqueWithoutUserInput | QualiCarriereResponseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereResponseUpdateManyWithWhereWithoutUserInput | QualiCarriereResponseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereResponseScalarWhereInput | QualiCarriereResponseScalarWhereInput[]
  }

  export type OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<OpenaiResponseCreateWithoutUserInput, OpenaiResponseUncheckedCreateWithoutUserInput> | OpenaiResponseCreateWithoutUserInput[] | OpenaiResponseUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutUserInput | OpenaiResponseCreateOrConnectWithoutUserInput[]
    upsert?: OpenaiResponseUpsertWithWhereUniqueWithoutUserInput | OpenaiResponseUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OpenaiResponseCreateManyUserInputEnvelope
    set?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    disconnect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    delete?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    update?: OpenaiResponseUpdateWithWhereUniqueWithoutUserInput | OpenaiResponseUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OpenaiResponseUpdateManyWithWhereWithoutUserInput | OpenaiResponseUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OpenaiResponseScalarWhereInput | OpenaiResponseScalarWhereInput[]
  }

  export type QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereChatCreateWithoutUserInput, QualiCarriereChatUncheckedCreateWithoutUserInput> | QualiCarriereChatCreateWithoutUserInput[] | QualiCarriereChatUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereChatCreateOrConnectWithoutUserInput | QualiCarriereChatCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereChatUpsertWithWhereUniqueWithoutUserInput | QualiCarriereChatUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereChatCreateManyUserInputEnvelope
    set?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
    disconnect?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
    delete?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
    connect?: QualiCarriereChatWhereUniqueInput | QualiCarriereChatWhereUniqueInput[]
    update?: QualiCarriereChatUpdateWithWhereUniqueWithoutUserInput | QualiCarriereChatUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereChatUpdateManyWithWhereWithoutUserInput | QualiCarriereChatUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereChatScalarWhereInput | QualiCarriereChatScalarWhereInput[]
  }

  export type QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereResumeCreateWithoutUserInput, QualiCarriereResumeUncheckedCreateWithoutUserInput> | QualiCarriereResumeCreateWithoutUserInput[] | QualiCarriereResumeUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereResumeCreateOrConnectWithoutUserInput | QualiCarriereResumeCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereResumeUpsertWithWhereUniqueWithoutUserInput | QualiCarriereResumeUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereResumeCreateManyUserInputEnvelope
    set?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    disconnect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    delete?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    connect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    update?: QualiCarriereResumeUpdateWithWhereUniqueWithoutUserInput | QualiCarriereResumeUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereResumeUpdateManyWithWhereWithoutUserInput | QualiCarriereResumeUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereResumeScalarWhereInput | QualiCarriereResumeScalarWhereInput[]
  }

  export type QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<QualiCarriereCompetenceCreateWithoutUserInput, QualiCarriereCompetenceUncheckedCreateWithoutUserInput> | QualiCarriereCompetenceCreateWithoutUserInput[] | QualiCarriereCompetenceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: QualiCarriereCompetenceCreateOrConnectWithoutUserInput | QualiCarriereCompetenceCreateOrConnectWithoutUserInput[]
    upsert?: QualiCarriereCompetenceUpsertWithWhereUniqueWithoutUserInput | QualiCarriereCompetenceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: QualiCarriereCompetenceCreateManyUserInputEnvelope
    set?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    disconnect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    delete?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    connect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    update?: QualiCarriereCompetenceUpdateWithWhereUniqueWithoutUserInput | QualiCarriereCompetenceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: QualiCarriereCompetenceUpdateManyWithWhereWithoutUserInput | QualiCarriereCompetenceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: QualiCarriereCompetenceScalarWhereInput | QualiCarriereCompetenceScalarWhereInput[]
  }

  export type CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvThequeCritereCreateWithoutUserInput, CvThequeCritereUncheckedCreateWithoutUserInput> | CvThequeCritereCreateWithoutUserInput[] | CvThequeCritereUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutUserInput | CvThequeCritereCreateOrConnectWithoutUserInput[]
    upsert?: CvThequeCritereUpsertWithWhereUniqueWithoutUserInput | CvThequeCritereUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvThequeCritereCreateManyUserInputEnvelope
    set?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
    disconnect?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
    delete?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
    connect?: CvThequeCritereWhereUniqueInput | CvThequeCritereWhereUniqueInput[]
    update?: CvThequeCritereUpdateWithWhereUniqueWithoutUserInput | CvThequeCritereUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvThequeCritereUpdateManyWithWhereWithoutUserInput | CvThequeCritereUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvThequeCritereScalarWhereInput | CvThequeCritereScalarWhereInput[]
  }

  export type CvThequeUserUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvThequeUserCreateWithoutUserInput, CvThequeUserUncheckedCreateWithoutUserInput> | CvThequeUserCreateWithoutUserInput[] | CvThequeUserUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeUserCreateOrConnectWithoutUserInput | CvThequeUserCreateOrConnectWithoutUserInput[]
    upsert?: CvThequeUserUpsertWithWhereUniqueWithoutUserInput | CvThequeUserUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvThequeUserCreateManyUserInputEnvelope
    set?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    disconnect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    delete?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    connect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    update?: CvThequeUserUpdateWithWhereUniqueWithoutUserInput | CvThequeUserUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvThequeUserUpdateManyWithWhereWithoutUserInput | CvThequeUserUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvThequeUserScalarWhereInput | CvThequeUserScalarWhereInput[]
  }

  export type CvThequeContactUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvThequeContactCreateWithoutUserInput, CvThequeContactUncheckedCreateWithoutUserInput> | CvThequeContactCreateWithoutUserInput[] | CvThequeContactUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutUserInput | CvThequeContactCreateOrConnectWithoutUserInput[]
    upsert?: CvThequeContactUpsertWithWhereUniqueWithoutUserInput | CvThequeContactUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvThequeContactCreateManyUserInputEnvelope
    set?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    disconnect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    delete?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    update?: CvThequeContactUpdateWithWhereUniqueWithoutUserInput | CvThequeContactUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvThequeContactUpdateManyWithWhereWithoutUserInput | CvThequeContactUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvThequeContactScalarWhereInput | CvThequeContactScalarWhereInput[]
  }

  export type CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput = {
    create?: XOR<CvThequeContactCreateWithoutRecruiterInput, CvThequeContactUncheckedCreateWithoutRecruiterInput> | CvThequeContactCreateWithoutRecruiterInput[] | CvThequeContactUncheckedCreateWithoutRecruiterInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutRecruiterInput | CvThequeContactCreateOrConnectWithoutRecruiterInput[]
    upsert?: CvThequeContactUpsertWithWhereUniqueWithoutRecruiterInput | CvThequeContactUpsertWithWhereUniqueWithoutRecruiterInput[]
    createMany?: CvThequeContactCreateManyRecruiterInputEnvelope
    set?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    disconnect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    delete?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    update?: CvThequeContactUpdateWithWhereUniqueWithoutRecruiterInput | CvThequeContactUpdateWithWhereUniqueWithoutRecruiterInput[]
    updateMany?: CvThequeContactUpdateManyWithWhereWithoutRecruiterInput | CvThequeContactUpdateManyWithWhereWithoutRecruiterInput[]
    deleteMany?: CvThequeContactScalarWhereInput | CvThequeContactScalarWhereInput[]
  }

  export type CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CvThequeContactViewCreateWithoutUserInput, CvThequeContactViewUncheckedCreateWithoutUserInput> | CvThequeContactViewCreateWithoutUserInput[] | CvThequeContactViewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CvThequeContactViewCreateOrConnectWithoutUserInput | CvThequeContactViewCreateOrConnectWithoutUserInput[]
    upsert?: CvThequeContactViewUpsertWithWhereUniqueWithoutUserInput | CvThequeContactViewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CvThequeContactViewCreateManyUserInputEnvelope
    set?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    disconnect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    delete?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    connect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    update?: CvThequeContactViewUpdateWithWhereUniqueWithoutUserInput | CvThequeContactViewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CvThequeContactViewUpdateManyWithWhereWithoutUserInput | CvThequeContactViewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CvThequeContactViewScalarWhereInput | CvThequeContactViewScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutFilesInput = {
    create?: XOR<UserCreateWithoutFilesInput, UserUncheckedCreateWithoutFilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFilesInput
    connect?: UserWhereUniqueInput
  }

  export type CvMinuteCreateNestedOneWithoutFilesInput = {
    create?: XOR<CvMinuteCreateWithoutFilesInput, CvMinuteUncheckedCreateWithoutFilesInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutFilesInput
    connect?: CvMinuteWhereUniqueInput
  }

  export type SectionInfoCreateNestedOneWithoutFileInput = {
    create?: XOR<SectionInfoCreateWithoutFileInput, SectionInfoUncheckedCreateWithoutFileInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutFileInput
    connect?: SectionInfoWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutFilesNestedInput = {
    create?: XOR<UserCreateWithoutFilesInput, UserUncheckedCreateWithoutFilesInput>
    connectOrCreate?: UserCreateOrConnectWithoutFilesInput
    upsert?: UserUpsertWithoutFilesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFilesInput, UserUpdateWithoutFilesInput>, UserUncheckedUpdateWithoutFilesInput>
  }

  export type CvMinuteUpdateOneWithoutFilesNestedInput = {
    create?: XOR<CvMinuteCreateWithoutFilesInput, CvMinuteUncheckedCreateWithoutFilesInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutFilesInput
    upsert?: CvMinuteUpsertWithoutFilesInput
    disconnect?: CvMinuteWhereInput | boolean
    delete?: CvMinuteWhereInput | boolean
    connect?: CvMinuteWhereUniqueInput
    update?: XOR<XOR<CvMinuteUpdateToOneWithWhereWithoutFilesInput, CvMinuteUpdateWithoutFilesInput>, CvMinuteUncheckedUpdateWithoutFilesInput>
  }

  export type SectionInfoUpdateOneWithoutFileNestedInput = {
    create?: XOR<SectionInfoCreateWithoutFileInput, SectionInfoUncheckedCreateWithoutFileInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutFileInput
    upsert?: SectionInfoUpsertWithoutFileInput
    disconnect?: SectionInfoWhereInput | boolean
    delete?: SectionInfoWhereInput | boolean
    connect?: SectionInfoWhereUniqueInput
    update?: XOR<XOR<SectionInfoUpdateToOneWithWhereWithoutFileInput, SectionInfoUpdateWithoutFileInput>, SectionInfoUncheckedUpdateWithoutFileInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserCreateNestedOneWithoutCvMinutesInput = {
    create?: XOR<UserCreateWithoutCvMinutesInput, UserUncheckedCreateWithoutCvMinutesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvMinutesInput
    connect?: UserWhereUniqueInput
  }

  export type CvThequeCritereCreateNestedOneWithoutCvMinutesInput = {
    create?: XOR<CvThequeCritereCreateWithoutCvMinutesInput, CvThequeCritereUncheckedCreateWithoutCvMinutesInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutCvMinutesInput
    connect?: CvThequeCritereWhereUniqueInput
  }

  export type FileCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<FileCreateWithoutCvMinuteInput, FileUncheckedCreateWithoutCvMinuteInput> | FileCreateWithoutCvMinuteInput[] | FileUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: FileCreateOrConnectWithoutCvMinuteInput | FileCreateOrConnectWithoutCvMinuteInput[]
    createMany?: FileCreateManyCvMinuteInputEnvelope
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type AdviceCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<AdviceCreateWithoutCvMinuteInput, AdviceUncheckedCreateWithoutCvMinuteInput> | AdviceCreateWithoutCvMinuteInput[] | AdviceUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutCvMinuteInput | AdviceCreateOrConnectWithoutCvMinuteInput[]
    createMany?: AdviceCreateManyCvMinuteInputEnvelope
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
  }

  export type CvMinuteSectionCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<CvMinuteSectionCreateWithoutCvMinuteInput, CvMinuteSectionUncheckedCreateWithoutCvMinuteInput> | CvMinuteSectionCreateWithoutCvMinuteInput[] | CvMinuteSectionUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutCvMinuteInput | CvMinuteSectionCreateOrConnectWithoutCvMinuteInput[]
    createMany?: CvMinuteSectionCreateManyCvMinuteInputEnvelope
    connect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
  }

  export type OpenaiResponseCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<OpenaiResponseCreateWithoutCvMinuteInput, OpenaiResponseUncheckedCreateWithoutCvMinuteInput> | OpenaiResponseCreateWithoutCvMinuteInput[] | OpenaiResponseUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutCvMinuteInput | OpenaiResponseCreateOrConnectWithoutCvMinuteInput[]
    createMany?: OpenaiResponseCreateManyCvMinuteInputEnvelope
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
  }

  export type EvaluationCreateNestedOneWithoutCvMinuteInput = {
    create?: XOR<EvaluationCreateWithoutCvMinuteInput, EvaluationUncheckedCreateWithoutCvMinuteInput>
    connectOrCreate?: EvaluationCreateOrConnectWithoutCvMinuteInput
    connect?: EvaluationWhereUniqueInput
  }

  export type CvThequeViewCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<CvThequeViewCreateWithoutCvMinuteInput, CvThequeViewUncheckedCreateWithoutCvMinuteInput> | CvThequeViewCreateWithoutCvMinuteInput[] | CvThequeViewUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvThequeViewCreateOrConnectWithoutCvMinuteInput | CvThequeViewCreateOrConnectWithoutCvMinuteInput[]
    createMany?: CvThequeViewCreateManyCvMinuteInputEnvelope
    connect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
  }

  export type CvMinuteDomainCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<CvMinuteDomainCreateWithoutCvMinuteInput, CvMinuteDomainUncheckedCreateWithoutCvMinuteInput> | CvMinuteDomainCreateWithoutCvMinuteInput[] | CvMinuteDomainUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvMinuteDomainCreateOrConnectWithoutCvMinuteInput | CvMinuteDomainCreateOrConnectWithoutCvMinuteInput[]
    createMany?: CvMinuteDomainCreateManyCvMinuteInputEnvelope
    connect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
  }

  export type CvThequeContactCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<CvThequeContactCreateWithoutCvMinuteInput, CvThequeContactUncheckedCreateWithoutCvMinuteInput> | CvThequeContactCreateWithoutCvMinuteInput[] | CvThequeContactUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutCvMinuteInput | CvThequeContactCreateOrConnectWithoutCvMinuteInput[]
    createMany?: CvThequeContactCreateManyCvMinuteInputEnvelope
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
  }

  export type FileUncheckedCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<FileCreateWithoutCvMinuteInput, FileUncheckedCreateWithoutCvMinuteInput> | FileCreateWithoutCvMinuteInput[] | FileUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: FileCreateOrConnectWithoutCvMinuteInput | FileCreateOrConnectWithoutCvMinuteInput[]
    createMany?: FileCreateManyCvMinuteInputEnvelope
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type AdviceUncheckedCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<AdviceCreateWithoutCvMinuteInput, AdviceUncheckedCreateWithoutCvMinuteInput> | AdviceCreateWithoutCvMinuteInput[] | AdviceUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutCvMinuteInput | AdviceCreateOrConnectWithoutCvMinuteInput[]
    createMany?: AdviceCreateManyCvMinuteInputEnvelope
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
  }

  export type CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<CvMinuteSectionCreateWithoutCvMinuteInput, CvMinuteSectionUncheckedCreateWithoutCvMinuteInput> | CvMinuteSectionCreateWithoutCvMinuteInput[] | CvMinuteSectionUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutCvMinuteInput | CvMinuteSectionCreateOrConnectWithoutCvMinuteInput[]
    createMany?: CvMinuteSectionCreateManyCvMinuteInputEnvelope
    connect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
  }

  export type OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<OpenaiResponseCreateWithoutCvMinuteInput, OpenaiResponseUncheckedCreateWithoutCvMinuteInput> | OpenaiResponseCreateWithoutCvMinuteInput[] | OpenaiResponseUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutCvMinuteInput | OpenaiResponseCreateOrConnectWithoutCvMinuteInput[]
    createMany?: OpenaiResponseCreateManyCvMinuteInputEnvelope
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
  }

  export type EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput = {
    create?: XOR<EvaluationCreateWithoutCvMinuteInput, EvaluationUncheckedCreateWithoutCvMinuteInput>
    connectOrCreate?: EvaluationCreateOrConnectWithoutCvMinuteInput
    connect?: EvaluationWhereUniqueInput
  }

  export type CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<CvThequeViewCreateWithoutCvMinuteInput, CvThequeViewUncheckedCreateWithoutCvMinuteInput> | CvThequeViewCreateWithoutCvMinuteInput[] | CvThequeViewUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvThequeViewCreateOrConnectWithoutCvMinuteInput | CvThequeViewCreateOrConnectWithoutCvMinuteInput[]
    createMany?: CvThequeViewCreateManyCvMinuteInputEnvelope
    connect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
  }

  export type CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<CvMinuteDomainCreateWithoutCvMinuteInput, CvMinuteDomainUncheckedCreateWithoutCvMinuteInput> | CvMinuteDomainCreateWithoutCvMinuteInput[] | CvMinuteDomainUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvMinuteDomainCreateOrConnectWithoutCvMinuteInput | CvMinuteDomainCreateOrConnectWithoutCvMinuteInput[]
    createMany?: CvMinuteDomainCreateManyCvMinuteInputEnvelope
    connect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
  }

  export type CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput = {
    create?: XOR<CvThequeContactCreateWithoutCvMinuteInput, CvThequeContactUncheckedCreateWithoutCvMinuteInput> | CvThequeContactCreateWithoutCvMinuteInput[] | CvThequeContactUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutCvMinuteInput | CvThequeContactCreateOrConnectWithoutCvMinuteInput[]
    createMany?: CvThequeContactCreateManyCvMinuteInputEnvelope
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UserUpdateOneRequiredWithoutCvMinutesNestedInput = {
    create?: XOR<UserCreateWithoutCvMinutesInput, UserUncheckedCreateWithoutCvMinutesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvMinutesInput
    upsert?: UserUpsertWithoutCvMinutesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCvMinutesInput, UserUpdateWithoutCvMinutesInput>, UserUncheckedUpdateWithoutCvMinutesInput>
  }

  export type CvThequeCritereUpdateOneWithoutCvMinutesNestedInput = {
    create?: XOR<CvThequeCritereCreateWithoutCvMinutesInput, CvThequeCritereUncheckedCreateWithoutCvMinutesInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutCvMinutesInput
    upsert?: CvThequeCritereUpsertWithoutCvMinutesInput
    disconnect?: CvThequeCritereWhereInput | boolean
    delete?: CvThequeCritereWhereInput | boolean
    connect?: CvThequeCritereWhereUniqueInput
    update?: XOR<XOR<CvThequeCritereUpdateToOneWithWhereWithoutCvMinutesInput, CvThequeCritereUpdateWithoutCvMinutesInput>, CvThequeCritereUncheckedUpdateWithoutCvMinutesInput>
  }

  export type FileUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<FileCreateWithoutCvMinuteInput, FileUncheckedCreateWithoutCvMinuteInput> | FileCreateWithoutCvMinuteInput[] | FileUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: FileCreateOrConnectWithoutCvMinuteInput | FileCreateOrConnectWithoutCvMinuteInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutCvMinuteInput | FileUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: FileCreateManyCvMinuteInputEnvelope
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutCvMinuteInput | FileUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: FileUpdateManyWithWhereWithoutCvMinuteInput | FileUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type AdviceUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<AdviceCreateWithoutCvMinuteInput, AdviceUncheckedCreateWithoutCvMinuteInput> | AdviceCreateWithoutCvMinuteInput[] | AdviceUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutCvMinuteInput | AdviceCreateOrConnectWithoutCvMinuteInput[]
    upsert?: AdviceUpsertWithWhereUniqueWithoutCvMinuteInput | AdviceUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: AdviceCreateManyCvMinuteInputEnvelope
    set?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    disconnect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    delete?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    update?: AdviceUpdateWithWhereUniqueWithoutCvMinuteInput | AdviceUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: AdviceUpdateManyWithWhereWithoutCvMinuteInput | AdviceUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: AdviceScalarWhereInput | AdviceScalarWhereInput[]
  }

  export type CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<CvMinuteSectionCreateWithoutCvMinuteInput, CvMinuteSectionUncheckedCreateWithoutCvMinuteInput> | CvMinuteSectionCreateWithoutCvMinuteInput[] | CvMinuteSectionUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutCvMinuteInput | CvMinuteSectionCreateOrConnectWithoutCvMinuteInput[]
    upsert?: CvMinuteSectionUpsertWithWhereUniqueWithoutCvMinuteInput | CvMinuteSectionUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: CvMinuteSectionCreateManyCvMinuteInputEnvelope
    set?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    disconnect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    delete?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    connect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    update?: CvMinuteSectionUpdateWithWhereUniqueWithoutCvMinuteInput | CvMinuteSectionUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: CvMinuteSectionUpdateManyWithWhereWithoutCvMinuteInput | CvMinuteSectionUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: CvMinuteSectionScalarWhereInput | CvMinuteSectionScalarWhereInput[]
  }

  export type OpenaiResponseUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<OpenaiResponseCreateWithoutCvMinuteInput, OpenaiResponseUncheckedCreateWithoutCvMinuteInput> | OpenaiResponseCreateWithoutCvMinuteInput[] | OpenaiResponseUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutCvMinuteInput | OpenaiResponseCreateOrConnectWithoutCvMinuteInput[]
    upsert?: OpenaiResponseUpsertWithWhereUniqueWithoutCvMinuteInput | OpenaiResponseUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: OpenaiResponseCreateManyCvMinuteInputEnvelope
    set?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    disconnect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    delete?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    update?: OpenaiResponseUpdateWithWhereUniqueWithoutCvMinuteInput | OpenaiResponseUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: OpenaiResponseUpdateManyWithWhereWithoutCvMinuteInput | OpenaiResponseUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: OpenaiResponseScalarWhereInput | OpenaiResponseScalarWhereInput[]
  }

  export type EvaluationUpdateOneWithoutCvMinuteNestedInput = {
    create?: XOR<EvaluationCreateWithoutCvMinuteInput, EvaluationUncheckedCreateWithoutCvMinuteInput>
    connectOrCreate?: EvaluationCreateOrConnectWithoutCvMinuteInput
    upsert?: EvaluationUpsertWithoutCvMinuteInput
    disconnect?: EvaluationWhereInput | boolean
    delete?: EvaluationWhereInput | boolean
    connect?: EvaluationWhereUniqueInput
    update?: XOR<XOR<EvaluationUpdateToOneWithWhereWithoutCvMinuteInput, EvaluationUpdateWithoutCvMinuteInput>, EvaluationUncheckedUpdateWithoutCvMinuteInput>
  }

  export type CvThequeViewUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<CvThequeViewCreateWithoutCvMinuteInput, CvThequeViewUncheckedCreateWithoutCvMinuteInput> | CvThequeViewCreateWithoutCvMinuteInput[] | CvThequeViewUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvThequeViewCreateOrConnectWithoutCvMinuteInput | CvThequeViewCreateOrConnectWithoutCvMinuteInput[]
    upsert?: CvThequeViewUpsertWithWhereUniqueWithoutCvMinuteInput | CvThequeViewUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: CvThequeViewCreateManyCvMinuteInputEnvelope
    set?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    disconnect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    delete?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    connect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    update?: CvThequeViewUpdateWithWhereUniqueWithoutCvMinuteInput | CvThequeViewUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: CvThequeViewUpdateManyWithWhereWithoutCvMinuteInput | CvThequeViewUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: CvThequeViewScalarWhereInput | CvThequeViewScalarWhereInput[]
  }

  export type CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<CvMinuteDomainCreateWithoutCvMinuteInput, CvMinuteDomainUncheckedCreateWithoutCvMinuteInput> | CvMinuteDomainCreateWithoutCvMinuteInput[] | CvMinuteDomainUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvMinuteDomainCreateOrConnectWithoutCvMinuteInput | CvMinuteDomainCreateOrConnectWithoutCvMinuteInput[]
    upsert?: CvMinuteDomainUpsertWithWhereUniqueWithoutCvMinuteInput | CvMinuteDomainUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: CvMinuteDomainCreateManyCvMinuteInputEnvelope
    set?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    disconnect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    delete?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    connect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    update?: CvMinuteDomainUpdateWithWhereUniqueWithoutCvMinuteInput | CvMinuteDomainUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: CvMinuteDomainUpdateManyWithWhereWithoutCvMinuteInput | CvMinuteDomainUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: CvMinuteDomainScalarWhereInput | CvMinuteDomainScalarWhereInput[]
  }

  export type CvThequeContactUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<CvThequeContactCreateWithoutCvMinuteInput, CvThequeContactUncheckedCreateWithoutCvMinuteInput> | CvThequeContactCreateWithoutCvMinuteInput[] | CvThequeContactUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutCvMinuteInput | CvThequeContactCreateOrConnectWithoutCvMinuteInput[]
    upsert?: CvThequeContactUpsertWithWhereUniqueWithoutCvMinuteInput | CvThequeContactUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: CvThequeContactCreateManyCvMinuteInputEnvelope
    set?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    disconnect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    delete?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    update?: CvThequeContactUpdateWithWhereUniqueWithoutCvMinuteInput | CvThequeContactUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: CvThequeContactUpdateManyWithWhereWithoutCvMinuteInput | CvThequeContactUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: CvThequeContactScalarWhereInput | CvThequeContactScalarWhereInput[]
  }

  export type FileUncheckedUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<FileCreateWithoutCvMinuteInput, FileUncheckedCreateWithoutCvMinuteInput> | FileCreateWithoutCvMinuteInput[] | FileUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: FileCreateOrConnectWithoutCvMinuteInput | FileCreateOrConnectWithoutCvMinuteInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutCvMinuteInput | FileUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: FileCreateManyCvMinuteInputEnvelope
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutCvMinuteInput | FileUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: FileUpdateManyWithWhereWithoutCvMinuteInput | FileUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<AdviceCreateWithoutCvMinuteInput, AdviceUncheckedCreateWithoutCvMinuteInput> | AdviceCreateWithoutCvMinuteInput[] | AdviceUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutCvMinuteInput | AdviceCreateOrConnectWithoutCvMinuteInput[]
    upsert?: AdviceUpsertWithWhereUniqueWithoutCvMinuteInput | AdviceUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: AdviceCreateManyCvMinuteInputEnvelope
    set?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    disconnect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    delete?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    update?: AdviceUpdateWithWhereUniqueWithoutCvMinuteInput | AdviceUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: AdviceUpdateManyWithWhereWithoutCvMinuteInput | AdviceUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: AdviceScalarWhereInput | AdviceScalarWhereInput[]
  }

  export type CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<CvMinuteSectionCreateWithoutCvMinuteInput, CvMinuteSectionUncheckedCreateWithoutCvMinuteInput> | CvMinuteSectionCreateWithoutCvMinuteInput[] | CvMinuteSectionUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutCvMinuteInput | CvMinuteSectionCreateOrConnectWithoutCvMinuteInput[]
    upsert?: CvMinuteSectionUpsertWithWhereUniqueWithoutCvMinuteInput | CvMinuteSectionUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: CvMinuteSectionCreateManyCvMinuteInputEnvelope
    set?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    disconnect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    delete?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    connect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    update?: CvMinuteSectionUpdateWithWhereUniqueWithoutCvMinuteInput | CvMinuteSectionUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: CvMinuteSectionUpdateManyWithWhereWithoutCvMinuteInput | CvMinuteSectionUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: CvMinuteSectionScalarWhereInput | CvMinuteSectionScalarWhereInput[]
  }

  export type OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<OpenaiResponseCreateWithoutCvMinuteInput, OpenaiResponseUncheckedCreateWithoutCvMinuteInput> | OpenaiResponseCreateWithoutCvMinuteInput[] | OpenaiResponseUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutCvMinuteInput | OpenaiResponseCreateOrConnectWithoutCvMinuteInput[]
    upsert?: OpenaiResponseUpsertWithWhereUniqueWithoutCvMinuteInput | OpenaiResponseUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: OpenaiResponseCreateManyCvMinuteInputEnvelope
    set?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    disconnect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    delete?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    update?: OpenaiResponseUpdateWithWhereUniqueWithoutCvMinuteInput | OpenaiResponseUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: OpenaiResponseUpdateManyWithWhereWithoutCvMinuteInput | OpenaiResponseUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: OpenaiResponseScalarWhereInput | OpenaiResponseScalarWhereInput[]
  }

  export type EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput = {
    create?: XOR<EvaluationCreateWithoutCvMinuteInput, EvaluationUncheckedCreateWithoutCvMinuteInput>
    connectOrCreate?: EvaluationCreateOrConnectWithoutCvMinuteInput
    upsert?: EvaluationUpsertWithoutCvMinuteInput
    disconnect?: EvaluationWhereInput | boolean
    delete?: EvaluationWhereInput | boolean
    connect?: EvaluationWhereUniqueInput
    update?: XOR<XOR<EvaluationUpdateToOneWithWhereWithoutCvMinuteInput, EvaluationUpdateWithoutCvMinuteInput>, EvaluationUncheckedUpdateWithoutCvMinuteInput>
  }

  export type CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<CvThequeViewCreateWithoutCvMinuteInput, CvThequeViewUncheckedCreateWithoutCvMinuteInput> | CvThequeViewCreateWithoutCvMinuteInput[] | CvThequeViewUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvThequeViewCreateOrConnectWithoutCvMinuteInput | CvThequeViewCreateOrConnectWithoutCvMinuteInput[]
    upsert?: CvThequeViewUpsertWithWhereUniqueWithoutCvMinuteInput | CvThequeViewUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: CvThequeViewCreateManyCvMinuteInputEnvelope
    set?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    disconnect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    delete?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    connect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    update?: CvThequeViewUpdateWithWhereUniqueWithoutCvMinuteInput | CvThequeViewUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: CvThequeViewUpdateManyWithWhereWithoutCvMinuteInput | CvThequeViewUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: CvThequeViewScalarWhereInput | CvThequeViewScalarWhereInput[]
  }

  export type CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<CvMinuteDomainCreateWithoutCvMinuteInput, CvMinuteDomainUncheckedCreateWithoutCvMinuteInput> | CvMinuteDomainCreateWithoutCvMinuteInput[] | CvMinuteDomainUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvMinuteDomainCreateOrConnectWithoutCvMinuteInput | CvMinuteDomainCreateOrConnectWithoutCvMinuteInput[]
    upsert?: CvMinuteDomainUpsertWithWhereUniqueWithoutCvMinuteInput | CvMinuteDomainUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: CvMinuteDomainCreateManyCvMinuteInputEnvelope
    set?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    disconnect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    delete?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    connect?: CvMinuteDomainWhereUniqueInput | CvMinuteDomainWhereUniqueInput[]
    update?: CvMinuteDomainUpdateWithWhereUniqueWithoutCvMinuteInput | CvMinuteDomainUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: CvMinuteDomainUpdateManyWithWhereWithoutCvMinuteInput | CvMinuteDomainUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: CvMinuteDomainScalarWhereInput | CvMinuteDomainScalarWhereInput[]
  }

  export type CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput = {
    create?: XOR<CvThequeContactCreateWithoutCvMinuteInput, CvThequeContactUncheckedCreateWithoutCvMinuteInput> | CvThequeContactCreateWithoutCvMinuteInput[] | CvThequeContactUncheckedCreateWithoutCvMinuteInput[]
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutCvMinuteInput | CvThequeContactCreateOrConnectWithoutCvMinuteInput[]
    upsert?: CvThequeContactUpsertWithWhereUniqueWithoutCvMinuteInput | CvThequeContactUpsertWithWhereUniqueWithoutCvMinuteInput[]
    createMany?: CvThequeContactCreateManyCvMinuteInputEnvelope
    set?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    disconnect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    delete?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    connect?: CvThequeContactWhereUniqueInput | CvThequeContactWhereUniqueInput[]
    update?: CvThequeContactUpdateWithWhereUniqueWithoutCvMinuteInput | CvThequeContactUpdateWithWhereUniqueWithoutCvMinuteInput[]
    updateMany?: CvThequeContactUpdateManyWithWhereWithoutCvMinuteInput | CvThequeContactUpdateManyWithWhereWithoutCvMinuteInput[]
    deleteMany?: CvThequeContactScalarWhereInput | CvThequeContactScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCvMinuteDomainsInput = {
    create?: XOR<UserCreateWithoutCvMinuteDomainsInput, UserUncheckedCreateWithoutCvMinuteDomainsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvMinuteDomainsInput
    connect?: UserWhereUniqueInput
  }

  export type CvMinuteCreateNestedOneWithoutCvMinuteDomainsInput = {
    create?: XOR<CvMinuteCreateWithoutCvMinuteDomainsInput, CvMinuteUncheckedCreateWithoutCvMinuteDomainsInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvMinuteDomainsInput
    connect?: CvMinuteWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCvMinuteDomainsNestedInput = {
    create?: XOR<UserCreateWithoutCvMinuteDomainsInput, UserUncheckedCreateWithoutCvMinuteDomainsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvMinuteDomainsInput
    upsert?: UserUpsertWithoutCvMinuteDomainsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCvMinuteDomainsInput, UserUpdateWithoutCvMinuteDomainsInput>, UserUncheckedUpdateWithoutCvMinuteDomainsInput>
  }

  export type CvMinuteUpdateOneRequiredWithoutCvMinuteDomainsNestedInput = {
    create?: XOR<CvMinuteCreateWithoutCvMinuteDomainsInput, CvMinuteUncheckedCreateWithoutCvMinuteDomainsInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvMinuteDomainsInput
    upsert?: CvMinuteUpsertWithoutCvMinuteDomainsInput
    connect?: CvMinuteWhereUniqueInput
    update?: XOR<XOR<CvMinuteUpdateToOneWithWhereWithoutCvMinuteDomainsInput, CvMinuteUpdateWithoutCvMinuteDomainsInput>, CvMinuteUncheckedUpdateWithoutCvMinuteDomainsInput>
  }

  export type CvMinuteSectionCreateNestedManyWithoutSectionInput = {
    create?: XOR<CvMinuteSectionCreateWithoutSectionInput, CvMinuteSectionUncheckedCreateWithoutSectionInput> | CvMinuteSectionCreateWithoutSectionInput[] | CvMinuteSectionUncheckedCreateWithoutSectionInput[]
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutSectionInput | CvMinuteSectionCreateOrConnectWithoutSectionInput[]
    createMany?: CvMinuteSectionCreateManySectionInputEnvelope
    connect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
  }

  export type CvMinuteSectionUncheckedCreateNestedManyWithoutSectionInput = {
    create?: XOR<CvMinuteSectionCreateWithoutSectionInput, CvMinuteSectionUncheckedCreateWithoutSectionInput> | CvMinuteSectionCreateWithoutSectionInput[] | CvMinuteSectionUncheckedCreateWithoutSectionInput[]
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutSectionInput | CvMinuteSectionCreateOrConnectWithoutSectionInput[]
    createMany?: CvMinuteSectionCreateManySectionInputEnvelope
    connect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
  }

  export type CvMinuteSectionUpdateManyWithoutSectionNestedInput = {
    create?: XOR<CvMinuteSectionCreateWithoutSectionInput, CvMinuteSectionUncheckedCreateWithoutSectionInput> | CvMinuteSectionCreateWithoutSectionInput[] | CvMinuteSectionUncheckedCreateWithoutSectionInput[]
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutSectionInput | CvMinuteSectionCreateOrConnectWithoutSectionInput[]
    upsert?: CvMinuteSectionUpsertWithWhereUniqueWithoutSectionInput | CvMinuteSectionUpsertWithWhereUniqueWithoutSectionInput[]
    createMany?: CvMinuteSectionCreateManySectionInputEnvelope
    set?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    disconnect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    delete?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    connect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    update?: CvMinuteSectionUpdateWithWhereUniqueWithoutSectionInput | CvMinuteSectionUpdateWithWhereUniqueWithoutSectionInput[]
    updateMany?: CvMinuteSectionUpdateManyWithWhereWithoutSectionInput | CvMinuteSectionUpdateManyWithWhereWithoutSectionInput[]
    deleteMany?: CvMinuteSectionScalarWhereInput | CvMinuteSectionScalarWhereInput[]
  }

  export type CvMinuteSectionUncheckedUpdateManyWithoutSectionNestedInput = {
    create?: XOR<CvMinuteSectionCreateWithoutSectionInput, CvMinuteSectionUncheckedCreateWithoutSectionInput> | CvMinuteSectionCreateWithoutSectionInput[] | CvMinuteSectionUncheckedCreateWithoutSectionInput[]
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutSectionInput | CvMinuteSectionCreateOrConnectWithoutSectionInput[]
    upsert?: CvMinuteSectionUpsertWithWhereUniqueWithoutSectionInput | CvMinuteSectionUpsertWithWhereUniqueWithoutSectionInput[]
    createMany?: CvMinuteSectionCreateManySectionInputEnvelope
    set?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    disconnect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    delete?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    connect?: CvMinuteSectionWhereUniqueInput | CvMinuteSectionWhereUniqueInput[]
    update?: CvMinuteSectionUpdateWithWhereUniqueWithoutSectionInput | CvMinuteSectionUpdateWithWhereUniqueWithoutSectionInput[]
    updateMany?: CvMinuteSectionUpdateManyWithWhereWithoutSectionInput | CvMinuteSectionUpdateManyWithWhereWithoutSectionInput[]
    deleteMany?: CvMinuteSectionScalarWhereInput | CvMinuteSectionScalarWhereInput[]
  }

  export type CvMinuteCreateNestedOneWithoutCvMinuteSectionsInput = {
    create?: XOR<CvMinuteCreateWithoutCvMinuteSectionsInput, CvMinuteUncheckedCreateWithoutCvMinuteSectionsInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvMinuteSectionsInput
    connect?: CvMinuteWhereUniqueInput
  }

  export type SectionCreateNestedOneWithoutCvMinuteSectionsInput = {
    create?: XOR<SectionCreateWithoutCvMinuteSectionsInput, SectionUncheckedCreateWithoutCvMinuteSectionsInput>
    connectOrCreate?: SectionCreateOrConnectWithoutCvMinuteSectionsInput
    connect?: SectionWhereUniqueInput
  }

  export type AdviceCreateNestedManyWithoutCvMinuteSectionInput = {
    create?: XOR<AdviceCreateWithoutCvMinuteSectionInput, AdviceUncheckedCreateWithoutCvMinuteSectionInput> | AdviceCreateWithoutCvMinuteSectionInput[] | AdviceUncheckedCreateWithoutCvMinuteSectionInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutCvMinuteSectionInput | AdviceCreateOrConnectWithoutCvMinuteSectionInput[]
    createMany?: AdviceCreateManyCvMinuteSectionInputEnvelope
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
  }

  export type SectionInfoCreateNestedManyWithoutCvMinuteSectionInput = {
    create?: XOR<SectionInfoCreateWithoutCvMinuteSectionInput, SectionInfoUncheckedCreateWithoutCvMinuteSectionInput> | SectionInfoCreateWithoutCvMinuteSectionInput[] | SectionInfoUncheckedCreateWithoutCvMinuteSectionInput[]
    connectOrCreate?: SectionInfoCreateOrConnectWithoutCvMinuteSectionInput | SectionInfoCreateOrConnectWithoutCvMinuteSectionInput[]
    createMany?: SectionInfoCreateManyCvMinuteSectionInputEnvelope
    connect?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
  }

  export type AdviceUncheckedCreateNestedManyWithoutCvMinuteSectionInput = {
    create?: XOR<AdviceCreateWithoutCvMinuteSectionInput, AdviceUncheckedCreateWithoutCvMinuteSectionInput> | AdviceCreateWithoutCvMinuteSectionInput[] | AdviceUncheckedCreateWithoutCvMinuteSectionInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutCvMinuteSectionInput | AdviceCreateOrConnectWithoutCvMinuteSectionInput[]
    createMany?: AdviceCreateManyCvMinuteSectionInputEnvelope
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
  }

  export type SectionInfoUncheckedCreateNestedManyWithoutCvMinuteSectionInput = {
    create?: XOR<SectionInfoCreateWithoutCvMinuteSectionInput, SectionInfoUncheckedCreateWithoutCvMinuteSectionInput> | SectionInfoCreateWithoutCvMinuteSectionInput[] | SectionInfoUncheckedCreateWithoutCvMinuteSectionInput[]
    connectOrCreate?: SectionInfoCreateOrConnectWithoutCvMinuteSectionInput | SectionInfoCreateOrConnectWithoutCvMinuteSectionInput[]
    createMany?: SectionInfoCreateManyCvMinuteSectionInputEnvelope
    connect?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
  }

  export type CvMinuteUpdateOneRequiredWithoutCvMinuteSectionsNestedInput = {
    create?: XOR<CvMinuteCreateWithoutCvMinuteSectionsInput, CvMinuteUncheckedCreateWithoutCvMinuteSectionsInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvMinuteSectionsInput
    upsert?: CvMinuteUpsertWithoutCvMinuteSectionsInput
    connect?: CvMinuteWhereUniqueInput
    update?: XOR<XOR<CvMinuteUpdateToOneWithWhereWithoutCvMinuteSectionsInput, CvMinuteUpdateWithoutCvMinuteSectionsInput>, CvMinuteUncheckedUpdateWithoutCvMinuteSectionsInput>
  }

  export type SectionUpdateOneRequiredWithoutCvMinuteSectionsNestedInput = {
    create?: XOR<SectionCreateWithoutCvMinuteSectionsInput, SectionUncheckedCreateWithoutCvMinuteSectionsInput>
    connectOrCreate?: SectionCreateOrConnectWithoutCvMinuteSectionsInput
    upsert?: SectionUpsertWithoutCvMinuteSectionsInput
    connect?: SectionWhereUniqueInput
    update?: XOR<XOR<SectionUpdateToOneWithWhereWithoutCvMinuteSectionsInput, SectionUpdateWithoutCvMinuteSectionsInput>, SectionUncheckedUpdateWithoutCvMinuteSectionsInput>
  }

  export type AdviceUpdateManyWithoutCvMinuteSectionNestedInput = {
    create?: XOR<AdviceCreateWithoutCvMinuteSectionInput, AdviceUncheckedCreateWithoutCvMinuteSectionInput> | AdviceCreateWithoutCvMinuteSectionInput[] | AdviceUncheckedCreateWithoutCvMinuteSectionInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutCvMinuteSectionInput | AdviceCreateOrConnectWithoutCvMinuteSectionInput[]
    upsert?: AdviceUpsertWithWhereUniqueWithoutCvMinuteSectionInput | AdviceUpsertWithWhereUniqueWithoutCvMinuteSectionInput[]
    createMany?: AdviceCreateManyCvMinuteSectionInputEnvelope
    set?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    disconnect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    delete?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    update?: AdviceUpdateWithWhereUniqueWithoutCvMinuteSectionInput | AdviceUpdateWithWhereUniqueWithoutCvMinuteSectionInput[]
    updateMany?: AdviceUpdateManyWithWhereWithoutCvMinuteSectionInput | AdviceUpdateManyWithWhereWithoutCvMinuteSectionInput[]
    deleteMany?: AdviceScalarWhereInput | AdviceScalarWhereInput[]
  }

  export type SectionInfoUpdateManyWithoutCvMinuteSectionNestedInput = {
    create?: XOR<SectionInfoCreateWithoutCvMinuteSectionInput, SectionInfoUncheckedCreateWithoutCvMinuteSectionInput> | SectionInfoCreateWithoutCvMinuteSectionInput[] | SectionInfoUncheckedCreateWithoutCvMinuteSectionInput[]
    connectOrCreate?: SectionInfoCreateOrConnectWithoutCvMinuteSectionInput | SectionInfoCreateOrConnectWithoutCvMinuteSectionInput[]
    upsert?: SectionInfoUpsertWithWhereUniqueWithoutCvMinuteSectionInput | SectionInfoUpsertWithWhereUniqueWithoutCvMinuteSectionInput[]
    createMany?: SectionInfoCreateManyCvMinuteSectionInputEnvelope
    set?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
    disconnect?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
    delete?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
    connect?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
    update?: SectionInfoUpdateWithWhereUniqueWithoutCvMinuteSectionInput | SectionInfoUpdateWithWhereUniqueWithoutCvMinuteSectionInput[]
    updateMany?: SectionInfoUpdateManyWithWhereWithoutCvMinuteSectionInput | SectionInfoUpdateManyWithWhereWithoutCvMinuteSectionInput[]
    deleteMany?: SectionInfoScalarWhereInput | SectionInfoScalarWhereInput[]
  }

  export type AdviceUncheckedUpdateManyWithoutCvMinuteSectionNestedInput = {
    create?: XOR<AdviceCreateWithoutCvMinuteSectionInput, AdviceUncheckedCreateWithoutCvMinuteSectionInput> | AdviceCreateWithoutCvMinuteSectionInput[] | AdviceUncheckedCreateWithoutCvMinuteSectionInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutCvMinuteSectionInput | AdviceCreateOrConnectWithoutCvMinuteSectionInput[]
    upsert?: AdviceUpsertWithWhereUniqueWithoutCvMinuteSectionInput | AdviceUpsertWithWhereUniqueWithoutCvMinuteSectionInput[]
    createMany?: AdviceCreateManyCvMinuteSectionInputEnvelope
    set?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    disconnect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    delete?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    update?: AdviceUpdateWithWhereUniqueWithoutCvMinuteSectionInput | AdviceUpdateWithWhereUniqueWithoutCvMinuteSectionInput[]
    updateMany?: AdviceUpdateManyWithWhereWithoutCvMinuteSectionInput | AdviceUpdateManyWithWhereWithoutCvMinuteSectionInput[]
    deleteMany?: AdviceScalarWhereInput | AdviceScalarWhereInput[]
  }

  export type SectionInfoUncheckedUpdateManyWithoutCvMinuteSectionNestedInput = {
    create?: XOR<SectionInfoCreateWithoutCvMinuteSectionInput, SectionInfoUncheckedCreateWithoutCvMinuteSectionInput> | SectionInfoCreateWithoutCvMinuteSectionInput[] | SectionInfoUncheckedCreateWithoutCvMinuteSectionInput[]
    connectOrCreate?: SectionInfoCreateOrConnectWithoutCvMinuteSectionInput | SectionInfoCreateOrConnectWithoutCvMinuteSectionInput[]
    upsert?: SectionInfoUpsertWithWhereUniqueWithoutCvMinuteSectionInput | SectionInfoUpsertWithWhereUniqueWithoutCvMinuteSectionInput[]
    createMany?: SectionInfoCreateManyCvMinuteSectionInputEnvelope
    set?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
    disconnect?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
    delete?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
    connect?: SectionInfoWhereUniqueInput | SectionInfoWhereUniqueInput[]
    update?: SectionInfoUpdateWithWhereUniqueWithoutCvMinuteSectionInput | SectionInfoUpdateWithWhereUniqueWithoutCvMinuteSectionInput[]
    updateMany?: SectionInfoUpdateManyWithWhereWithoutCvMinuteSectionInput | SectionInfoUpdateManyWithWhereWithoutCvMinuteSectionInput[]
    deleteMany?: SectionInfoScalarWhereInput | SectionInfoScalarWhereInput[]
  }

  export type FileCreateNestedOneWithoutSectionInfoInput = {
    create?: XOR<FileCreateWithoutSectionInfoInput, FileUncheckedCreateWithoutSectionInfoInput>
    connectOrCreate?: FileCreateOrConnectWithoutSectionInfoInput
    connect?: FileWhereUniqueInput
  }

  export type AdviceCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<AdviceCreateWithoutSectionInfoInput, AdviceUncheckedCreateWithoutSectionInfoInput> | AdviceCreateWithoutSectionInfoInput[] | AdviceUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutSectionInfoInput | AdviceCreateOrConnectWithoutSectionInfoInput[]
    createMany?: AdviceCreateManySectionInfoInputEnvelope
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
  }

  export type EvaluationCreateNestedOneWithoutSectionInfoInput = {
    create?: XOR<EvaluationCreateWithoutSectionInfoInput, EvaluationUncheckedCreateWithoutSectionInfoInput>
    connectOrCreate?: EvaluationCreateOrConnectWithoutSectionInfoInput
    connect?: EvaluationWhereUniqueInput
  }

  export type CvMinuteSectionCreateNestedOneWithoutSectionInfosInput = {
    create?: XOR<CvMinuteSectionCreateWithoutSectionInfosInput, CvMinuteSectionUncheckedCreateWithoutSectionInfosInput>
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutSectionInfosInput
    connect?: CvMinuteSectionWhereUniqueInput
  }

  export type QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutSectionInfoInput, QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput> | QualiCarriereQuestionCreateWithoutSectionInfoInput[] | QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput | QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput[]
    createMany?: QualiCarriereQuestionCreateManySectionInfoInputEnvelope
    connect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
  }

  export type QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutSectionInfoInput, QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput> | QualiCarriereResponseCreateWithoutSectionInfoInput[] | QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput | QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput[]
    createMany?: QualiCarriereResponseCreateManySectionInfoInputEnvelope
    connect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
  }

  export type QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<QualiCarriereResumeCreateWithoutSectionInfoInput, QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput> | QualiCarriereResumeCreateWithoutSectionInfoInput[] | QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput | QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput[]
    createMany?: QualiCarriereResumeCreateManySectionInfoInputEnvelope
    connect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
  }

  export type QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<QualiCarriereCompetenceCreateWithoutSectionInfoInput, QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput> | QualiCarriereCompetenceCreateWithoutSectionInfoInput[] | QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput | QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput[]
    createMany?: QualiCarriereCompetenceCreateManySectionInfoInputEnvelope
    connect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
  }

  export type FileUncheckedCreateNestedOneWithoutSectionInfoInput = {
    create?: XOR<FileCreateWithoutSectionInfoInput, FileUncheckedCreateWithoutSectionInfoInput>
    connectOrCreate?: FileCreateOrConnectWithoutSectionInfoInput
    connect?: FileWhereUniqueInput
  }

  export type AdviceUncheckedCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<AdviceCreateWithoutSectionInfoInput, AdviceUncheckedCreateWithoutSectionInfoInput> | AdviceCreateWithoutSectionInfoInput[] | AdviceUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutSectionInfoInput | AdviceCreateOrConnectWithoutSectionInfoInput[]
    createMany?: AdviceCreateManySectionInfoInputEnvelope
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
  }

  export type EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput = {
    create?: XOR<EvaluationCreateWithoutSectionInfoInput, EvaluationUncheckedCreateWithoutSectionInfoInput>
    connectOrCreate?: EvaluationCreateOrConnectWithoutSectionInfoInput
    connect?: EvaluationWhereUniqueInput
  }

  export type QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutSectionInfoInput, QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput> | QualiCarriereQuestionCreateWithoutSectionInfoInput[] | QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput | QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput[]
    createMany?: QualiCarriereQuestionCreateManySectionInfoInputEnvelope
    connect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
  }

  export type QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutSectionInfoInput, QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput> | QualiCarriereResponseCreateWithoutSectionInfoInput[] | QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput | QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput[]
    createMany?: QualiCarriereResponseCreateManySectionInfoInputEnvelope
    connect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
  }

  export type QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<QualiCarriereResumeCreateWithoutSectionInfoInput, QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput> | QualiCarriereResumeCreateWithoutSectionInfoInput[] | QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput | QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput[]
    createMany?: QualiCarriereResumeCreateManySectionInfoInputEnvelope
    connect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
  }

  export type QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput = {
    create?: XOR<QualiCarriereCompetenceCreateWithoutSectionInfoInput, QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput> | QualiCarriereCompetenceCreateWithoutSectionInfoInput[] | QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput | QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput[]
    createMany?: QualiCarriereCompetenceCreateManySectionInfoInputEnvelope
    connect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
  }

  export type FileUpdateOneWithoutSectionInfoNestedInput = {
    create?: XOR<FileCreateWithoutSectionInfoInput, FileUncheckedCreateWithoutSectionInfoInput>
    connectOrCreate?: FileCreateOrConnectWithoutSectionInfoInput
    upsert?: FileUpsertWithoutSectionInfoInput
    disconnect?: FileWhereInput | boolean
    delete?: FileWhereInput | boolean
    connect?: FileWhereUniqueInput
    update?: XOR<XOR<FileUpdateToOneWithWhereWithoutSectionInfoInput, FileUpdateWithoutSectionInfoInput>, FileUncheckedUpdateWithoutSectionInfoInput>
  }

  export type AdviceUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<AdviceCreateWithoutSectionInfoInput, AdviceUncheckedCreateWithoutSectionInfoInput> | AdviceCreateWithoutSectionInfoInput[] | AdviceUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutSectionInfoInput | AdviceCreateOrConnectWithoutSectionInfoInput[]
    upsert?: AdviceUpsertWithWhereUniqueWithoutSectionInfoInput | AdviceUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: AdviceCreateManySectionInfoInputEnvelope
    set?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    disconnect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    delete?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    update?: AdviceUpdateWithWhereUniqueWithoutSectionInfoInput | AdviceUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: AdviceUpdateManyWithWhereWithoutSectionInfoInput | AdviceUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: AdviceScalarWhereInput | AdviceScalarWhereInput[]
  }

  export type EvaluationUpdateOneWithoutSectionInfoNestedInput = {
    create?: XOR<EvaluationCreateWithoutSectionInfoInput, EvaluationUncheckedCreateWithoutSectionInfoInput>
    connectOrCreate?: EvaluationCreateOrConnectWithoutSectionInfoInput
    upsert?: EvaluationUpsertWithoutSectionInfoInput
    disconnect?: EvaluationWhereInput | boolean
    delete?: EvaluationWhereInput | boolean
    connect?: EvaluationWhereUniqueInput
    update?: XOR<XOR<EvaluationUpdateToOneWithWhereWithoutSectionInfoInput, EvaluationUpdateWithoutSectionInfoInput>, EvaluationUncheckedUpdateWithoutSectionInfoInput>
  }

  export type CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput = {
    create?: XOR<CvMinuteSectionCreateWithoutSectionInfosInput, CvMinuteSectionUncheckedCreateWithoutSectionInfosInput>
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutSectionInfosInput
    upsert?: CvMinuteSectionUpsertWithoutSectionInfosInput
    connect?: CvMinuteSectionWhereUniqueInput
    update?: XOR<XOR<CvMinuteSectionUpdateToOneWithWhereWithoutSectionInfosInput, CvMinuteSectionUpdateWithoutSectionInfosInput>, CvMinuteSectionUncheckedUpdateWithoutSectionInfosInput>
  }

  export type QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutSectionInfoInput, QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput> | QualiCarriereQuestionCreateWithoutSectionInfoInput[] | QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput | QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput[]
    upsert?: QualiCarriereQuestionUpsertWithWhereUniqueWithoutSectionInfoInput | QualiCarriereQuestionUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: QualiCarriereQuestionCreateManySectionInfoInputEnvelope
    set?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    disconnect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    delete?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    connect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    update?: QualiCarriereQuestionUpdateWithWhereUniqueWithoutSectionInfoInput | QualiCarriereQuestionUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: QualiCarriereQuestionUpdateManyWithWhereWithoutSectionInfoInput | QualiCarriereQuestionUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: QualiCarriereQuestionScalarWhereInput | QualiCarriereQuestionScalarWhereInput[]
  }

  export type QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutSectionInfoInput, QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput> | QualiCarriereResponseCreateWithoutSectionInfoInput[] | QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput | QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput[]
    upsert?: QualiCarriereResponseUpsertWithWhereUniqueWithoutSectionInfoInput | QualiCarriereResponseUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: QualiCarriereResponseCreateManySectionInfoInputEnvelope
    set?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    disconnect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    delete?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    connect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    update?: QualiCarriereResponseUpdateWithWhereUniqueWithoutSectionInfoInput | QualiCarriereResponseUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: QualiCarriereResponseUpdateManyWithWhereWithoutSectionInfoInput | QualiCarriereResponseUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: QualiCarriereResponseScalarWhereInput | QualiCarriereResponseScalarWhereInput[]
  }

  export type QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<QualiCarriereResumeCreateWithoutSectionInfoInput, QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput> | QualiCarriereResumeCreateWithoutSectionInfoInput[] | QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput | QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput[]
    upsert?: QualiCarriereResumeUpsertWithWhereUniqueWithoutSectionInfoInput | QualiCarriereResumeUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: QualiCarriereResumeCreateManySectionInfoInputEnvelope
    set?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    disconnect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    delete?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    connect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    update?: QualiCarriereResumeUpdateWithWhereUniqueWithoutSectionInfoInput | QualiCarriereResumeUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: QualiCarriereResumeUpdateManyWithWhereWithoutSectionInfoInput | QualiCarriereResumeUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: QualiCarriereResumeScalarWhereInput | QualiCarriereResumeScalarWhereInput[]
  }

  export type QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<QualiCarriereCompetenceCreateWithoutSectionInfoInput, QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput> | QualiCarriereCompetenceCreateWithoutSectionInfoInput[] | QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput | QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput[]
    upsert?: QualiCarriereCompetenceUpsertWithWhereUniqueWithoutSectionInfoInput | QualiCarriereCompetenceUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: QualiCarriereCompetenceCreateManySectionInfoInputEnvelope
    set?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    disconnect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    delete?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    connect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    update?: QualiCarriereCompetenceUpdateWithWhereUniqueWithoutSectionInfoInput | QualiCarriereCompetenceUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: QualiCarriereCompetenceUpdateManyWithWhereWithoutSectionInfoInput | QualiCarriereCompetenceUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: QualiCarriereCompetenceScalarWhereInput | QualiCarriereCompetenceScalarWhereInput[]
  }

  export type FileUncheckedUpdateOneWithoutSectionInfoNestedInput = {
    create?: XOR<FileCreateWithoutSectionInfoInput, FileUncheckedCreateWithoutSectionInfoInput>
    connectOrCreate?: FileCreateOrConnectWithoutSectionInfoInput
    upsert?: FileUpsertWithoutSectionInfoInput
    disconnect?: FileWhereInput | boolean
    delete?: FileWhereInput | boolean
    connect?: FileWhereUniqueInput
    update?: XOR<XOR<FileUpdateToOneWithWhereWithoutSectionInfoInput, FileUpdateWithoutSectionInfoInput>, FileUncheckedUpdateWithoutSectionInfoInput>
  }

  export type AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<AdviceCreateWithoutSectionInfoInput, AdviceUncheckedCreateWithoutSectionInfoInput> | AdviceCreateWithoutSectionInfoInput[] | AdviceUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: AdviceCreateOrConnectWithoutSectionInfoInput | AdviceCreateOrConnectWithoutSectionInfoInput[]
    upsert?: AdviceUpsertWithWhereUniqueWithoutSectionInfoInput | AdviceUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: AdviceCreateManySectionInfoInputEnvelope
    set?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    disconnect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    delete?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    connect?: AdviceWhereUniqueInput | AdviceWhereUniqueInput[]
    update?: AdviceUpdateWithWhereUniqueWithoutSectionInfoInput | AdviceUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: AdviceUpdateManyWithWhereWithoutSectionInfoInput | AdviceUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: AdviceScalarWhereInput | AdviceScalarWhereInput[]
  }

  export type EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput = {
    create?: XOR<EvaluationCreateWithoutSectionInfoInput, EvaluationUncheckedCreateWithoutSectionInfoInput>
    connectOrCreate?: EvaluationCreateOrConnectWithoutSectionInfoInput
    upsert?: EvaluationUpsertWithoutSectionInfoInput
    disconnect?: EvaluationWhereInput | boolean
    delete?: EvaluationWhereInput | boolean
    connect?: EvaluationWhereUniqueInput
    update?: XOR<XOR<EvaluationUpdateToOneWithWhereWithoutSectionInfoInput, EvaluationUpdateWithoutSectionInfoInput>, EvaluationUncheckedUpdateWithoutSectionInfoInput>
  }

  export type QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutSectionInfoInput, QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput> | QualiCarriereQuestionCreateWithoutSectionInfoInput[] | QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput | QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput[]
    upsert?: QualiCarriereQuestionUpsertWithWhereUniqueWithoutSectionInfoInput | QualiCarriereQuestionUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: QualiCarriereQuestionCreateManySectionInfoInputEnvelope
    set?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    disconnect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    delete?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    connect?: QualiCarriereQuestionWhereUniqueInput | QualiCarriereQuestionWhereUniqueInput[]
    update?: QualiCarriereQuestionUpdateWithWhereUniqueWithoutSectionInfoInput | QualiCarriereQuestionUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: QualiCarriereQuestionUpdateManyWithWhereWithoutSectionInfoInput | QualiCarriereQuestionUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: QualiCarriereQuestionScalarWhereInput | QualiCarriereQuestionScalarWhereInput[]
  }

  export type QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutSectionInfoInput, QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput> | QualiCarriereResponseCreateWithoutSectionInfoInput[] | QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput | QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput[]
    upsert?: QualiCarriereResponseUpsertWithWhereUniqueWithoutSectionInfoInput | QualiCarriereResponseUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: QualiCarriereResponseCreateManySectionInfoInputEnvelope
    set?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    disconnect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    delete?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    connect?: QualiCarriereResponseWhereUniqueInput | QualiCarriereResponseWhereUniqueInput[]
    update?: QualiCarriereResponseUpdateWithWhereUniqueWithoutSectionInfoInput | QualiCarriereResponseUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: QualiCarriereResponseUpdateManyWithWhereWithoutSectionInfoInput | QualiCarriereResponseUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: QualiCarriereResponseScalarWhereInput | QualiCarriereResponseScalarWhereInput[]
  }

  export type QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<QualiCarriereResumeCreateWithoutSectionInfoInput, QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput> | QualiCarriereResumeCreateWithoutSectionInfoInput[] | QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput | QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput[]
    upsert?: QualiCarriereResumeUpsertWithWhereUniqueWithoutSectionInfoInput | QualiCarriereResumeUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: QualiCarriereResumeCreateManySectionInfoInputEnvelope
    set?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    disconnect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    delete?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    connect?: QualiCarriereResumeWhereUniqueInput | QualiCarriereResumeWhereUniqueInput[]
    update?: QualiCarriereResumeUpdateWithWhereUniqueWithoutSectionInfoInput | QualiCarriereResumeUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: QualiCarriereResumeUpdateManyWithWhereWithoutSectionInfoInput | QualiCarriereResumeUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: QualiCarriereResumeScalarWhereInput | QualiCarriereResumeScalarWhereInput[]
  }

  export type QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput = {
    create?: XOR<QualiCarriereCompetenceCreateWithoutSectionInfoInput, QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput> | QualiCarriereCompetenceCreateWithoutSectionInfoInput[] | QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput[]
    connectOrCreate?: QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput | QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput[]
    upsert?: QualiCarriereCompetenceUpsertWithWhereUniqueWithoutSectionInfoInput | QualiCarriereCompetenceUpsertWithWhereUniqueWithoutSectionInfoInput[]
    createMany?: QualiCarriereCompetenceCreateManySectionInfoInputEnvelope
    set?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    disconnect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    delete?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    connect?: QualiCarriereCompetenceWhereUniqueInput | QualiCarriereCompetenceWhereUniqueInput[]
    update?: QualiCarriereCompetenceUpdateWithWhereUniqueWithoutSectionInfoInput | QualiCarriereCompetenceUpdateWithWhereUniqueWithoutSectionInfoInput[]
    updateMany?: QualiCarriereCompetenceUpdateManyWithWhereWithoutSectionInfoInput | QualiCarriereCompetenceUpdateManyWithWhereWithoutSectionInfoInput[]
    deleteMany?: QualiCarriereCompetenceScalarWhereInput | QualiCarriereCompetenceScalarWhereInput[]
  }

  export type CvMinuteCreateNestedOneWithoutAdvicesInput = {
    create?: XOR<CvMinuteCreateWithoutAdvicesInput, CvMinuteUncheckedCreateWithoutAdvicesInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutAdvicesInput
    connect?: CvMinuteWhereUniqueInput
  }

  export type SectionInfoCreateNestedOneWithoutAdvicesInput = {
    create?: XOR<SectionInfoCreateWithoutAdvicesInput, SectionInfoUncheckedCreateWithoutAdvicesInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutAdvicesInput
    connect?: SectionInfoWhereUniqueInput
  }

  export type CvMinuteSectionCreateNestedOneWithoutAdvicesInput = {
    create?: XOR<CvMinuteSectionCreateWithoutAdvicesInput, CvMinuteSectionUncheckedCreateWithoutAdvicesInput>
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutAdvicesInput
    connect?: CvMinuteSectionWhereUniqueInput
  }

  export type CvMinuteUpdateOneWithoutAdvicesNestedInput = {
    create?: XOR<CvMinuteCreateWithoutAdvicesInput, CvMinuteUncheckedCreateWithoutAdvicesInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutAdvicesInput
    upsert?: CvMinuteUpsertWithoutAdvicesInput
    disconnect?: CvMinuteWhereInput | boolean
    delete?: CvMinuteWhereInput | boolean
    connect?: CvMinuteWhereUniqueInput
    update?: XOR<XOR<CvMinuteUpdateToOneWithWhereWithoutAdvicesInput, CvMinuteUpdateWithoutAdvicesInput>, CvMinuteUncheckedUpdateWithoutAdvicesInput>
  }

  export type SectionInfoUpdateOneWithoutAdvicesNestedInput = {
    create?: XOR<SectionInfoCreateWithoutAdvicesInput, SectionInfoUncheckedCreateWithoutAdvicesInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutAdvicesInput
    upsert?: SectionInfoUpsertWithoutAdvicesInput
    disconnect?: SectionInfoWhereInput | boolean
    delete?: SectionInfoWhereInput | boolean
    connect?: SectionInfoWhereUniqueInput
    update?: XOR<XOR<SectionInfoUpdateToOneWithWhereWithoutAdvicesInput, SectionInfoUpdateWithoutAdvicesInput>, SectionInfoUncheckedUpdateWithoutAdvicesInput>
  }

  export type CvMinuteSectionUpdateOneWithoutAdvicesNestedInput = {
    create?: XOR<CvMinuteSectionCreateWithoutAdvicesInput, CvMinuteSectionUncheckedCreateWithoutAdvicesInput>
    connectOrCreate?: CvMinuteSectionCreateOrConnectWithoutAdvicesInput
    upsert?: CvMinuteSectionUpsertWithoutAdvicesInput
    disconnect?: CvMinuteSectionWhereInput | boolean
    delete?: CvMinuteSectionWhereInput | boolean
    connect?: CvMinuteSectionWhereUniqueInput
    update?: XOR<XOR<CvMinuteSectionUpdateToOneWithWhereWithoutAdvicesInput, CvMinuteSectionUpdateWithoutAdvicesInput>, CvMinuteSectionUncheckedUpdateWithoutAdvicesInput>
  }

  export type CvMinuteCreateNestedOneWithoutEvaluationInput = {
    create?: XOR<CvMinuteCreateWithoutEvaluationInput, CvMinuteUncheckedCreateWithoutEvaluationInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutEvaluationInput
    connect?: CvMinuteWhereUniqueInput
  }

  export type SectionInfoCreateNestedOneWithoutEvaluationInput = {
    create?: XOR<SectionInfoCreateWithoutEvaluationInput, SectionInfoUncheckedCreateWithoutEvaluationInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutEvaluationInput
    connect?: SectionInfoWhereUniqueInput
  }

  export type CvMinuteUpdateOneWithoutEvaluationNestedInput = {
    create?: XOR<CvMinuteCreateWithoutEvaluationInput, CvMinuteUncheckedCreateWithoutEvaluationInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutEvaluationInput
    upsert?: CvMinuteUpsertWithoutEvaluationInput
    disconnect?: CvMinuteWhereInput | boolean
    delete?: CvMinuteWhereInput | boolean
    connect?: CvMinuteWhereUniqueInput
    update?: XOR<XOR<CvMinuteUpdateToOneWithWhereWithoutEvaluationInput, CvMinuteUpdateWithoutEvaluationInput>, CvMinuteUncheckedUpdateWithoutEvaluationInput>
  }

  export type SectionInfoUpdateOneWithoutEvaluationNestedInput = {
    create?: XOR<SectionInfoCreateWithoutEvaluationInput, SectionInfoUncheckedCreateWithoutEvaluationInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutEvaluationInput
    upsert?: SectionInfoUpsertWithoutEvaluationInput
    disconnect?: SectionInfoWhereInput | boolean
    delete?: SectionInfoWhereInput | boolean
    connect?: SectionInfoWhereUniqueInput
    update?: XOR<XOR<SectionInfoUpdateToOneWithWhereWithoutEvaluationInput, SectionInfoUpdateWithoutEvaluationInput>, SectionInfoUncheckedUpdateWithoutEvaluationInput>
  }

  export type CvMinuteCreateNestedOneWithoutOpenaiResponsesInput = {
    create?: XOR<CvMinuteCreateWithoutOpenaiResponsesInput, CvMinuteUncheckedCreateWithoutOpenaiResponsesInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutOpenaiResponsesInput
    connect?: CvMinuteWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOpenaiResponsesInput = {
    create?: XOR<UserCreateWithoutOpenaiResponsesInput, UserUncheckedCreateWithoutOpenaiResponsesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOpenaiResponsesInput
    connect?: UserWhereUniqueInput
  }

  export type CvThequeCritereCreateNestedOneWithoutOpenaiResponsesInput = {
    create?: XOR<CvThequeCritereCreateWithoutOpenaiResponsesInput, CvThequeCritereUncheckedCreateWithoutOpenaiResponsesInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutOpenaiResponsesInput
    connect?: CvThequeCritereWhereUniqueInput
  }

  export type CvMinuteUpdateOneWithoutOpenaiResponsesNestedInput = {
    create?: XOR<CvMinuteCreateWithoutOpenaiResponsesInput, CvMinuteUncheckedCreateWithoutOpenaiResponsesInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutOpenaiResponsesInput
    upsert?: CvMinuteUpsertWithoutOpenaiResponsesInput
    disconnect?: CvMinuteWhereInput | boolean
    delete?: CvMinuteWhereInput | boolean
    connect?: CvMinuteWhereUniqueInput
    update?: XOR<XOR<CvMinuteUpdateToOneWithWhereWithoutOpenaiResponsesInput, CvMinuteUpdateWithoutOpenaiResponsesInput>, CvMinuteUncheckedUpdateWithoutOpenaiResponsesInput>
  }

  export type UserUpdateOneWithoutOpenaiResponsesNestedInput = {
    create?: XOR<UserCreateWithoutOpenaiResponsesInput, UserUncheckedCreateWithoutOpenaiResponsesInput>
    connectOrCreate?: UserCreateOrConnectWithoutOpenaiResponsesInput
    upsert?: UserUpsertWithoutOpenaiResponsesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOpenaiResponsesInput, UserUpdateWithoutOpenaiResponsesInput>, UserUncheckedUpdateWithoutOpenaiResponsesInput>
  }

  export type CvThequeCritereUpdateOneWithoutOpenaiResponsesNestedInput = {
    create?: XOR<CvThequeCritereCreateWithoutOpenaiResponsesInput, CvThequeCritereUncheckedCreateWithoutOpenaiResponsesInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutOpenaiResponsesInput
    upsert?: CvThequeCritereUpsertWithoutOpenaiResponsesInput
    disconnect?: CvThequeCritereWhereInput | boolean
    delete?: CvThequeCritereWhereInput | boolean
    connect?: CvThequeCritereWhereUniqueInput
    update?: XOR<XOR<CvThequeCritereUpdateToOneWithWhereWithoutOpenaiResponsesInput, CvThequeCritereUpdateWithoutOpenaiResponsesInput>, CvThequeCritereUncheckedUpdateWithoutOpenaiResponsesInput>
  }

  export type UserCreateNestedOneWithoutQualiCarriereQuestionsInput = {
    create?: XOR<UserCreateWithoutQualiCarriereQuestionsInput, UserUncheckedCreateWithoutQualiCarriereQuestionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereQuestionsInput
    connect?: UserWhereUniqueInput
  }

  export type SectionInfoCreateNestedOneWithoutQualiCarriereQuestionsInput = {
    create?: XOR<SectionInfoCreateWithoutQualiCarriereQuestionsInput, SectionInfoUncheckedCreateWithoutQualiCarriereQuestionsInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutQualiCarriereQuestionsInput
    connect?: SectionInfoWhereUniqueInput
  }

  export type QualiCarriereResponseCreateNestedOneWithoutQualiCarriereQuestionInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutQualiCarriereQuestionInput, QualiCarriereResponseUncheckedCreateWithoutQualiCarriereQuestionInput>
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutQualiCarriereQuestionInput
    connect?: QualiCarriereResponseWhereUniqueInput
  }

  export type QualiCarriereResponseUncheckedCreateNestedOneWithoutQualiCarriereQuestionInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutQualiCarriereQuestionInput, QualiCarriereResponseUncheckedCreateWithoutQualiCarriereQuestionInput>
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutQualiCarriereQuestionInput
    connect?: QualiCarriereResponseWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutQualiCarriereQuestionsNestedInput = {
    create?: XOR<UserCreateWithoutQualiCarriereQuestionsInput, UserUncheckedCreateWithoutQualiCarriereQuestionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereQuestionsInput
    upsert?: UserUpsertWithoutQualiCarriereQuestionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutQualiCarriereQuestionsInput, UserUpdateWithoutQualiCarriereQuestionsInput>, UserUncheckedUpdateWithoutQualiCarriereQuestionsInput>
  }

  export type SectionInfoUpdateOneRequiredWithoutQualiCarriereQuestionsNestedInput = {
    create?: XOR<SectionInfoCreateWithoutQualiCarriereQuestionsInput, SectionInfoUncheckedCreateWithoutQualiCarriereQuestionsInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutQualiCarriereQuestionsInput
    upsert?: SectionInfoUpsertWithoutQualiCarriereQuestionsInput
    connect?: SectionInfoWhereUniqueInput
    update?: XOR<XOR<SectionInfoUpdateToOneWithWhereWithoutQualiCarriereQuestionsInput, SectionInfoUpdateWithoutQualiCarriereQuestionsInput>, SectionInfoUncheckedUpdateWithoutQualiCarriereQuestionsInput>
  }

  export type QualiCarriereResponseUpdateOneWithoutQualiCarriereQuestionNestedInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutQualiCarriereQuestionInput, QualiCarriereResponseUncheckedCreateWithoutQualiCarriereQuestionInput>
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutQualiCarriereQuestionInput
    upsert?: QualiCarriereResponseUpsertWithoutQualiCarriereQuestionInput
    disconnect?: QualiCarriereResponseWhereInput | boolean
    delete?: QualiCarriereResponseWhereInput | boolean
    connect?: QualiCarriereResponseWhereUniqueInput
    update?: XOR<XOR<QualiCarriereResponseUpdateToOneWithWhereWithoutQualiCarriereQuestionInput, QualiCarriereResponseUpdateWithoutQualiCarriereQuestionInput>, QualiCarriereResponseUncheckedUpdateWithoutQualiCarriereQuestionInput>
  }

  export type QualiCarriereResponseUncheckedUpdateOneWithoutQualiCarriereQuestionNestedInput = {
    create?: XOR<QualiCarriereResponseCreateWithoutQualiCarriereQuestionInput, QualiCarriereResponseUncheckedCreateWithoutQualiCarriereQuestionInput>
    connectOrCreate?: QualiCarriereResponseCreateOrConnectWithoutQualiCarriereQuestionInput
    upsert?: QualiCarriereResponseUpsertWithoutQualiCarriereQuestionInput
    disconnect?: QualiCarriereResponseWhereInput | boolean
    delete?: QualiCarriereResponseWhereInput | boolean
    connect?: QualiCarriereResponseWhereUniqueInput
    update?: XOR<XOR<QualiCarriereResponseUpdateToOneWithWhereWithoutQualiCarriereQuestionInput, QualiCarriereResponseUpdateWithoutQualiCarriereQuestionInput>, QualiCarriereResponseUncheckedUpdateWithoutQualiCarriereQuestionInput>
  }

  export type QualiCarriereQuestionCreateNestedOneWithoutQualiCarriereResponseInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutQualiCarriereResponseInput, QualiCarriereQuestionUncheckedCreateWithoutQualiCarriereResponseInput>
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutQualiCarriereResponseInput
    connect?: QualiCarriereQuestionWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutQualiCarriereResponsesInput = {
    create?: XOR<UserCreateWithoutQualiCarriereResponsesInput, UserUncheckedCreateWithoutQualiCarriereResponsesInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereResponsesInput
    connect?: UserWhereUniqueInput
  }

  export type SectionInfoCreateNestedOneWithoutQualiCarriereResponsesInput = {
    create?: XOR<SectionInfoCreateWithoutQualiCarriereResponsesInput, SectionInfoUncheckedCreateWithoutQualiCarriereResponsesInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutQualiCarriereResponsesInput
    connect?: SectionInfoWhereUniqueInput
  }

  export type QualiCarriereQuestionUpdateOneRequiredWithoutQualiCarriereResponseNestedInput = {
    create?: XOR<QualiCarriereQuestionCreateWithoutQualiCarriereResponseInput, QualiCarriereQuestionUncheckedCreateWithoutQualiCarriereResponseInput>
    connectOrCreate?: QualiCarriereQuestionCreateOrConnectWithoutQualiCarriereResponseInput
    upsert?: QualiCarriereQuestionUpsertWithoutQualiCarriereResponseInput
    connect?: QualiCarriereQuestionWhereUniqueInput
    update?: XOR<XOR<QualiCarriereQuestionUpdateToOneWithWhereWithoutQualiCarriereResponseInput, QualiCarriereQuestionUpdateWithoutQualiCarriereResponseInput>, QualiCarriereQuestionUncheckedUpdateWithoutQualiCarriereResponseInput>
  }

  export type UserUpdateOneRequiredWithoutQualiCarriereResponsesNestedInput = {
    create?: XOR<UserCreateWithoutQualiCarriereResponsesInput, UserUncheckedCreateWithoutQualiCarriereResponsesInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereResponsesInput
    upsert?: UserUpsertWithoutQualiCarriereResponsesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutQualiCarriereResponsesInput, UserUpdateWithoutQualiCarriereResponsesInput>, UserUncheckedUpdateWithoutQualiCarriereResponsesInput>
  }

  export type SectionInfoUpdateOneWithoutQualiCarriereResponsesNestedInput = {
    create?: XOR<SectionInfoCreateWithoutQualiCarriereResponsesInput, SectionInfoUncheckedCreateWithoutQualiCarriereResponsesInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutQualiCarriereResponsesInput
    upsert?: SectionInfoUpsertWithoutQualiCarriereResponsesInput
    disconnect?: SectionInfoWhereInput | boolean
    delete?: SectionInfoWhereInput | boolean
    connect?: SectionInfoWhereUniqueInput
    update?: XOR<XOR<SectionInfoUpdateToOneWithWhereWithoutQualiCarriereResponsesInput, SectionInfoUpdateWithoutQualiCarriereResponsesInput>, SectionInfoUncheckedUpdateWithoutQualiCarriereResponsesInput>
  }

  export type SectionInfoCreateNestedOneWithoutQualiCarriereResumesInput = {
    create?: XOR<SectionInfoCreateWithoutQualiCarriereResumesInput, SectionInfoUncheckedCreateWithoutQualiCarriereResumesInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutQualiCarriereResumesInput
    connect?: SectionInfoWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutQualiCarriereResumesInput = {
    create?: XOR<UserCreateWithoutQualiCarriereResumesInput, UserUncheckedCreateWithoutQualiCarriereResumesInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereResumesInput
    connect?: UserWhereUniqueInput
  }

  export type SectionInfoUpdateOneRequiredWithoutQualiCarriereResumesNestedInput = {
    create?: XOR<SectionInfoCreateWithoutQualiCarriereResumesInput, SectionInfoUncheckedCreateWithoutQualiCarriereResumesInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutQualiCarriereResumesInput
    upsert?: SectionInfoUpsertWithoutQualiCarriereResumesInput
    connect?: SectionInfoWhereUniqueInput
    update?: XOR<XOR<SectionInfoUpdateToOneWithWhereWithoutQualiCarriereResumesInput, SectionInfoUpdateWithoutQualiCarriereResumesInput>, SectionInfoUncheckedUpdateWithoutQualiCarriereResumesInput>
  }

  export type UserUpdateOneRequiredWithoutQualiCarriereResumesNestedInput = {
    create?: XOR<UserCreateWithoutQualiCarriereResumesInput, UserUncheckedCreateWithoutQualiCarriereResumesInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereResumesInput
    upsert?: UserUpsertWithoutQualiCarriereResumesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutQualiCarriereResumesInput, UserUpdateWithoutQualiCarriereResumesInput>, UserUncheckedUpdateWithoutQualiCarriereResumesInput>
  }

  export type SectionInfoCreateNestedOneWithoutQualiCarriereCompetencesInput = {
    create?: XOR<SectionInfoCreateWithoutQualiCarriereCompetencesInput, SectionInfoUncheckedCreateWithoutQualiCarriereCompetencesInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutQualiCarriereCompetencesInput
    connect?: SectionInfoWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutQualiCarriereCompetencesInput = {
    create?: XOR<UserCreateWithoutQualiCarriereCompetencesInput, UserUncheckedCreateWithoutQualiCarriereCompetencesInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereCompetencesInput
    connect?: UserWhereUniqueInput
  }

  export type SectionInfoUpdateOneRequiredWithoutQualiCarriereCompetencesNestedInput = {
    create?: XOR<SectionInfoCreateWithoutQualiCarriereCompetencesInput, SectionInfoUncheckedCreateWithoutQualiCarriereCompetencesInput>
    connectOrCreate?: SectionInfoCreateOrConnectWithoutQualiCarriereCompetencesInput
    upsert?: SectionInfoUpsertWithoutQualiCarriereCompetencesInput
    connect?: SectionInfoWhereUniqueInput
    update?: XOR<XOR<SectionInfoUpdateToOneWithWhereWithoutQualiCarriereCompetencesInput, SectionInfoUpdateWithoutQualiCarriereCompetencesInput>, SectionInfoUncheckedUpdateWithoutQualiCarriereCompetencesInput>
  }

  export type UserUpdateOneRequiredWithoutQualiCarriereCompetencesNestedInput = {
    create?: XOR<UserCreateWithoutQualiCarriereCompetencesInput, UserUncheckedCreateWithoutQualiCarriereCompetencesInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereCompetencesInput
    upsert?: UserUpsertWithoutQualiCarriereCompetencesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutQualiCarriereCompetencesInput, UserUpdateWithoutQualiCarriereCompetencesInput>, UserUncheckedUpdateWithoutQualiCarriereCompetencesInput>
  }

  export type UserCreateNestedOneWithoutQualiCarriereChatInput = {
    create?: XOR<UserCreateWithoutQualiCarriereChatInput, UserUncheckedCreateWithoutQualiCarriereChatInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereChatInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutQualiCarriereChatNestedInput = {
    create?: XOR<UserCreateWithoutQualiCarriereChatInput, UserUncheckedCreateWithoutQualiCarriereChatInput>
    connectOrCreate?: UserCreateOrConnectWithoutQualiCarriereChatInput
    upsert?: UserUpsertWithoutQualiCarriereChatInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutQualiCarriereChatInput, UserUpdateWithoutQualiCarriereChatInput>, UserUncheckedUpdateWithoutQualiCarriereChatInput>
  }

  export type UserCreateNestedOneWithoutCvThequeCriteresInput = {
    create?: XOR<UserCreateWithoutCvThequeCriteresInput, UserUncheckedCreateWithoutCvThequeCriteresInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvThequeCriteresInput
    connect?: UserWhereUniqueInput
  }

  export type CvThequeCompetenceCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<CvThequeCompetenceCreateWithoutCvThequeCritereInput, CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput> | CvThequeCompetenceCreateWithoutCvThequeCritereInput[] | CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput | CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: CvThequeCompetenceCreateManyCvThequeCritereInputEnvelope
    connect?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
  }

  export type CvThequeViewCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<CvThequeViewCreateWithoutCvThequeCritereInput, CvThequeViewUncheckedCreateWithoutCvThequeCritereInput> | CvThequeViewCreateWithoutCvThequeCritereInput[] | CvThequeViewUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeViewCreateOrConnectWithoutCvThequeCritereInput | CvThequeViewCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: CvThequeViewCreateManyCvThequeCritereInputEnvelope
    connect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
  }

  export type CvThequeUserCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<CvThequeUserCreateWithoutCvThequeCritereInput, CvThequeUserUncheckedCreateWithoutCvThequeCritereInput> | CvThequeUserCreateWithoutCvThequeCritereInput[] | CvThequeUserUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeUserCreateOrConnectWithoutCvThequeCritereInput | CvThequeUserCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: CvThequeUserCreateManyCvThequeCritereInputEnvelope
    connect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
  }

  export type CvMinuteCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<CvMinuteCreateWithoutCvThequeCritereInput, CvMinuteUncheckedCreateWithoutCvThequeCritereInput> | CvMinuteCreateWithoutCvThequeCritereInput[] | CvMinuteUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvThequeCritereInput | CvMinuteCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: CvMinuteCreateManyCvThequeCritereInputEnvelope
    connect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
  }

  export type OpenaiResponseCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<OpenaiResponseCreateWithoutCvThequeCritereInput, OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput> | OpenaiResponseCreateWithoutCvThequeCritereInput[] | OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput | OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: OpenaiResponseCreateManyCvThequeCritereInputEnvelope
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
  }

  export type CvThequeCompetenceUncheckedCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<CvThequeCompetenceCreateWithoutCvThequeCritereInput, CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput> | CvThequeCompetenceCreateWithoutCvThequeCritereInput[] | CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput | CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: CvThequeCompetenceCreateManyCvThequeCritereInputEnvelope
    connect?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
  }

  export type CvThequeViewUncheckedCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<CvThequeViewCreateWithoutCvThequeCritereInput, CvThequeViewUncheckedCreateWithoutCvThequeCritereInput> | CvThequeViewCreateWithoutCvThequeCritereInput[] | CvThequeViewUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeViewCreateOrConnectWithoutCvThequeCritereInput | CvThequeViewCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: CvThequeViewCreateManyCvThequeCritereInputEnvelope
    connect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
  }

  export type CvThequeUserUncheckedCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<CvThequeUserCreateWithoutCvThequeCritereInput, CvThequeUserUncheckedCreateWithoutCvThequeCritereInput> | CvThequeUserCreateWithoutCvThequeCritereInput[] | CvThequeUserUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeUserCreateOrConnectWithoutCvThequeCritereInput | CvThequeUserCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: CvThequeUserCreateManyCvThequeCritereInputEnvelope
    connect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
  }

  export type CvMinuteUncheckedCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<CvMinuteCreateWithoutCvThequeCritereInput, CvMinuteUncheckedCreateWithoutCvThequeCritereInput> | CvMinuteCreateWithoutCvThequeCritereInput[] | CvMinuteUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvThequeCritereInput | CvMinuteCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: CvMinuteCreateManyCvThequeCritereInputEnvelope
    connect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
  }

  export type OpenaiResponseUncheckedCreateNestedManyWithoutCvThequeCritereInput = {
    create?: XOR<OpenaiResponseCreateWithoutCvThequeCritereInput, OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput> | OpenaiResponseCreateWithoutCvThequeCritereInput[] | OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput | OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput[]
    createMany?: OpenaiResponseCreateManyCvThequeCritereInputEnvelope
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutCvThequeCriteresNestedInput = {
    create?: XOR<UserCreateWithoutCvThequeCriteresInput, UserUncheckedCreateWithoutCvThequeCriteresInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvThequeCriteresInput
    upsert?: UserUpsertWithoutCvThequeCriteresInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCvThequeCriteresInput, UserUpdateWithoutCvThequeCriteresInput>, UserUncheckedUpdateWithoutCvThequeCriteresInput>
  }

  export type CvThequeCompetenceUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<CvThequeCompetenceCreateWithoutCvThequeCritereInput, CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput> | CvThequeCompetenceCreateWithoutCvThequeCritereInput[] | CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput | CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: CvThequeCompetenceUpsertWithWhereUniqueWithoutCvThequeCritereInput | CvThequeCompetenceUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: CvThequeCompetenceCreateManyCvThequeCritereInputEnvelope
    set?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
    disconnect?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
    delete?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
    connect?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
    update?: CvThequeCompetenceUpdateWithWhereUniqueWithoutCvThequeCritereInput | CvThequeCompetenceUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: CvThequeCompetenceUpdateManyWithWhereWithoutCvThequeCritereInput | CvThequeCompetenceUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: CvThequeCompetenceScalarWhereInput | CvThequeCompetenceScalarWhereInput[]
  }

  export type CvThequeViewUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<CvThequeViewCreateWithoutCvThequeCritereInput, CvThequeViewUncheckedCreateWithoutCvThequeCritereInput> | CvThequeViewCreateWithoutCvThequeCritereInput[] | CvThequeViewUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeViewCreateOrConnectWithoutCvThequeCritereInput | CvThequeViewCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: CvThequeViewUpsertWithWhereUniqueWithoutCvThequeCritereInput | CvThequeViewUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: CvThequeViewCreateManyCvThequeCritereInputEnvelope
    set?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    disconnect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    delete?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    connect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    update?: CvThequeViewUpdateWithWhereUniqueWithoutCvThequeCritereInput | CvThequeViewUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: CvThequeViewUpdateManyWithWhereWithoutCvThequeCritereInput | CvThequeViewUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: CvThequeViewScalarWhereInput | CvThequeViewScalarWhereInput[]
  }

  export type CvThequeUserUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<CvThequeUserCreateWithoutCvThequeCritereInput, CvThequeUserUncheckedCreateWithoutCvThequeCritereInput> | CvThequeUserCreateWithoutCvThequeCritereInput[] | CvThequeUserUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeUserCreateOrConnectWithoutCvThequeCritereInput | CvThequeUserCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: CvThequeUserUpsertWithWhereUniqueWithoutCvThequeCritereInput | CvThequeUserUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: CvThequeUserCreateManyCvThequeCritereInputEnvelope
    set?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    disconnect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    delete?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    connect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    update?: CvThequeUserUpdateWithWhereUniqueWithoutCvThequeCritereInput | CvThequeUserUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: CvThequeUserUpdateManyWithWhereWithoutCvThequeCritereInput | CvThequeUserUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: CvThequeUserScalarWhereInput | CvThequeUserScalarWhereInput[]
  }

  export type CvMinuteUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<CvMinuteCreateWithoutCvThequeCritereInput, CvMinuteUncheckedCreateWithoutCvThequeCritereInput> | CvMinuteCreateWithoutCvThequeCritereInput[] | CvMinuteUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvThequeCritereInput | CvMinuteCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: CvMinuteUpsertWithWhereUniqueWithoutCvThequeCritereInput | CvMinuteUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: CvMinuteCreateManyCvThequeCritereInputEnvelope
    set?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    disconnect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    delete?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    connect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    update?: CvMinuteUpdateWithWhereUniqueWithoutCvThequeCritereInput | CvMinuteUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: CvMinuteUpdateManyWithWhereWithoutCvThequeCritereInput | CvMinuteUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: CvMinuteScalarWhereInput | CvMinuteScalarWhereInput[]
  }

  export type OpenaiResponseUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<OpenaiResponseCreateWithoutCvThequeCritereInput, OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput> | OpenaiResponseCreateWithoutCvThequeCritereInput[] | OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput | OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: OpenaiResponseUpsertWithWhereUniqueWithoutCvThequeCritereInput | OpenaiResponseUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: OpenaiResponseCreateManyCvThequeCritereInputEnvelope
    set?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    disconnect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    delete?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    update?: OpenaiResponseUpdateWithWhereUniqueWithoutCvThequeCritereInput | OpenaiResponseUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: OpenaiResponseUpdateManyWithWhereWithoutCvThequeCritereInput | OpenaiResponseUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: OpenaiResponseScalarWhereInput | OpenaiResponseScalarWhereInput[]
  }

  export type CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<CvThequeCompetenceCreateWithoutCvThequeCritereInput, CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput> | CvThequeCompetenceCreateWithoutCvThequeCritereInput[] | CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput | CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: CvThequeCompetenceUpsertWithWhereUniqueWithoutCvThequeCritereInput | CvThequeCompetenceUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: CvThequeCompetenceCreateManyCvThequeCritereInputEnvelope
    set?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
    disconnect?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
    delete?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
    connect?: CvThequeCompetenceWhereUniqueInput | CvThequeCompetenceWhereUniqueInput[]
    update?: CvThequeCompetenceUpdateWithWhereUniqueWithoutCvThequeCritereInput | CvThequeCompetenceUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: CvThequeCompetenceUpdateManyWithWhereWithoutCvThequeCritereInput | CvThequeCompetenceUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: CvThequeCompetenceScalarWhereInput | CvThequeCompetenceScalarWhereInput[]
  }

  export type CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<CvThequeViewCreateWithoutCvThequeCritereInput, CvThequeViewUncheckedCreateWithoutCvThequeCritereInput> | CvThequeViewCreateWithoutCvThequeCritereInput[] | CvThequeViewUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeViewCreateOrConnectWithoutCvThequeCritereInput | CvThequeViewCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: CvThequeViewUpsertWithWhereUniqueWithoutCvThequeCritereInput | CvThequeViewUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: CvThequeViewCreateManyCvThequeCritereInputEnvelope
    set?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    disconnect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    delete?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    connect?: CvThequeViewWhereUniqueInput | CvThequeViewWhereUniqueInput[]
    update?: CvThequeViewUpdateWithWhereUniqueWithoutCvThequeCritereInput | CvThequeViewUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: CvThequeViewUpdateManyWithWhereWithoutCvThequeCritereInput | CvThequeViewUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: CvThequeViewScalarWhereInput | CvThequeViewScalarWhereInput[]
  }

  export type CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<CvThequeUserCreateWithoutCvThequeCritereInput, CvThequeUserUncheckedCreateWithoutCvThequeCritereInput> | CvThequeUserCreateWithoutCvThequeCritereInput[] | CvThequeUserUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvThequeUserCreateOrConnectWithoutCvThequeCritereInput | CvThequeUserCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: CvThequeUserUpsertWithWhereUniqueWithoutCvThequeCritereInput | CvThequeUserUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: CvThequeUserCreateManyCvThequeCritereInputEnvelope
    set?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    disconnect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    delete?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    connect?: CvThequeUserWhereUniqueInput | CvThequeUserWhereUniqueInput[]
    update?: CvThequeUserUpdateWithWhereUniqueWithoutCvThequeCritereInput | CvThequeUserUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: CvThequeUserUpdateManyWithWhereWithoutCvThequeCritereInput | CvThequeUserUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: CvThequeUserScalarWhereInput | CvThequeUserScalarWhereInput[]
  }

  export type CvMinuteUncheckedUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<CvMinuteCreateWithoutCvThequeCritereInput, CvMinuteUncheckedCreateWithoutCvThequeCritereInput> | CvMinuteCreateWithoutCvThequeCritereInput[] | CvMinuteUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvThequeCritereInput | CvMinuteCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: CvMinuteUpsertWithWhereUniqueWithoutCvThequeCritereInput | CvMinuteUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: CvMinuteCreateManyCvThequeCritereInputEnvelope
    set?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    disconnect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    delete?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    connect?: CvMinuteWhereUniqueInput | CvMinuteWhereUniqueInput[]
    update?: CvMinuteUpdateWithWhereUniqueWithoutCvThequeCritereInput | CvMinuteUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: CvMinuteUpdateManyWithWhereWithoutCvThequeCritereInput | CvMinuteUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: CvMinuteScalarWhereInput | CvMinuteScalarWhereInput[]
  }

  export type OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereNestedInput = {
    create?: XOR<OpenaiResponseCreateWithoutCvThequeCritereInput, OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput> | OpenaiResponseCreateWithoutCvThequeCritereInput[] | OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput[]
    connectOrCreate?: OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput | OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput[]
    upsert?: OpenaiResponseUpsertWithWhereUniqueWithoutCvThequeCritereInput | OpenaiResponseUpsertWithWhereUniqueWithoutCvThequeCritereInput[]
    createMany?: OpenaiResponseCreateManyCvThequeCritereInputEnvelope
    set?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    disconnect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    delete?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    connect?: OpenaiResponseWhereUniqueInput | OpenaiResponseWhereUniqueInput[]
    update?: OpenaiResponseUpdateWithWhereUniqueWithoutCvThequeCritereInput | OpenaiResponseUpdateWithWhereUniqueWithoutCvThequeCritereInput[]
    updateMany?: OpenaiResponseUpdateManyWithWhereWithoutCvThequeCritereInput | OpenaiResponseUpdateManyWithWhereWithoutCvThequeCritereInput[]
    deleteMany?: OpenaiResponseScalarWhereInput | OpenaiResponseScalarWhereInput[]
  }

  export type CvThequeCritereCreateNestedOneWithoutCvThequeCompetencesInput = {
    create?: XOR<CvThequeCritereCreateWithoutCvThequeCompetencesInput, CvThequeCritereUncheckedCreateWithoutCvThequeCompetencesInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutCvThequeCompetencesInput
    connect?: CvThequeCritereWhereUniqueInput
  }

  export type CvThequeCritereUpdateOneRequiredWithoutCvThequeCompetencesNestedInput = {
    create?: XOR<CvThequeCritereCreateWithoutCvThequeCompetencesInput, CvThequeCritereUncheckedCreateWithoutCvThequeCompetencesInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutCvThequeCompetencesInput
    upsert?: CvThequeCritereUpsertWithoutCvThequeCompetencesInput
    connect?: CvThequeCritereWhereUniqueInput
    update?: XOR<XOR<CvThequeCritereUpdateToOneWithWhereWithoutCvThequeCompetencesInput, CvThequeCritereUpdateWithoutCvThequeCompetencesInput>, CvThequeCritereUncheckedUpdateWithoutCvThequeCompetencesInput>
  }

  export type CvMinuteCreateNestedOneWithoutCvThequeViewsInput = {
    create?: XOR<CvMinuteCreateWithoutCvThequeViewsInput, CvMinuteUncheckedCreateWithoutCvThequeViewsInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvThequeViewsInput
    connect?: CvMinuteWhereUniqueInput
  }

  export type CvThequeCritereCreateNestedOneWithoutCvThequeViewsInput = {
    create?: XOR<CvThequeCritereCreateWithoutCvThequeViewsInput, CvThequeCritereUncheckedCreateWithoutCvThequeViewsInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutCvThequeViewsInput
    connect?: CvThequeCritereWhereUniqueInput
  }

  export type CvMinuteUpdateOneRequiredWithoutCvThequeViewsNestedInput = {
    create?: XOR<CvMinuteCreateWithoutCvThequeViewsInput, CvMinuteUncheckedCreateWithoutCvThequeViewsInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvThequeViewsInput
    upsert?: CvMinuteUpsertWithoutCvThequeViewsInput
    connect?: CvMinuteWhereUniqueInput
    update?: XOR<XOR<CvMinuteUpdateToOneWithWhereWithoutCvThequeViewsInput, CvMinuteUpdateWithoutCvThequeViewsInput>, CvMinuteUncheckedUpdateWithoutCvThequeViewsInput>
  }

  export type CvThequeCritereUpdateOneRequiredWithoutCvThequeViewsNestedInput = {
    create?: XOR<CvThequeCritereCreateWithoutCvThequeViewsInput, CvThequeCritereUncheckedCreateWithoutCvThequeViewsInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutCvThequeViewsInput
    upsert?: CvThequeCritereUpsertWithoutCvThequeViewsInput
    connect?: CvThequeCritereWhereUniqueInput
    update?: XOR<XOR<CvThequeCritereUpdateToOneWithWhereWithoutCvThequeViewsInput, CvThequeCritereUpdateWithoutCvThequeViewsInput>, CvThequeCritereUncheckedUpdateWithoutCvThequeViewsInput>
  }

  export type UserCreateNestedOneWithoutCvThequeUsersInput = {
    create?: XOR<UserCreateWithoutCvThequeUsersInput, UserUncheckedCreateWithoutCvThequeUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvThequeUsersInput
    connect?: UserWhereUniqueInput
  }

  export type CvThequeCritereCreateNestedOneWithoutCvThequeUsersInput = {
    create?: XOR<CvThequeCritereCreateWithoutCvThequeUsersInput, CvThequeCritereUncheckedCreateWithoutCvThequeUsersInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutCvThequeUsersInput
    connect?: CvThequeCritereWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCvThequeUsersNestedInput = {
    create?: XOR<UserCreateWithoutCvThequeUsersInput, UserUncheckedCreateWithoutCvThequeUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvThequeUsersInput
    upsert?: UserUpsertWithoutCvThequeUsersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCvThequeUsersInput, UserUpdateWithoutCvThequeUsersInput>, UserUncheckedUpdateWithoutCvThequeUsersInput>
  }

  export type CvThequeCritereUpdateOneRequiredWithoutCvThequeUsersNestedInput = {
    create?: XOR<CvThequeCritereCreateWithoutCvThequeUsersInput, CvThequeCritereUncheckedCreateWithoutCvThequeUsersInput>
    connectOrCreate?: CvThequeCritereCreateOrConnectWithoutCvThequeUsersInput
    upsert?: CvThequeCritereUpsertWithoutCvThequeUsersInput
    connect?: CvThequeCritereWhereUniqueInput
    update?: XOR<XOR<CvThequeCritereUpdateToOneWithWhereWithoutCvThequeUsersInput, CvThequeCritereUpdateWithoutCvThequeUsersInput>, CvThequeCritereUncheckedUpdateWithoutCvThequeUsersInput>
  }

  export type UserCreateNestedOneWithoutUserCvThequeContactsInput = {
    create?: XOR<UserCreateWithoutUserCvThequeContactsInput, UserUncheckedCreateWithoutUserCvThequeContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserCvThequeContactsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutRecruiterCvThequeContactsInput = {
    create?: XOR<UserCreateWithoutRecruiterCvThequeContactsInput, UserUncheckedCreateWithoutRecruiterCvThequeContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRecruiterCvThequeContactsInput
    connect?: UserWhereUniqueInput
  }

  export type CvMinuteCreateNestedOneWithoutCvThequeContactsInput = {
    create?: XOR<CvMinuteCreateWithoutCvThequeContactsInput, CvMinuteUncheckedCreateWithoutCvThequeContactsInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvThequeContactsInput
    connect?: CvMinuteWhereUniqueInput
  }

  export type CvThequeContactViewCreateNestedManyWithoutCvThequeContactInput = {
    create?: XOR<CvThequeContactViewCreateWithoutCvThequeContactInput, CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput> | CvThequeContactViewCreateWithoutCvThequeContactInput[] | CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput[]
    connectOrCreate?: CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput | CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput[]
    createMany?: CvThequeContactViewCreateManyCvThequeContactInputEnvelope
    connect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
  }

  export type CvThequeContactViewUncheckedCreateNestedManyWithoutCvThequeContactInput = {
    create?: XOR<CvThequeContactViewCreateWithoutCvThequeContactInput, CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput> | CvThequeContactViewCreateWithoutCvThequeContactInput[] | CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput[]
    connectOrCreate?: CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput | CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput[]
    createMany?: CvThequeContactViewCreateManyCvThequeContactInputEnvelope
    connect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
  }

  export type UserUpdateOneRequiredWithoutUserCvThequeContactsNestedInput = {
    create?: XOR<UserCreateWithoutUserCvThequeContactsInput, UserUncheckedCreateWithoutUserCvThequeContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserCvThequeContactsInput
    upsert?: UserUpsertWithoutUserCvThequeContactsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserCvThequeContactsInput, UserUpdateWithoutUserCvThequeContactsInput>, UserUncheckedUpdateWithoutUserCvThequeContactsInput>
  }

  export type UserUpdateOneRequiredWithoutRecruiterCvThequeContactsNestedInput = {
    create?: XOR<UserCreateWithoutRecruiterCvThequeContactsInput, UserUncheckedCreateWithoutRecruiterCvThequeContactsInput>
    connectOrCreate?: UserCreateOrConnectWithoutRecruiterCvThequeContactsInput
    upsert?: UserUpsertWithoutRecruiterCvThequeContactsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRecruiterCvThequeContactsInput, UserUpdateWithoutRecruiterCvThequeContactsInput>, UserUncheckedUpdateWithoutRecruiterCvThequeContactsInput>
  }

  export type CvMinuteUpdateOneRequiredWithoutCvThequeContactsNestedInput = {
    create?: XOR<CvMinuteCreateWithoutCvThequeContactsInput, CvMinuteUncheckedCreateWithoutCvThequeContactsInput>
    connectOrCreate?: CvMinuteCreateOrConnectWithoutCvThequeContactsInput
    upsert?: CvMinuteUpsertWithoutCvThequeContactsInput
    connect?: CvMinuteWhereUniqueInput
    update?: XOR<XOR<CvMinuteUpdateToOneWithWhereWithoutCvThequeContactsInput, CvMinuteUpdateWithoutCvThequeContactsInput>, CvMinuteUncheckedUpdateWithoutCvThequeContactsInput>
  }

  export type CvThequeContactViewUpdateManyWithoutCvThequeContactNestedInput = {
    create?: XOR<CvThequeContactViewCreateWithoutCvThequeContactInput, CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput> | CvThequeContactViewCreateWithoutCvThequeContactInput[] | CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput[]
    connectOrCreate?: CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput | CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput[]
    upsert?: CvThequeContactViewUpsertWithWhereUniqueWithoutCvThequeContactInput | CvThequeContactViewUpsertWithWhereUniqueWithoutCvThequeContactInput[]
    createMany?: CvThequeContactViewCreateManyCvThequeContactInputEnvelope
    set?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    disconnect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    delete?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    connect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    update?: CvThequeContactViewUpdateWithWhereUniqueWithoutCvThequeContactInput | CvThequeContactViewUpdateWithWhereUniqueWithoutCvThequeContactInput[]
    updateMany?: CvThequeContactViewUpdateManyWithWhereWithoutCvThequeContactInput | CvThequeContactViewUpdateManyWithWhereWithoutCvThequeContactInput[]
    deleteMany?: CvThequeContactViewScalarWhereInput | CvThequeContactViewScalarWhereInput[]
  }

  export type CvThequeContactViewUncheckedUpdateManyWithoutCvThequeContactNestedInput = {
    create?: XOR<CvThequeContactViewCreateWithoutCvThequeContactInput, CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput> | CvThequeContactViewCreateWithoutCvThequeContactInput[] | CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput[]
    connectOrCreate?: CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput | CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput[]
    upsert?: CvThequeContactViewUpsertWithWhereUniqueWithoutCvThequeContactInput | CvThequeContactViewUpsertWithWhereUniqueWithoutCvThequeContactInput[]
    createMany?: CvThequeContactViewCreateManyCvThequeContactInputEnvelope
    set?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    disconnect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    delete?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    connect?: CvThequeContactViewWhereUniqueInput | CvThequeContactViewWhereUniqueInput[]
    update?: CvThequeContactViewUpdateWithWhereUniqueWithoutCvThequeContactInput | CvThequeContactViewUpdateWithWhereUniqueWithoutCvThequeContactInput[]
    updateMany?: CvThequeContactViewUpdateManyWithWhereWithoutCvThequeContactInput | CvThequeContactViewUpdateManyWithWhereWithoutCvThequeContactInput[]
    deleteMany?: CvThequeContactViewScalarWhereInput | CvThequeContactViewScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutCvThequeContactViewsInput = {
    create?: XOR<UserCreateWithoutCvThequeContactViewsInput, UserUncheckedCreateWithoutCvThequeContactViewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvThequeContactViewsInput
    connect?: UserWhereUniqueInput
  }

  export type CvThequeContactCreateNestedOneWithoutCvThequeContactViewsInput = {
    create?: XOR<CvThequeContactCreateWithoutCvThequeContactViewsInput, CvThequeContactUncheckedCreateWithoutCvThequeContactViewsInput>
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutCvThequeContactViewsInput
    connect?: CvThequeContactWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutCvThequeContactViewsNestedInput = {
    create?: XOR<UserCreateWithoutCvThequeContactViewsInput, UserUncheckedCreateWithoutCvThequeContactViewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCvThequeContactViewsInput
    upsert?: UserUpsertWithoutCvThequeContactViewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCvThequeContactViewsInput, UserUpdateWithoutCvThequeContactViewsInput>, UserUncheckedUpdateWithoutCvThequeContactViewsInput>
  }

  export type CvThequeContactUpdateOneRequiredWithoutCvThequeContactViewsNestedInput = {
    create?: XOR<CvThequeContactCreateWithoutCvThequeContactViewsInput, CvThequeContactUncheckedCreateWithoutCvThequeContactViewsInput>
    connectOrCreate?: CvThequeContactCreateOrConnectWithoutCvThequeContactViewsInput
    upsert?: CvThequeContactUpsertWithoutCvThequeContactViewsInput
    connect?: CvThequeContactWhereUniqueInput
    update?: XOR<XOR<CvThequeContactUpdateToOneWithWhereWithoutCvThequeContactViewsInput, CvThequeContactUpdateWithoutCvThequeContactViewsInput>, CvThequeContactUncheckedUpdateWithoutCvThequeContactViewsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FileCreateWithoutUserInput = {
    name: string
    originalName: string
    extension: string
    usage: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutFilesInput
    sectionInfo?: SectionInfoCreateNestedOneWithoutFileInput
  }

  export type FileUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    originalName: string
    extension: string
    usage: string
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileCreateOrConnectWithoutUserInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutUserInput, FileUncheckedCreateWithoutUserInput>
  }

  export type FileCreateManyUserInputEnvelope = {
    data: FileCreateManyUserInput | FileCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CvMinuteCreateWithoutUserInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutUserInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutUserInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutUserInput, CvMinuteUncheckedCreateWithoutUserInput>
  }

  export type CvMinuteCreateManyUserInputEnvelope = {
    data: CvMinuteCreateManyUserInput | CvMinuteCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CvMinuteDomainCreateWithoutUserInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute: CvMinuteCreateNestedOneWithoutCvMinuteDomainsInput
  }

  export type CvMinuteDomainUncheckedCreateWithoutUserInput = {
    id?: number
    content: string
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteDomainCreateOrConnectWithoutUserInput = {
    where: CvMinuteDomainWhereUniqueInput
    create: XOR<CvMinuteDomainCreateWithoutUserInput, CvMinuteDomainUncheckedCreateWithoutUserInput>
  }

  export type CvMinuteDomainCreateManyUserInputEnvelope = {
    data: CvMinuteDomainCreateManyUserInput | CvMinuteDomainCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type QualiCarriereQuestionCreateWithoutUserInput = {
    order: number
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sectionInfo: SectionInfoCreateNestedOneWithoutQualiCarriereQuestionsInput
    qualiCarriereResponse?: QualiCarriereResponseCreateNestedOneWithoutQualiCarriereQuestionInput
  }

  export type QualiCarriereQuestionUncheckedCreateWithoutUserInput = {
    id?: number
    order: number
    content: string
    sectionInfoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    qualiCarriereResponse?: QualiCarriereResponseUncheckedCreateNestedOneWithoutQualiCarriereQuestionInput
  }

  export type QualiCarriereQuestionCreateOrConnectWithoutUserInput = {
    where: QualiCarriereQuestionWhereUniqueInput
    create: XOR<QualiCarriereQuestionCreateWithoutUserInput, QualiCarriereQuestionUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereQuestionCreateManyUserInputEnvelope = {
    data: QualiCarriereQuestionCreateManyUserInput | QualiCarriereQuestionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type QualiCarriereResponseCreateWithoutUserInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    qualiCarriereQuestion: QualiCarriereQuestionCreateNestedOneWithoutQualiCarriereResponseInput
    SectionInfo?: SectionInfoCreateNestedOneWithoutQualiCarriereResponsesInput
  }

  export type QualiCarriereResponseUncheckedCreateWithoutUserInput = {
    id?: number
    content: string
    questionId: number
    sectionInfoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResponseCreateOrConnectWithoutUserInput = {
    where: QualiCarriereResponseWhereUniqueInput
    create: XOR<QualiCarriereResponseCreateWithoutUserInput, QualiCarriereResponseUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereResponseCreateManyUserInputEnvelope = {
    data: QualiCarriereResponseCreateManyUserInput | QualiCarriereResponseCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OpenaiResponseCreateWithoutUserInput = {
    responseId: string
    request: string
    response: string
    index: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutOpenaiResponsesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutOpenaiResponsesInput
  }

  export type OpenaiResponseUncheckedCreateWithoutUserInput = {
    id?: number
    responseId: string
    request: string
    response: string
    index: number
    cvMinuteId?: number | null
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OpenaiResponseCreateOrConnectWithoutUserInput = {
    where: OpenaiResponseWhereUniqueInput
    create: XOR<OpenaiResponseCreateWithoutUserInput, OpenaiResponseUncheckedCreateWithoutUserInput>
  }

  export type OpenaiResponseCreateManyUserInputEnvelope = {
    data: OpenaiResponseCreateManyUserInput | OpenaiResponseCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type QualiCarriereChatCreateWithoutUserInput = {
    role: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereChatUncheckedCreateWithoutUserInput = {
    id?: number
    role: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereChatCreateOrConnectWithoutUserInput = {
    where: QualiCarriereChatWhereUniqueInput
    create: XOR<QualiCarriereChatCreateWithoutUserInput, QualiCarriereChatUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereChatCreateManyUserInputEnvelope = {
    data: QualiCarriereChatCreateManyUserInput | QualiCarriereChatCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type QualiCarriereResumeCreateWithoutUserInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sectionInfo: SectionInfoCreateNestedOneWithoutQualiCarriereResumesInput
  }

  export type QualiCarriereResumeUncheckedCreateWithoutUserInput = {
    id?: number
    content: string
    sectionInfoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResumeCreateOrConnectWithoutUserInput = {
    where: QualiCarriereResumeWhereUniqueInput
    create: XOR<QualiCarriereResumeCreateWithoutUserInput, QualiCarriereResumeUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereResumeCreateManyUserInputEnvelope = {
    data: QualiCarriereResumeCreateManyUserInput | QualiCarriereResumeCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type QualiCarriereCompetenceCreateWithoutUserInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sectionInfo: SectionInfoCreateNestedOneWithoutQualiCarriereCompetencesInput
  }

  export type QualiCarriereCompetenceUncheckedCreateWithoutUserInput = {
    id?: number
    content: string
    sectionInfoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereCompetenceCreateOrConnectWithoutUserInput = {
    where: QualiCarriereCompetenceWhereUniqueInput
    create: XOR<QualiCarriereCompetenceCreateWithoutUserInput, QualiCarriereCompetenceUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereCompetenceCreateManyUserInputEnvelope = {
    data: QualiCarriereCompetenceCreateManyUserInput | QualiCarriereCompetenceCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CvThequeCritereCreateWithoutUserInput = {
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCompetences?: CvThequeCompetenceCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereUncheckedCreateWithoutUserInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereCreateOrConnectWithoutUserInput = {
    where: CvThequeCritereWhereUniqueInput
    create: XOR<CvThequeCritereCreateWithoutUserInput, CvThequeCritereUncheckedCreateWithoutUserInput>
  }

  export type CvThequeCritereCreateManyUserInputEnvelope = {
    data: CvThequeCritereCreateManyUserInput | CvThequeCritereCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CvThequeUserCreateWithoutUserInput = {
    score: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCritere: CvThequeCritereCreateNestedOneWithoutCvThequeUsersInput
  }

  export type CvThequeUserUncheckedCreateWithoutUserInput = {
    id?: number
    score: number
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeUserCreateOrConnectWithoutUserInput = {
    where: CvThequeUserWhereUniqueInput
    create: XOR<CvThequeUserCreateWithoutUserInput, CvThequeUserUncheckedCreateWithoutUserInput>
  }

  export type CvThequeUserCreateManyUserInputEnvelope = {
    data: CvThequeUserCreateManyUserInput | CvThequeUserCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CvThequeContactCreateWithoutUserInput = {
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    recruiter: UserCreateNestedOneWithoutRecruiterCvThequeContactsInput
    cvMinute: CvMinuteCreateNestedOneWithoutCvThequeContactsInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutCvThequeContactInput
  }

  export type CvThequeContactUncheckedCreateWithoutUserInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    recruiterId: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutCvThequeContactInput
  }

  export type CvThequeContactCreateOrConnectWithoutUserInput = {
    where: CvThequeContactWhereUniqueInput
    create: XOR<CvThequeContactCreateWithoutUserInput, CvThequeContactUncheckedCreateWithoutUserInput>
  }

  export type CvThequeContactCreateManyUserInputEnvelope = {
    data: CvThequeContactCreateManyUserInput | CvThequeContactCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CvThequeContactCreateWithoutRecruiterInput = {
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserCvThequeContactsInput
    cvMinute: CvMinuteCreateNestedOneWithoutCvThequeContactsInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutCvThequeContactInput
  }

  export type CvThequeContactUncheckedCreateWithoutRecruiterInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    userId: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutCvThequeContactInput
  }

  export type CvThequeContactCreateOrConnectWithoutRecruiterInput = {
    where: CvThequeContactWhereUniqueInput
    create: XOR<CvThequeContactCreateWithoutRecruiterInput, CvThequeContactUncheckedCreateWithoutRecruiterInput>
  }

  export type CvThequeContactCreateManyRecruiterInputEnvelope = {
    data: CvThequeContactCreateManyRecruiterInput | CvThequeContactCreateManyRecruiterInput[]
    skipDuplicates?: boolean
  }

  export type CvThequeContactViewCreateWithoutUserInput = {
    count: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeContact: CvThequeContactCreateNestedOneWithoutCvThequeContactViewsInput
  }

  export type CvThequeContactViewUncheckedCreateWithoutUserInput = {
    id?: number
    count: number
    cvThequeContactId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactViewCreateOrConnectWithoutUserInput = {
    where: CvThequeContactViewWhereUniqueInput
    create: XOR<CvThequeContactViewCreateWithoutUserInput, CvThequeContactViewUncheckedCreateWithoutUserInput>
  }

  export type CvThequeContactViewCreateManyUserInputEnvelope = {
    data: CvThequeContactViewCreateManyUserInput | CvThequeContactViewCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FileUpsertWithWhereUniqueWithoutUserInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutUserInput, FileUncheckedUpdateWithoutUserInput>
    create: XOR<FileCreateWithoutUserInput, FileUncheckedCreateWithoutUserInput>
  }

  export type FileUpdateWithWhereUniqueWithoutUserInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutUserInput, FileUncheckedUpdateWithoutUserInput>
  }

  export type FileUpdateManyWithWhereWithoutUserInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutUserInput>
  }

  export type FileScalarWhereInput = {
    AND?: FileScalarWhereInput | FileScalarWhereInput[]
    OR?: FileScalarWhereInput[]
    NOT?: FileScalarWhereInput | FileScalarWhereInput[]
    id?: IntFilter<"File"> | number
    name?: StringFilter<"File"> | string
    originalName?: StringFilter<"File"> | string
    extension?: StringFilter<"File"> | string
    usage?: StringFilter<"File"> | string
    userId?: IntFilter<"File"> | number
    cvMinuteId?: IntNullableFilter<"File"> | number | null
    sectionInfoId?: IntNullableFilter<"File"> | number | null
    createdAt?: DateTimeFilter<"File"> | Date | string
    updatedAt?: DateTimeFilter<"File"> | Date | string
  }

  export type CvMinuteUpsertWithWhereUniqueWithoutUserInput = {
    where: CvMinuteWhereUniqueInput
    update: XOR<CvMinuteUpdateWithoutUserInput, CvMinuteUncheckedUpdateWithoutUserInput>
    create: XOR<CvMinuteCreateWithoutUserInput, CvMinuteUncheckedCreateWithoutUserInput>
  }

  export type CvMinuteUpdateWithWhereUniqueWithoutUserInput = {
    where: CvMinuteWhereUniqueInput
    data: XOR<CvMinuteUpdateWithoutUserInput, CvMinuteUncheckedUpdateWithoutUserInput>
  }

  export type CvMinuteUpdateManyWithWhereWithoutUserInput = {
    where: CvMinuteScalarWhereInput
    data: XOR<CvMinuteUpdateManyMutationInput, CvMinuteUncheckedUpdateManyWithoutUserInput>
  }

  export type CvMinuteScalarWhereInput = {
    AND?: CvMinuteScalarWhereInput | CvMinuteScalarWhereInput[]
    OR?: CvMinuteScalarWhereInput[]
    NOT?: CvMinuteScalarWhereInput | CvMinuteScalarWhereInput[]
    id?: IntFilter<"CvMinute"> | number
    name?: StringFilter<"CvMinute"> | string
    position?: StringFilter<"CvMinute"> | string
    primaryBg?: StringFilter<"CvMinute"> | string
    secondaryBg?: StringFilter<"CvMinute"> | string
    tertiaryBg?: StringFilter<"CvMinute"> | string
    visible?: BoolFilter<"CvMinute"> | boolean
    qualiCarriereRef?: BoolFilter<"CvMinute"> | boolean
    generated?: StringNullableFilter<"CvMinute"> | string | null
    score?: IntFilter<"CvMinute"> | number
    userId?: IntFilter<"CvMinute"> | number
    cvThequeCritereId?: IntNullableFilter<"CvMinute"> | number | null
    createdAt?: DateTimeFilter<"CvMinute"> | Date | string
    updatedAt?: DateTimeFilter<"CvMinute"> | Date | string
  }

  export type CvMinuteDomainUpsertWithWhereUniqueWithoutUserInput = {
    where: CvMinuteDomainWhereUniqueInput
    update: XOR<CvMinuteDomainUpdateWithoutUserInput, CvMinuteDomainUncheckedUpdateWithoutUserInput>
    create: XOR<CvMinuteDomainCreateWithoutUserInput, CvMinuteDomainUncheckedCreateWithoutUserInput>
  }

  export type CvMinuteDomainUpdateWithWhereUniqueWithoutUserInput = {
    where: CvMinuteDomainWhereUniqueInput
    data: XOR<CvMinuteDomainUpdateWithoutUserInput, CvMinuteDomainUncheckedUpdateWithoutUserInput>
  }

  export type CvMinuteDomainUpdateManyWithWhereWithoutUserInput = {
    where: CvMinuteDomainScalarWhereInput
    data: XOR<CvMinuteDomainUpdateManyMutationInput, CvMinuteDomainUncheckedUpdateManyWithoutUserInput>
  }

  export type CvMinuteDomainScalarWhereInput = {
    AND?: CvMinuteDomainScalarWhereInput | CvMinuteDomainScalarWhereInput[]
    OR?: CvMinuteDomainScalarWhereInput[]
    NOT?: CvMinuteDomainScalarWhereInput | CvMinuteDomainScalarWhereInput[]
    id?: IntFilter<"CvMinuteDomain"> | number
    content?: StringFilter<"CvMinuteDomain"> | string
    cvMinuteId?: IntFilter<"CvMinuteDomain"> | number
    userId?: IntFilter<"CvMinuteDomain"> | number
    createdAt?: DateTimeFilter<"CvMinuteDomain"> | Date | string
    updatedAt?: DateTimeFilter<"CvMinuteDomain"> | Date | string
  }

  export type QualiCarriereQuestionUpsertWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereQuestionWhereUniqueInput
    update: XOR<QualiCarriereQuestionUpdateWithoutUserInput, QualiCarriereQuestionUncheckedUpdateWithoutUserInput>
    create: XOR<QualiCarriereQuestionCreateWithoutUserInput, QualiCarriereQuestionUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereQuestionUpdateWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereQuestionWhereUniqueInput
    data: XOR<QualiCarriereQuestionUpdateWithoutUserInput, QualiCarriereQuestionUncheckedUpdateWithoutUserInput>
  }

  export type QualiCarriereQuestionUpdateManyWithWhereWithoutUserInput = {
    where: QualiCarriereQuestionScalarWhereInput
    data: XOR<QualiCarriereQuestionUpdateManyMutationInput, QualiCarriereQuestionUncheckedUpdateManyWithoutUserInput>
  }

  export type QualiCarriereQuestionScalarWhereInput = {
    AND?: QualiCarriereQuestionScalarWhereInput | QualiCarriereQuestionScalarWhereInput[]
    OR?: QualiCarriereQuestionScalarWhereInput[]
    NOT?: QualiCarriereQuestionScalarWhereInput | QualiCarriereQuestionScalarWhereInput[]
    id?: IntFilter<"QualiCarriereQuestion"> | number
    order?: IntFilter<"QualiCarriereQuestion"> | number
    content?: StringFilter<"QualiCarriereQuestion"> | string
    sectionInfoId?: IntFilter<"QualiCarriereQuestion"> | number
    userId?: IntFilter<"QualiCarriereQuestion"> | number
    createdAt?: DateTimeFilter<"QualiCarriereQuestion"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereQuestion"> | Date | string
  }

  export type QualiCarriereResponseUpsertWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereResponseWhereUniqueInput
    update: XOR<QualiCarriereResponseUpdateWithoutUserInput, QualiCarriereResponseUncheckedUpdateWithoutUserInput>
    create: XOR<QualiCarriereResponseCreateWithoutUserInput, QualiCarriereResponseUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereResponseUpdateWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereResponseWhereUniqueInput
    data: XOR<QualiCarriereResponseUpdateWithoutUserInput, QualiCarriereResponseUncheckedUpdateWithoutUserInput>
  }

  export type QualiCarriereResponseUpdateManyWithWhereWithoutUserInput = {
    where: QualiCarriereResponseScalarWhereInput
    data: XOR<QualiCarriereResponseUpdateManyMutationInput, QualiCarriereResponseUncheckedUpdateManyWithoutUserInput>
  }

  export type QualiCarriereResponseScalarWhereInput = {
    AND?: QualiCarriereResponseScalarWhereInput | QualiCarriereResponseScalarWhereInput[]
    OR?: QualiCarriereResponseScalarWhereInput[]
    NOT?: QualiCarriereResponseScalarWhereInput | QualiCarriereResponseScalarWhereInput[]
    id?: IntFilter<"QualiCarriereResponse"> | number
    content?: StringFilter<"QualiCarriereResponse"> | string
    questionId?: IntFilter<"QualiCarriereResponse"> | number
    sectionInfoId?: IntFilter<"QualiCarriereResponse"> | number
    userId?: IntFilter<"QualiCarriereResponse"> | number
    createdAt?: DateTimeFilter<"QualiCarriereResponse"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereResponse"> | Date | string
  }

  export type OpenaiResponseUpsertWithWhereUniqueWithoutUserInput = {
    where: OpenaiResponseWhereUniqueInput
    update: XOR<OpenaiResponseUpdateWithoutUserInput, OpenaiResponseUncheckedUpdateWithoutUserInput>
    create: XOR<OpenaiResponseCreateWithoutUserInput, OpenaiResponseUncheckedCreateWithoutUserInput>
  }

  export type OpenaiResponseUpdateWithWhereUniqueWithoutUserInput = {
    where: OpenaiResponseWhereUniqueInput
    data: XOR<OpenaiResponseUpdateWithoutUserInput, OpenaiResponseUncheckedUpdateWithoutUserInput>
  }

  export type OpenaiResponseUpdateManyWithWhereWithoutUserInput = {
    where: OpenaiResponseScalarWhereInput
    data: XOR<OpenaiResponseUpdateManyMutationInput, OpenaiResponseUncheckedUpdateManyWithoutUserInput>
  }

  export type OpenaiResponseScalarWhereInput = {
    AND?: OpenaiResponseScalarWhereInput | OpenaiResponseScalarWhereInput[]
    OR?: OpenaiResponseScalarWhereInput[]
    NOT?: OpenaiResponseScalarWhereInput | OpenaiResponseScalarWhereInput[]
    id?: IntFilter<"OpenaiResponse"> | number
    responseId?: StringFilter<"OpenaiResponse"> | string
    request?: StringFilter<"OpenaiResponse"> | string
    response?: StringFilter<"OpenaiResponse"> | string
    index?: IntFilter<"OpenaiResponse"> | number
    cvMinuteId?: IntNullableFilter<"OpenaiResponse"> | number | null
    userId?: IntNullableFilter<"OpenaiResponse"> | number | null
    cvThequeCritereId?: IntNullableFilter<"OpenaiResponse"> | number | null
    createdAt?: DateTimeFilter<"OpenaiResponse"> | Date | string
    updatedAt?: DateTimeFilter<"OpenaiResponse"> | Date | string
  }

  export type QualiCarriereChatUpsertWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereChatWhereUniqueInput
    update: XOR<QualiCarriereChatUpdateWithoutUserInput, QualiCarriereChatUncheckedUpdateWithoutUserInput>
    create: XOR<QualiCarriereChatCreateWithoutUserInput, QualiCarriereChatUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereChatUpdateWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereChatWhereUniqueInput
    data: XOR<QualiCarriereChatUpdateWithoutUserInput, QualiCarriereChatUncheckedUpdateWithoutUserInput>
  }

  export type QualiCarriereChatUpdateManyWithWhereWithoutUserInput = {
    where: QualiCarriereChatScalarWhereInput
    data: XOR<QualiCarriereChatUpdateManyMutationInput, QualiCarriereChatUncheckedUpdateManyWithoutUserInput>
  }

  export type QualiCarriereChatScalarWhereInput = {
    AND?: QualiCarriereChatScalarWhereInput | QualiCarriereChatScalarWhereInput[]
    OR?: QualiCarriereChatScalarWhereInput[]
    NOT?: QualiCarriereChatScalarWhereInput | QualiCarriereChatScalarWhereInput[]
    id?: IntFilter<"QualiCarriereChat"> | number
    role?: StringFilter<"QualiCarriereChat"> | string
    content?: StringFilter<"QualiCarriereChat"> | string
    userId?: IntFilter<"QualiCarriereChat"> | number
    createdAt?: DateTimeFilter<"QualiCarriereChat"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereChat"> | Date | string
  }

  export type QualiCarriereResumeUpsertWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereResumeWhereUniqueInput
    update: XOR<QualiCarriereResumeUpdateWithoutUserInput, QualiCarriereResumeUncheckedUpdateWithoutUserInput>
    create: XOR<QualiCarriereResumeCreateWithoutUserInput, QualiCarriereResumeUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereResumeUpdateWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereResumeWhereUniqueInput
    data: XOR<QualiCarriereResumeUpdateWithoutUserInput, QualiCarriereResumeUncheckedUpdateWithoutUserInput>
  }

  export type QualiCarriereResumeUpdateManyWithWhereWithoutUserInput = {
    where: QualiCarriereResumeScalarWhereInput
    data: XOR<QualiCarriereResumeUpdateManyMutationInput, QualiCarriereResumeUncheckedUpdateManyWithoutUserInput>
  }

  export type QualiCarriereResumeScalarWhereInput = {
    AND?: QualiCarriereResumeScalarWhereInput | QualiCarriereResumeScalarWhereInput[]
    OR?: QualiCarriereResumeScalarWhereInput[]
    NOT?: QualiCarriereResumeScalarWhereInput | QualiCarriereResumeScalarWhereInput[]
    id?: IntFilter<"QualiCarriereResume"> | number
    content?: StringFilter<"QualiCarriereResume"> | string
    sectionInfoId?: IntFilter<"QualiCarriereResume"> | number
    userId?: IntFilter<"QualiCarriereResume"> | number
    createdAt?: DateTimeFilter<"QualiCarriereResume"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereResume"> | Date | string
  }

  export type QualiCarriereCompetenceUpsertWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereCompetenceWhereUniqueInput
    update: XOR<QualiCarriereCompetenceUpdateWithoutUserInput, QualiCarriereCompetenceUncheckedUpdateWithoutUserInput>
    create: XOR<QualiCarriereCompetenceCreateWithoutUserInput, QualiCarriereCompetenceUncheckedCreateWithoutUserInput>
  }

  export type QualiCarriereCompetenceUpdateWithWhereUniqueWithoutUserInput = {
    where: QualiCarriereCompetenceWhereUniqueInput
    data: XOR<QualiCarriereCompetenceUpdateWithoutUserInput, QualiCarriereCompetenceUncheckedUpdateWithoutUserInput>
  }

  export type QualiCarriereCompetenceUpdateManyWithWhereWithoutUserInput = {
    where: QualiCarriereCompetenceScalarWhereInput
    data: XOR<QualiCarriereCompetenceUpdateManyMutationInput, QualiCarriereCompetenceUncheckedUpdateManyWithoutUserInput>
  }

  export type QualiCarriereCompetenceScalarWhereInput = {
    AND?: QualiCarriereCompetenceScalarWhereInput | QualiCarriereCompetenceScalarWhereInput[]
    OR?: QualiCarriereCompetenceScalarWhereInput[]
    NOT?: QualiCarriereCompetenceScalarWhereInput | QualiCarriereCompetenceScalarWhereInput[]
    id?: IntFilter<"QualiCarriereCompetence"> | number
    content?: StringFilter<"QualiCarriereCompetence"> | string
    sectionInfoId?: IntFilter<"QualiCarriereCompetence"> | number
    userId?: IntFilter<"QualiCarriereCompetence"> | number
    createdAt?: DateTimeFilter<"QualiCarriereCompetence"> | Date | string
    updatedAt?: DateTimeFilter<"QualiCarriereCompetence"> | Date | string
  }

  export type CvThequeCritereUpsertWithWhereUniqueWithoutUserInput = {
    where: CvThequeCritereWhereUniqueInput
    update: XOR<CvThequeCritereUpdateWithoutUserInput, CvThequeCritereUncheckedUpdateWithoutUserInput>
    create: XOR<CvThequeCritereCreateWithoutUserInput, CvThequeCritereUncheckedCreateWithoutUserInput>
  }

  export type CvThequeCritereUpdateWithWhereUniqueWithoutUserInput = {
    where: CvThequeCritereWhereUniqueInput
    data: XOR<CvThequeCritereUpdateWithoutUserInput, CvThequeCritereUncheckedUpdateWithoutUserInput>
  }

  export type CvThequeCritereUpdateManyWithWhereWithoutUserInput = {
    where: CvThequeCritereScalarWhereInput
    data: XOR<CvThequeCritereUpdateManyMutationInput, CvThequeCritereUncheckedUpdateManyWithoutUserInput>
  }

  export type CvThequeCritereScalarWhereInput = {
    AND?: CvThequeCritereScalarWhereInput | CvThequeCritereScalarWhereInput[]
    OR?: CvThequeCritereScalarWhereInput[]
    NOT?: CvThequeCritereScalarWhereInput | CvThequeCritereScalarWhereInput[]
    id?: IntFilter<"CvThequeCritere"> | number
    position?: StringFilter<"CvThequeCritere"> | string
    domain?: StringFilter<"CvThequeCritere"> | string
    description?: StringFilter<"CvThequeCritere"> | string
    diplome?: StringFilter<"CvThequeCritere"> | string
    localisation?: StringFilter<"CvThequeCritere"> | string
    distance?: IntFilter<"CvThequeCritere"> | number
    experience?: IntNullableFilter<"CvThequeCritere"> | number | null
    evaluation?: IntFilter<"CvThequeCritere"> | number
    saved?: BoolFilter<"CvThequeCritere"> | boolean
    userId?: IntFilter<"CvThequeCritere"> | number
    createdAt?: DateTimeFilter<"CvThequeCritere"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeCritere"> | Date | string
  }

  export type CvThequeUserUpsertWithWhereUniqueWithoutUserInput = {
    where: CvThequeUserWhereUniqueInput
    update: XOR<CvThequeUserUpdateWithoutUserInput, CvThequeUserUncheckedUpdateWithoutUserInput>
    create: XOR<CvThequeUserCreateWithoutUserInput, CvThequeUserUncheckedCreateWithoutUserInput>
  }

  export type CvThequeUserUpdateWithWhereUniqueWithoutUserInput = {
    where: CvThequeUserWhereUniqueInput
    data: XOR<CvThequeUserUpdateWithoutUserInput, CvThequeUserUncheckedUpdateWithoutUserInput>
  }

  export type CvThequeUserUpdateManyWithWhereWithoutUserInput = {
    where: CvThequeUserScalarWhereInput
    data: XOR<CvThequeUserUpdateManyMutationInput, CvThequeUserUncheckedUpdateManyWithoutUserInput>
  }

  export type CvThequeUserScalarWhereInput = {
    AND?: CvThequeUserScalarWhereInput | CvThequeUserScalarWhereInput[]
    OR?: CvThequeUserScalarWhereInput[]
    NOT?: CvThequeUserScalarWhereInput | CvThequeUserScalarWhereInput[]
    id?: IntFilter<"CvThequeUser"> | number
    score?: IntFilter<"CvThequeUser"> | number
    userId?: IntFilter<"CvThequeUser"> | number
    cvThequeCritereId?: IntFilter<"CvThequeUser"> | number
    createdAt?: DateTimeFilter<"CvThequeUser"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeUser"> | Date | string
  }

  export type CvThequeContactUpsertWithWhereUniqueWithoutUserInput = {
    where: CvThequeContactWhereUniqueInput
    update: XOR<CvThequeContactUpdateWithoutUserInput, CvThequeContactUncheckedUpdateWithoutUserInput>
    create: XOR<CvThequeContactCreateWithoutUserInput, CvThequeContactUncheckedCreateWithoutUserInput>
  }

  export type CvThequeContactUpdateWithWhereUniqueWithoutUserInput = {
    where: CvThequeContactWhereUniqueInput
    data: XOR<CvThequeContactUpdateWithoutUserInput, CvThequeContactUncheckedUpdateWithoutUserInput>
  }

  export type CvThequeContactUpdateManyWithWhereWithoutUserInput = {
    where: CvThequeContactScalarWhereInput
    data: XOR<CvThequeContactUpdateManyMutationInput, CvThequeContactUncheckedUpdateManyWithoutUserInput>
  }

  export type CvThequeContactScalarWhereInput = {
    AND?: CvThequeContactScalarWhereInput | CvThequeContactScalarWhereInput[]
    OR?: CvThequeContactScalarWhereInput[]
    NOT?: CvThequeContactScalarWhereInput | CvThequeContactScalarWhereInput[]
    id?: IntFilter<"CvThequeContact"> | number
    type?: StringFilter<"CvThequeContact"> | string
    date?: StringFilter<"CvThequeContact"> | string
    hour?: IntFilter<"CvThequeContact"> | number
    minute?: IntFilter<"CvThequeContact"> | number
    message?: StringFilter<"CvThequeContact"> | string
    status?: StringFilter<"CvThequeContact"> | string
    userId?: IntFilter<"CvThequeContact"> | number
    recruiterId?: IntFilter<"CvThequeContact"> | number
    cvMinuteId?: IntFilter<"CvThequeContact"> | number
    createdAt?: DateTimeFilter<"CvThequeContact"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeContact"> | Date | string
  }

  export type CvThequeContactUpsertWithWhereUniqueWithoutRecruiterInput = {
    where: CvThequeContactWhereUniqueInput
    update: XOR<CvThequeContactUpdateWithoutRecruiterInput, CvThequeContactUncheckedUpdateWithoutRecruiterInput>
    create: XOR<CvThequeContactCreateWithoutRecruiterInput, CvThequeContactUncheckedCreateWithoutRecruiterInput>
  }

  export type CvThequeContactUpdateWithWhereUniqueWithoutRecruiterInput = {
    where: CvThequeContactWhereUniqueInput
    data: XOR<CvThequeContactUpdateWithoutRecruiterInput, CvThequeContactUncheckedUpdateWithoutRecruiterInput>
  }

  export type CvThequeContactUpdateManyWithWhereWithoutRecruiterInput = {
    where: CvThequeContactScalarWhereInput
    data: XOR<CvThequeContactUpdateManyMutationInput, CvThequeContactUncheckedUpdateManyWithoutRecruiterInput>
  }

  export type CvThequeContactViewUpsertWithWhereUniqueWithoutUserInput = {
    where: CvThequeContactViewWhereUniqueInput
    update: XOR<CvThequeContactViewUpdateWithoutUserInput, CvThequeContactViewUncheckedUpdateWithoutUserInput>
    create: XOR<CvThequeContactViewCreateWithoutUserInput, CvThequeContactViewUncheckedCreateWithoutUserInput>
  }

  export type CvThequeContactViewUpdateWithWhereUniqueWithoutUserInput = {
    where: CvThequeContactViewWhereUniqueInput
    data: XOR<CvThequeContactViewUpdateWithoutUserInput, CvThequeContactViewUncheckedUpdateWithoutUserInput>
  }

  export type CvThequeContactViewUpdateManyWithWhereWithoutUserInput = {
    where: CvThequeContactViewScalarWhereInput
    data: XOR<CvThequeContactViewUpdateManyMutationInput, CvThequeContactViewUncheckedUpdateManyWithoutUserInput>
  }

  export type CvThequeContactViewScalarWhereInput = {
    AND?: CvThequeContactViewScalarWhereInput | CvThequeContactViewScalarWhereInput[]
    OR?: CvThequeContactViewScalarWhereInput[]
    NOT?: CvThequeContactViewScalarWhereInput | CvThequeContactViewScalarWhereInput[]
    id?: IntFilter<"CvThequeContactView"> | number
    count?: IntFilter<"CvThequeContactView"> | number
    userId?: IntFilter<"CvThequeContactView"> | number
    cvThequeContactId?: IntFilter<"CvThequeContactView"> | number
    createdAt?: DateTimeFilter<"CvThequeContactView"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeContactView"> | Date | string
  }

  export type UserCreateWithoutFilesInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutFilesInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutFilesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFilesInput, UserUncheckedCreateWithoutFilesInput>
  }

  export type CvMinuteCreateWithoutFilesInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutFilesInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutFilesInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutFilesInput, CvMinuteUncheckedCreateWithoutFilesInput>
  }

  export type SectionInfoCreateWithoutFileInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    advices?: AdviceCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationCreateNestedOneWithoutSectionInfoInput
    cvMinuteSection: CvMinuteSectionCreateNestedOneWithoutSectionInfosInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateWithoutFileInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    advices?: AdviceUncheckedCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoCreateOrConnectWithoutFileInput = {
    where: SectionInfoWhereUniqueInput
    create: XOR<SectionInfoCreateWithoutFileInput, SectionInfoUncheckedCreateWithoutFileInput>
  }

  export type UserUpsertWithoutFilesInput = {
    update: XOR<UserUpdateWithoutFilesInput, UserUncheckedUpdateWithoutFilesInput>
    create: XOR<UserCreateWithoutFilesInput, UserUncheckedCreateWithoutFilesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFilesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFilesInput, UserUncheckedUpdateWithoutFilesInput>
  }

  export type UserUpdateWithoutFilesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFilesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CvMinuteUpsertWithoutFilesInput = {
    update: XOR<CvMinuteUpdateWithoutFilesInput, CvMinuteUncheckedUpdateWithoutFilesInput>
    create: XOR<CvMinuteCreateWithoutFilesInput, CvMinuteUncheckedCreateWithoutFilesInput>
    where?: CvMinuteWhereInput
  }

  export type CvMinuteUpdateToOneWithWhereWithoutFilesInput = {
    where?: CvMinuteWhereInput
    data: XOR<CvMinuteUpdateWithoutFilesInput, CvMinuteUncheckedUpdateWithoutFilesInput>
  }

  export type CvMinuteUpdateWithoutFilesInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutFilesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type SectionInfoUpsertWithoutFileInput = {
    update: XOR<SectionInfoUpdateWithoutFileInput, SectionInfoUncheckedUpdateWithoutFileInput>
    create: XOR<SectionInfoCreateWithoutFileInput, SectionInfoUncheckedCreateWithoutFileInput>
    where?: SectionInfoWhereInput
  }

  export type SectionInfoUpdateToOneWithWhereWithoutFileInput = {
    where?: SectionInfoWhereInput
    data: XOR<SectionInfoUpdateWithoutFileInput, SectionInfoUncheckedUpdateWithoutFileInput>
  }

  export type SectionInfoUpdateWithoutFileInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    advices?: AdviceUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUpdateOneWithoutSectionInfoNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateWithoutFileInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    advices?: AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type UserCreateWithoutCvMinutesInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCvMinutesInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCvMinutesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCvMinutesInput, UserUncheckedCreateWithoutCvMinutesInput>
  }

  export type CvThequeCritereCreateWithoutCvMinutesInput = {
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeCriteresInput
    cvThequeCompetences?: CvThequeCompetenceCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereUncheckedCreateWithoutCvMinutesInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereCreateOrConnectWithoutCvMinutesInput = {
    where: CvThequeCritereWhereUniqueInput
    create: XOR<CvThequeCritereCreateWithoutCvMinutesInput, CvThequeCritereUncheckedCreateWithoutCvMinutesInput>
  }

  export type FileCreateWithoutCvMinuteInput = {
    name: string
    originalName: string
    extension: string
    usage: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutFilesInput
    sectionInfo?: SectionInfoCreateNestedOneWithoutFileInput
  }

  export type FileUncheckedCreateWithoutCvMinuteInput = {
    id?: number
    name: string
    originalName: string
    extension: string
    usage: string
    userId: number
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileCreateOrConnectWithoutCvMinuteInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutCvMinuteInput, FileUncheckedCreateWithoutCvMinuteInput>
  }

  export type FileCreateManyCvMinuteInputEnvelope = {
    data: FileCreateManyCvMinuteInput | FileCreateManyCvMinuteInput[]
    skipDuplicates?: boolean
  }

  export type AdviceCreateWithoutCvMinuteInput = {
    type: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    sectionInfo?: SectionInfoCreateNestedOneWithoutAdvicesInput
    cvMinuteSection?: CvMinuteSectionCreateNestedOneWithoutAdvicesInput
  }

  export type AdviceUncheckedCreateWithoutCvMinuteInput = {
    id?: number
    type: string
    content: string
    sectionInfoId?: number | null
    cvMinuteSectionId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdviceCreateOrConnectWithoutCvMinuteInput = {
    where: AdviceWhereUniqueInput
    create: XOR<AdviceCreateWithoutCvMinuteInput, AdviceUncheckedCreateWithoutCvMinuteInput>
  }

  export type AdviceCreateManyCvMinuteInputEnvelope = {
    data: AdviceCreateManyCvMinuteInput | AdviceCreateManyCvMinuteInput[]
    skipDuplicates?: boolean
  }

  export type CvMinuteSectionCreateWithoutCvMinuteInput = {
    sectionOrder?: number | null
    sectionTitle?: string | null
    section: SectionCreateNestedOneWithoutCvMinuteSectionsInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteSectionInput
    sectionInfos?: SectionInfoCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionUncheckedCreateWithoutCvMinuteInput = {
    id?: number
    sectionOrder?: number | null
    sectionTitle?: string | null
    sectionId: number
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteSectionInput
    sectionInfos?: SectionInfoUncheckedCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionCreateOrConnectWithoutCvMinuteInput = {
    where: CvMinuteSectionWhereUniqueInput
    create: XOR<CvMinuteSectionCreateWithoutCvMinuteInput, CvMinuteSectionUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvMinuteSectionCreateManyCvMinuteInputEnvelope = {
    data: CvMinuteSectionCreateManyCvMinuteInput | CvMinuteSectionCreateManyCvMinuteInput[]
    skipDuplicates?: boolean
  }

  export type OpenaiResponseCreateWithoutCvMinuteInput = {
    responseId: string
    request: string
    response: string
    index: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutOpenaiResponsesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutOpenaiResponsesInput
  }

  export type OpenaiResponseUncheckedCreateWithoutCvMinuteInput = {
    id?: number
    responseId: string
    request: string
    response: string
    index: number
    userId?: number | null
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OpenaiResponseCreateOrConnectWithoutCvMinuteInput = {
    where: OpenaiResponseWhereUniqueInput
    create: XOR<OpenaiResponseCreateWithoutCvMinuteInput, OpenaiResponseUncheckedCreateWithoutCvMinuteInput>
  }

  export type OpenaiResponseCreateManyCvMinuteInputEnvelope = {
    data: OpenaiResponseCreateManyCvMinuteInput | OpenaiResponseCreateManyCvMinuteInput[]
    skipDuplicates?: boolean
  }

  export type EvaluationCreateWithoutCvMinuteInput = {
    initialScore: number
    actualScore?: number | null
    content: string
    weakContent?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    sectionInfo?: SectionInfoCreateNestedOneWithoutEvaluationInput
  }

  export type EvaluationUncheckedCreateWithoutCvMinuteInput = {
    id?: number
    initialScore: number
    actualScore?: number | null
    content: string
    weakContent?: string | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EvaluationCreateOrConnectWithoutCvMinuteInput = {
    where: EvaluationWhereUniqueInput
    create: XOR<EvaluationCreateWithoutCvMinuteInput, EvaluationUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvThequeViewCreateWithoutCvMinuteInput = {
    count: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCritere: CvThequeCritereCreateNestedOneWithoutCvThequeViewsInput
  }

  export type CvThequeViewUncheckedCreateWithoutCvMinuteInput = {
    id?: number
    count: number
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeViewCreateOrConnectWithoutCvMinuteInput = {
    where: CvThequeViewWhereUniqueInput
    create: XOR<CvThequeViewCreateWithoutCvMinuteInput, CvThequeViewUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvThequeViewCreateManyCvMinuteInputEnvelope = {
    data: CvThequeViewCreateManyCvMinuteInput | CvThequeViewCreateManyCvMinuteInput[]
    skipDuplicates?: boolean
  }

  export type CvMinuteDomainCreateWithoutCvMinuteInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinuteDomainsInput
  }

  export type CvMinuteDomainUncheckedCreateWithoutCvMinuteInput = {
    id?: number
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteDomainCreateOrConnectWithoutCvMinuteInput = {
    where: CvMinuteDomainWhereUniqueInput
    create: XOR<CvMinuteDomainCreateWithoutCvMinuteInput, CvMinuteDomainUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvMinuteDomainCreateManyCvMinuteInputEnvelope = {
    data: CvMinuteDomainCreateManyCvMinuteInput | CvMinuteDomainCreateManyCvMinuteInput[]
    skipDuplicates?: boolean
  }

  export type CvThequeContactCreateWithoutCvMinuteInput = {
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserCvThequeContactsInput
    recruiter: UserCreateNestedOneWithoutRecruiterCvThequeContactsInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutCvThequeContactInput
  }

  export type CvThequeContactUncheckedCreateWithoutCvMinuteInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    userId: number
    recruiterId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutCvThequeContactInput
  }

  export type CvThequeContactCreateOrConnectWithoutCvMinuteInput = {
    where: CvThequeContactWhereUniqueInput
    create: XOR<CvThequeContactCreateWithoutCvMinuteInput, CvThequeContactUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvThequeContactCreateManyCvMinuteInputEnvelope = {
    data: CvThequeContactCreateManyCvMinuteInput | CvThequeContactCreateManyCvMinuteInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCvMinutesInput = {
    update: XOR<UserUpdateWithoutCvMinutesInput, UserUncheckedUpdateWithoutCvMinutesInput>
    create: XOR<UserCreateWithoutCvMinutesInput, UserUncheckedCreateWithoutCvMinutesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCvMinutesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCvMinutesInput, UserUncheckedUpdateWithoutCvMinutesInput>
  }

  export type UserUpdateWithoutCvMinutesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCvMinutesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CvThequeCritereUpsertWithoutCvMinutesInput = {
    update: XOR<CvThequeCritereUpdateWithoutCvMinutesInput, CvThequeCritereUncheckedUpdateWithoutCvMinutesInput>
    create: XOR<CvThequeCritereCreateWithoutCvMinutesInput, CvThequeCritereUncheckedCreateWithoutCvMinutesInput>
    where?: CvThequeCritereWhereInput
  }

  export type CvThequeCritereUpdateToOneWithWhereWithoutCvMinutesInput = {
    where?: CvThequeCritereWhereInput
    data: XOR<CvThequeCritereUpdateWithoutCvMinutesInput, CvThequeCritereUncheckedUpdateWithoutCvMinutesInput>
  }

  export type CvThequeCritereUpdateWithoutCvMinutesInput = {
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeCriteresNestedInput
    cvThequeCompetences?: CvThequeCompetenceUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereUncheckedUpdateWithoutCvMinutesInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type FileUpsertWithWhereUniqueWithoutCvMinuteInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutCvMinuteInput, FileUncheckedUpdateWithoutCvMinuteInput>
    create: XOR<FileCreateWithoutCvMinuteInput, FileUncheckedCreateWithoutCvMinuteInput>
  }

  export type FileUpdateWithWhereUniqueWithoutCvMinuteInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutCvMinuteInput, FileUncheckedUpdateWithoutCvMinuteInput>
  }

  export type FileUpdateManyWithWhereWithoutCvMinuteInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutCvMinuteInput>
  }

  export type AdviceUpsertWithWhereUniqueWithoutCvMinuteInput = {
    where: AdviceWhereUniqueInput
    update: XOR<AdviceUpdateWithoutCvMinuteInput, AdviceUncheckedUpdateWithoutCvMinuteInput>
    create: XOR<AdviceCreateWithoutCvMinuteInput, AdviceUncheckedCreateWithoutCvMinuteInput>
  }

  export type AdviceUpdateWithWhereUniqueWithoutCvMinuteInput = {
    where: AdviceWhereUniqueInput
    data: XOR<AdviceUpdateWithoutCvMinuteInput, AdviceUncheckedUpdateWithoutCvMinuteInput>
  }

  export type AdviceUpdateManyWithWhereWithoutCvMinuteInput = {
    where: AdviceScalarWhereInput
    data: XOR<AdviceUpdateManyMutationInput, AdviceUncheckedUpdateManyWithoutCvMinuteInput>
  }

  export type AdviceScalarWhereInput = {
    AND?: AdviceScalarWhereInput | AdviceScalarWhereInput[]
    OR?: AdviceScalarWhereInput[]
    NOT?: AdviceScalarWhereInput | AdviceScalarWhereInput[]
    id?: IntFilter<"Advice"> | number
    type?: StringFilter<"Advice"> | string
    content?: StringFilter<"Advice"> | string
    cvMinuteId?: IntNullableFilter<"Advice"> | number | null
    sectionInfoId?: IntNullableFilter<"Advice"> | number | null
    cvMinuteSectionId?: IntNullableFilter<"Advice"> | number | null
    createdAt?: DateTimeFilter<"Advice"> | Date | string
    updatedAt?: DateTimeFilter<"Advice"> | Date | string
  }

  export type CvMinuteSectionUpsertWithWhereUniqueWithoutCvMinuteInput = {
    where: CvMinuteSectionWhereUniqueInput
    update: XOR<CvMinuteSectionUpdateWithoutCvMinuteInput, CvMinuteSectionUncheckedUpdateWithoutCvMinuteInput>
    create: XOR<CvMinuteSectionCreateWithoutCvMinuteInput, CvMinuteSectionUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvMinuteSectionUpdateWithWhereUniqueWithoutCvMinuteInput = {
    where: CvMinuteSectionWhereUniqueInput
    data: XOR<CvMinuteSectionUpdateWithoutCvMinuteInput, CvMinuteSectionUncheckedUpdateWithoutCvMinuteInput>
  }

  export type CvMinuteSectionUpdateManyWithWhereWithoutCvMinuteInput = {
    where: CvMinuteSectionScalarWhereInput
    data: XOR<CvMinuteSectionUpdateManyMutationInput, CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteInput>
  }

  export type CvMinuteSectionScalarWhereInput = {
    AND?: CvMinuteSectionScalarWhereInput | CvMinuteSectionScalarWhereInput[]
    OR?: CvMinuteSectionScalarWhereInput[]
    NOT?: CvMinuteSectionScalarWhereInput | CvMinuteSectionScalarWhereInput[]
    id?: IntFilter<"CvMinuteSection"> | number
    sectionOrder?: IntNullableFilter<"CvMinuteSection"> | number | null
    sectionTitle?: StringNullableFilter<"CvMinuteSection"> | string | null
    cvMinuteId?: IntFilter<"CvMinuteSection"> | number
    sectionId?: IntFilter<"CvMinuteSection"> | number
  }

  export type OpenaiResponseUpsertWithWhereUniqueWithoutCvMinuteInput = {
    where: OpenaiResponseWhereUniqueInput
    update: XOR<OpenaiResponseUpdateWithoutCvMinuteInput, OpenaiResponseUncheckedUpdateWithoutCvMinuteInput>
    create: XOR<OpenaiResponseCreateWithoutCvMinuteInput, OpenaiResponseUncheckedCreateWithoutCvMinuteInput>
  }

  export type OpenaiResponseUpdateWithWhereUniqueWithoutCvMinuteInput = {
    where: OpenaiResponseWhereUniqueInput
    data: XOR<OpenaiResponseUpdateWithoutCvMinuteInput, OpenaiResponseUncheckedUpdateWithoutCvMinuteInput>
  }

  export type OpenaiResponseUpdateManyWithWhereWithoutCvMinuteInput = {
    where: OpenaiResponseScalarWhereInput
    data: XOR<OpenaiResponseUpdateManyMutationInput, OpenaiResponseUncheckedUpdateManyWithoutCvMinuteInput>
  }

  export type EvaluationUpsertWithoutCvMinuteInput = {
    update: XOR<EvaluationUpdateWithoutCvMinuteInput, EvaluationUncheckedUpdateWithoutCvMinuteInput>
    create: XOR<EvaluationCreateWithoutCvMinuteInput, EvaluationUncheckedCreateWithoutCvMinuteInput>
    where?: EvaluationWhereInput
  }

  export type EvaluationUpdateToOneWithWhereWithoutCvMinuteInput = {
    where?: EvaluationWhereInput
    data: XOR<EvaluationUpdateWithoutCvMinuteInput, EvaluationUncheckedUpdateWithoutCvMinuteInput>
  }

  export type EvaluationUpdateWithoutCvMinuteInput = {
    initialScore?: IntFieldUpdateOperationsInput | number
    actualScore?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    weakContent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sectionInfo?: SectionInfoUpdateOneWithoutEvaluationNestedInput
  }

  export type EvaluationUncheckedUpdateWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    initialScore?: IntFieldUpdateOperationsInput | number
    actualScore?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    weakContent?: NullableStringFieldUpdateOperationsInput | string | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeViewUpsertWithWhereUniqueWithoutCvMinuteInput = {
    where: CvThequeViewWhereUniqueInput
    update: XOR<CvThequeViewUpdateWithoutCvMinuteInput, CvThequeViewUncheckedUpdateWithoutCvMinuteInput>
    create: XOR<CvThequeViewCreateWithoutCvMinuteInput, CvThequeViewUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvThequeViewUpdateWithWhereUniqueWithoutCvMinuteInput = {
    where: CvThequeViewWhereUniqueInput
    data: XOR<CvThequeViewUpdateWithoutCvMinuteInput, CvThequeViewUncheckedUpdateWithoutCvMinuteInput>
  }

  export type CvThequeViewUpdateManyWithWhereWithoutCvMinuteInput = {
    where: CvThequeViewScalarWhereInput
    data: XOR<CvThequeViewUpdateManyMutationInput, CvThequeViewUncheckedUpdateManyWithoutCvMinuteInput>
  }

  export type CvThequeViewScalarWhereInput = {
    AND?: CvThequeViewScalarWhereInput | CvThequeViewScalarWhereInput[]
    OR?: CvThequeViewScalarWhereInput[]
    NOT?: CvThequeViewScalarWhereInput | CvThequeViewScalarWhereInput[]
    id?: IntFilter<"CvThequeView"> | number
    count?: IntFilter<"CvThequeView"> | number
    cvMinuteId?: IntFilter<"CvThequeView"> | number
    cvThequeCritereId?: IntFilter<"CvThequeView"> | number
    createdAt?: DateTimeFilter<"CvThequeView"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeView"> | Date | string
  }

  export type CvMinuteDomainUpsertWithWhereUniqueWithoutCvMinuteInput = {
    where: CvMinuteDomainWhereUniqueInput
    update: XOR<CvMinuteDomainUpdateWithoutCvMinuteInput, CvMinuteDomainUncheckedUpdateWithoutCvMinuteInput>
    create: XOR<CvMinuteDomainCreateWithoutCvMinuteInput, CvMinuteDomainUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvMinuteDomainUpdateWithWhereUniqueWithoutCvMinuteInput = {
    where: CvMinuteDomainWhereUniqueInput
    data: XOR<CvMinuteDomainUpdateWithoutCvMinuteInput, CvMinuteDomainUncheckedUpdateWithoutCvMinuteInput>
  }

  export type CvMinuteDomainUpdateManyWithWhereWithoutCvMinuteInput = {
    where: CvMinuteDomainScalarWhereInput
    data: XOR<CvMinuteDomainUpdateManyMutationInput, CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteInput>
  }

  export type CvThequeContactUpsertWithWhereUniqueWithoutCvMinuteInput = {
    where: CvThequeContactWhereUniqueInput
    update: XOR<CvThequeContactUpdateWithoutCvMinuteInput, CvThequeContactUncheckedUpdateWithoutCvMinuteInput>
    create: XOR<CvThequeContactCreateWithoutCvMinuteInput, CvThequeContactUncheckedCreateWithoutCvMinuteInput>
  }

  export type CvThequeContactUpdateWithWhereUniqueWithoutCvMinuteInput = {
    where: CvThequeContactWhereUniqueInput
    data: XOR<CvThequeContactUpdateWithoutCvMinuteInput, CvThequeContactUncheckedUpdateWithoutCvMinuteInput>
  }

  export type CvThequeContactUpdateManyWithWhereWithoutCvMinuteInput = {
    where: CvThequeContactScalarWhereInput
    data: XOR<CvThequeContactUpdateManyMutationInput, CvThequeContactUncheckedUpdateManyWithoutCvMinuteInput>
  }

  export type UserCreateWithoutCvMinuteDomainsInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCvMinuteDomainsInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCvMinuteDomainsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCvMinuteDomainsInput, UserUncheckedCreateWithoutCvMinuteDomainsInput>
  }

  export type CvMinuteCreateWithoutCvMinuteDomainsInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutCvMinuteDomainsInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutCvMinuteDomainsInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutCvMinuteDomainsInput, CvMinuteUncheckedCreateWithoutCvMinuteDomainsInput>
  }

  export type UserUpsertWithoutCvMinuteDomainsInput = {
    update: XOR<UserUpdateWithoutCvMinuteDomainsInput, UserUncheckedUpdateWithoutCvMinuteDomainsInput>
    create: XOR<UserCreateWithoutCvMinuteDomainsInput, UserUncheckedCreateWithoutCvMinuteDomainsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCvMinuteDomainsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCvMinuteDomainsInput, UserUncheckedUpdateWithoutCvMinuteDomainsInput>
  }

  export type UserUpdateWithoutCvMinuteDomainsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCvMinuteDomainsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CvMinuteUpsertWithoutCvMinuteDomainsInput = {
    update: XOR<CvMinuteUpdateWithoutCvMinuteDomainsInput, CvMinuteUncheckedUpdateWithoutCvMinuteDomainsInput>
    create: XOR<CvMinuteCreateWithoutCvMinuteDomainsInput, CvMinuteUncheckedCreateWithoutCvMinuteDomainsInput>
    where?: CvMinuteWhereInput
  }

  export type CvMinuteUpdateToOneWithWhereWithoutCvMinuteDomainsInput = {
    where?: CvMinuteWhereInput
    data: XOR<CvMinuteUpdateWithoutCvMinuteDomainsInput, CvMinuteUncheckedUpdateWithoutCvMinuteDomainsInput>
  }

  export type CvMinuteUpdateWithoutCvMinuteDomainsInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutCvMinuteDomainsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteSectionCreateWithoutSectionInput = {
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinute: CvMinuteCreateNestedOneWithoutCvMinuteSectionsInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteSectionInput
    sectionInfos?: SectionInfoCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionUncheckedCreateWithoutSectionInput = {
    id?: number
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinuteId: number
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteSectionInput
    sectionInfos?: SectionInfoUncheckedCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionCreateOrConnectWithoutSectionInput = {
    where: CvMinuteSectionWhereUniqueInput
    create: XOR<CvMinuteSectionCreateWithoutSectionInput, CvMinuteSectionUncheckedCreateWithoutSectionInput>
  }

  export type CvMinuteSectionCreateManySectionInputEnvelope = {
    data: CvMinuteSectionCreateManySectionInput | CvMinuteSectionCreateManySectionInput[]
    skipDuplicates?: boolean
  }

  export type CvMinuteSectionUpsertWithWhereUniqueWithoutSectionInput = {
    where: CvMinuteSectionWhereUniqueInput
    update: XOR<CvMinuteSectionUpdateWithoutSectionInput, CvMinuteSectionUncheckedUpdateWithoutSectionInput>
    create: XOR<CvMinuteSectionCreateWithoutSectionInput, CvMinuteSectionUncheckedCreateWithoutSectionInput>
  }

  export type CvMinuteSectionUpdateWithWhereUniqueWithoutSectionInput = {
    where: CvMinuteSectionWhereUniqueInput
    data: XOR<CvMinuteSectionUpdateWithoutSectionInput, CvMinuteSectionUncheckedUpdateWithoutSectionInput>
  }

  export type CvMinuteSectionUpdateManyWithWhereWithoutSectionInput = {
    where: CvMinuteSectionScalarWhereInput
    data: XOR<CvMinuteSectionUpdateManyMutationInput, CvMinuteSectionUncheckedUpdateManyWithoutSectionInput>
  }

  export type CvMinuteCreateWithoutCvMinuteSectionsInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutCvMinuteSectionsInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutCvMinuteSectionsInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutCvMinuteSectionsInput, CvMinuteUncheckedCreateWithoutCvMinuteSectionsInput>
  }

  export type SectionCreateWithoutCvMinuteSectionsInput = {
    name: string
    editable?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SectionUncheckedCreateWithoutCvMinuteSectionsInput = {
    id?: number
    name: string
    editable?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SectionCreateOrConnectWithoutCvMinuteSectionsInput = {
    where: SectionWhereUniqueInput
    create: XOR<SectionCreateWithoutCvMinuteSectionsInput, SectionUncheckedCreateWithoutCvMinuteSectionsInput>
  }

  export type AdviceCreateWithoutCvMinuteSectionInput = {
    type: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutAdvicesInput
    sectionInfo?: SectionInfoCreateNestedOneWithoutAdvicesInput
  }

  export type AdviceUncheckedCreateWithoutCvMinuteSectionInput = {
    id?: number
    type: string
    content: string
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdviceCreateOrConnectWithoutCvMinuteSectionInput = {
    where: AdviceWhereUniqueInput
    create: XOR<AdviceCreateWithoutCvMinuteSectionInput, AdviceUncheckedCreateWithoutCvMinuteSectionInput>
  }

  export type AdviceCreateManyCvMinuteSectionInputEnvelope = {
    data: AdviceCreateManyCvMinuteSectionInput | AdviceCreateManyCvMinuteSectionInput[]
    skipDuplicates?: boolean
  }

  export type SectionInfoCreateWithoutCvMinuteSectionInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationCreateNestedOneWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateWithoutCvMinuteSectionInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileUncheckedCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceUncheckedCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoCreateOrConnectWithoutCvMinuteSectionInput = {
    where: SectionInfoWhereUniqueInput
    create: XOR<SectionInfoCreateWithoutCvMinuteSectionInput, SectionInfoUncheckedCreateWithoutCvMinuteSectionInput>
  }

  export type SectionInfoCreateManyCvMinuteSectionInputEnvelope = {
    data: SectionInfoCreateManyCvMinuteSectionInput | SectionInfoCreateManyCvMinuteSectionInput[]
    skipDuplicates?: boolean
  }

  export type CvMinuteUpsertWithoutCvMinuteSectionsInput = {
    update: XOR<CvMinuteUpdateWithoutCvMinuteSectionsInput, CvMinuteUncheckedUpdateWithoutCvMinuteSectionsInput>
    create: XOR<CvMinuteCreateWithoutCvMinuteSectionsInput, CvMinuteUncheckedCreateWithoutCvMinuteSectionsInput>
    where?: CvMinuteWhereInput
  }

  export type CvMinuteUpdateToOneWithWhereWithoutCvMinuteSectionsInput = {
    where?: CvMinuteWhereInput
    data: XOR<CvMinuteUpdateWithoutCvMinuteSectionsInput, CvMinuteUncheckedUpdateWithoutCvMinuteSectionsInput>
  }

  export type CvMinuteUpdateWithoutCvMinuteSectionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutCvMinuteSectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type SectionUpsertWithoutCvMinuteSectionsInput = {
    update: XOR<SectionUpdateWithoutCvMinuteSectionsInput, SectionUncheckedUpdateWithoutCvMinuteSectionsInput>
    create: XOR<SectionCreateWithoutCvMinuteSectionsInput, SectionUncheckedCreateWithoutCvMinuteSectionsInput>
    where?: SectionWhereInput
  }

  export type SectionUpdateToOneWithWhereWithoutCvMinuteSectionsInput = {
    where?: SectionWhereInput
    data: XOR<SectionUpdateWithoutCvMinuteSectionsInput, SectionUncheckedUpdateWithoutCvMinuteSectionsInput>
  }

  export type SectionUpdateWithoutCvMinuteSectionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    editable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SectionUncheckedUpdateWithoutCvMinuteSectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    editable?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceUpsertWithWhereUniqueWithoutCvMinuteSectionInput = {
    where: AdviceWhereUniqueInput
    update: XOR<AdviceUpdateWithoutCvMinuteSectionInput, AdviceUncheckedUpdateWithoutCvMinuteSectionInput>
    create: XOR<AdviceCreateWithoutCvMinuteSectionInput, AdviceUncheckedCreateWithoutCvMinuteSectionInput>
  }

  export type AdviceUpdateWithWhereUniqueWithoutCvMinuteSectionInput = {
    where: AdviceWhereUniqueInput
    data: XOR<AdviceUpdateWithoutCvMinuteSectionInput, AdviceUncheckedUpdateWithoutCvMinuteSectionInput>
  }

  export type AdviceUpdateManyWithWhereWithoutCvMinuteSectionInput = {
    where: AdviceScalarWhereInput
    data: XOR<AdviceUpdateManyMutationInput, AdviceUncheckedUpdateManyWithoutCvMinuteSectionInput>
  }

  export type SectionInfoUpsertWithWhereUniqueWithoutCvMinuteSectionInput = {
    where: SectionInfoWhereUniqueInput
    update: XOR<SectionInfoUpdateWithoutCvMinuteSectionInput, SectionInfoUncheckedUpdateWithoutCvMinuteSectionInput>
    create: XOR<SectionInfoCreateWithoutCvMinuteSectionInput, SectionInfoUncheckedCreateWithoutCvMinuteSectionInput>
  }

  export type SectionInfoUpdateWithWhereUniqueWithoutCvMinuteSectionInput = {
    where: SectionInfoWhereUniqueInput
    data: XOR<SectionInfoUpdateWithoutCvMinuteSectionInput, SectionInfoUncheckedUpdateWithoutCvMinuteSectionInput>
  }

  export type SectionInfoUpdateManyWithWhereWithoutCvMinuteSectionInput = {
    where: SectionInfoScalarWhereInput
    data: XOR<SectionInfoUpdateManyMutationInput, SectionInfoUncheckedUpdateManyWithoutCvMinuteSectionInput>
  }

  export type SectionInfoScalarWhereInput = {
    AND?: SectionInfoScalarWhereInput | SectionInfoScalarWhereInput[]
    OR?: SectionInfoScalarWhereInput[]
    NOT?: SectionInfoScalarWhereInput | SectionInfoScalarWhereInput[]
    id?: IntFilter<"SectionInfo"> | number
    order?: IntNullableFilter<"SectionInfo"> | number | null
    content?: StringFilter<"SectionInfo"> | string
    title?: StringNullableFilter<"SectionInfo"> | string | null
    company?: StringNullableFilter<"SectionInfo"> | string | null
    date?: StringNullableFilter<"SectionInfo"> | string | null
    contrat?: StringNullableFilter<"SectionInfo"> | string | null
    icon?: StringNullableFilter<"SectionInfo"> | string | null
    iconSize?: IntNullableFilter<"SectionInfo"> | number | null
    cvMinuteSectionId?: IntFilter<"SectionInfo"> | number
    createdAt?: DateTimeFilter<"SectionInfo"> | Date | string
    updatedAt?: DateTimeFilter<"SectionInfo"> | Date | string
  }

  export type FileCreateWithoutSectionInfoInput = {
    name: string
    originalName: string
    extension: string
    usage: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutFilesInput
    cvMinute?: CvMinuteCreateNestedOneWithoutFilesInput
  }

  export type FileUncheckedCreateWithoutSectionInfoInput = {
    id?: number
    name: string
    originalName: string
    extension: string
    usage: string
    userId: number
    cvMinuteId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileCreateOrConnectWithoutSectionInfoInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutSectionInfoInput, FileUncheckedCreateWithoutSectionInfoInput>
  }

  export type AdviceCreateWithoutSectionInfoInput = {
    type: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutAdvicesInput
    cvMinuteSection?: CvMinuteSectionCreateNestedOneWithoutAdvicesInput
  }

  export type AdviceUncheckedCreateWithoutSectionInfoInput = {
    id?: number
    type: string
    content: string
    cvMinuteId?: number | null
    cvMinuteSectionId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdviceCreateOrConnectWithoutSectionInfoInput = {
    where: AdviceWhereUniqueInput
    create: XOR<AdviceCreateWithoutSectionInfoInput, AdviceUncheckedCreateWithoutSectionInfoInput>
  }

  export type AdviceCreateManySectionInfoInputEnvelope = {
    data: AdviceCreateManySectionInfoInput | AdviceCreateManySectionInfoInput[]
    skipDuplicates?: boolean
  }

  export type EvaluationCreateWithoutSectionInfoInput = {
    initialScore: number
    actualScore?: number | null
    content: string
    weakContent?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutEvaluationInput
  }

  export type EvaluationUncheckedCreateWithoutSectionInfoInput = {
    id?: number
    initialScore: number
    actualScore?: number | null
    content: string
    weakContent?: string | null
    cvMinuteId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EvaluationCreateOrConnectWithoutSectionInfoInput = {
    where: EvaluationWhereUniqueInput
    create: XOR<EvaluationCreateWithoutSectionInfoInput, EvaluationUncheckedCreateWithoutSectionInfoInput>
  }

  export type CvMinuteSectionCreateWithoutSectionInfosInput = {
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinute: CvMinuteCreateNestedOneWithoutCvMinuteSectionsInput
    section: SectionCreateNestedOneWithoutCvMinuteSectionsInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionUncheckedCreateWithoutSectionInfosInput = {
    id?: number
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinuteId: number
    sectionId: number
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionCreateOrConnectWithoutSectionInfosInput = {
    where: CvMinuteSectionWhereUniqueInput
    create: XOR<CvMinuteSectionCreateWithoutSectionInfosInput, CvMinuteSectionUncheckedCreateWithoutSectionInfosInput>
  }

  export type QualiCarriereQuestionCreateWithoutSectionInfoInput = {
    order: number
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutQualiCarriereQuestionsInput
    qualiCarriereResponse?: QualiCarriereResponseCreateNestedOneWithoutQualiCarriereQuestionInput
  }

  export type QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput = {
    id?: number
    order: number
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    qualiCarriereResponse?: QualiCarriereResponseUncheckedCreateNestedOneWithoutQualiCarriereQuestionInput
  }

  export type QualiCarriereQuestionCreateOrConnectWithoutSectionInfoInput = {
    where: QualiCarriereQuestionWhereUniqueInput
    create: XOR<QualiCarriereQuestionCreateWithoutSectionInfoInput, QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput>
  }

  export type QualiCarriereQuestionCreateManySectionInfoInputEnvelope = {
    data: QualiCarriereQuestionCreateManySectionInfoInput | QualiCarriereQuestionCreateManySectionInfoInput[]
    skipDuplicates?: boolean
  }

  export type QualiCarriereResponseCreateWithoutSectionInfoInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    qualiCarriereQuestion: QualiCarriereQuestionCreateNestedOneWithoutQualiCarriereResponseInput
    user: UserCreateNestedOneWithoutQualiCarriereResponsesInput
  }

  export type QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput = {
    id?: number
    content: string
    questionId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResponseCreateOrConnectWithoutSectionInfoInput = {
    where: QualiCarriereResponseWhereUniqueInput
    create: XOR<QualiCarriereResponseCreateWithoutSectionInfoInput, QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput>
  }

  export type QualiCarriereResponseCreateManySectionInfoInputEnvelope = {
    data: QualiCarriereResponseCreateManySectionInfoInput | QualiCarriereResponseCreateManySectionInfoInput[]
    skipDuplicates?: boolean
  }

  export type QualiCarriereResumeCreateWithoutSectionInfoInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutQualiCarriereResumesInput
  }

  export type QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput = {
    id?: number
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResumeCreateOrConnectWithoutSectionInfoInput = {
    where: QualiCarriereResumeWhereUniqueInput
    create: XOR<QualiCarriereResumeCreateWithoutSectionInfoInput, QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput>
  }

  export type QualiCarriereResumeCreateManySectionInfoInputEnvelope = {
    data: QualiCarriereResumeCreateManySectionInfoInput | QualiCarriereResumeCreateManySectionInfoInput[]
    skipDuplicates?: boolean
  }

  export type QualiCarriereCompetenceCreateWithoutSectionInfoInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutQualiCarriereCompetencesInput
  }

  export type QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput = {
    id?: number
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereCompetenceCreateOrConnectWithoutSectionInfoInput = {
    where: QualiCarriereCompetenceWhereUniqueInput
    create: XOR<QualiCarriereCompetenceCreateWithoutSectionInfoInput, QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput>
  }

  export type QualiCarriereCompetenceCreateManySectionInfoInputEnvelope = {
    data: QualiCarriereCompetenceCreateManySectionInfoInput | QualiCarriereCompetenceCreateManySectionInfoInput[]
    skipDuplicates?: boolean
  }

  export type FileUpsertWithoutSectionInfoInput = {
    update: XOR<FileUpdateWithoutSectionInfoInput, FileUncheckedUpdateWithoutSectionInfoInput>
    create: XOR<FileCreateWithoutSectionInfoInput, FileUncheckedCreateWithoutSectionInfoInput>
    where?: FileWhereInput
  }

  export type FileUpdateToOneWithWhereWithoutSectionInfoInput = {
    where?: FileWhereInput
    data: XOR<FileUpdateWithoutSectionInfoInput, FileUncheckedUpdateWithoutSectionInfoInput>
  }

  export type FileUpdateWithoutSectionInfoInput = {
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFilesNestedInput
    cvMinute?: CvMinuteUpdateOneWithoutFilesNestedInput
  }

  export type FileUncheckedUpdateWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceUpsertWithWhereUniqueWithoutSectionInfoInput = {
    where: AdviceWhereUniqueInput
    update: XOR<AdviceUpdateWithoutSectionInfoInput, AdviceUncheckedUpdateWithoutSectionInfoInput>
    create: XOR<AdviceCreateWithoutSectionInfoInput, AdviceUncheckedCreateWithoutSectionInfoInput>
  }

  export type AdviceUpdateWithWhereUniqueWithoutSectionInfoInput = {
    where: AdviceWhereUniqueInput
    data: XOR<AdviceUpdateWithoutSectionInfoInput, AdviceUncheckedUpdateWithoutSectionInfoInput>
  }

  export type AdviceUpdateManyWithWhereWithoutSectionInfoInput = {
    where: AdviceScalarWhereInput
    data: XOR<AdviceUpdateManyMutationInput, AdviceUncheckedUpdateManyWithoutSectionInfoInput>
  }

  export type EvaluationUpsertWithoutSectionInfoInput = {
    update: XOR<EvaluationUpdateWithoutSectionInfoInput, EvaluationUncheckedUpdateWithoutSectionInfoInput>
    create: XOR<EvaluationCreateWithoutSectionInfoInput, EvaluationUncheckedCreateWithoutSectionInfoInput>
    where?: EvaluationWhereInput
  }

  export type EvaluationUpdateToOneWithWhereWithoutSectionInfoInput = {
    where?: EvaluationWhereInput
    data: XOR<EvaluationUpdateWithoutSectionInfoInput, EvaluationUncheckedUpdateWithoutSectionInfoInput>
  }

  export type EvaluationUpdateWithoutSectionInfoInput = {
    initialScore?: IntFieldUpdateOperationsInput | number
    actualScore?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    weakContent?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutEvaluationNestedInput
  }

  export type EvaluationUncheckedUpdateWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    initialScore?: IntFieldUpdateOperationsInput | number
    actualScore?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    weakContent?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteSectionUpsertWithoutSectionInfosInput = {
    update: XOR<CvMinuteSectionUpdateWithoutSectionInfosInput, CvMinuteSectionUncheckedUpdateWithoutSectionInfosInput>
    create: XOR<CvMinuteSectionCreateWithoutSectionInfosInput, CvMinuteSectionUncheckedCreateWithoutSectionInfosInput>
    where?: CvMinuteSectionWhereInput
  }

  export type CvMinuteSectionUpdateToOneWithWhereWithoutSectionInfosInput = {
    where?: CvMinuteSectionWhereInput
    data: XOR<CvMinuteSectionUpdateWithoutSectionInfosInput, CvMinuteSectionUncheckedUpdateWithoutSectionInfosInput>
  }

  export type CvMinuteSectionUpdateWithoutSectionInfosInput = {
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvMinuteSectionsNestedInput
    section?: SectionUpdateOneRequiredWithoutCvMinuteSectionsNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteSectionUncheckedUpdateWithoutSectionInfosInput = {
    id?: IntFieldUpdateOperationsInput | number
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    sectionId?: IntFieldUpdateOperationsInput | number
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type QualiCarriereQuestionUpsertWithWhereUniqueWithoutSectionInfoInput = {
    where: QualiCarriereQuestionWhereUniqueInput
    update: XOR<QualiCarriereQuestionUpdateWithoutSectionInfoInput, QualiCarriereQuestionUncheckedUpdateWithoutSectionInfoInput>
    create: XOR<QualiCarriereQuestionCreateWithoutSectionInfoInput, QualiCarriereQuestionUncheckedCreateWithoutSectionInfoInput>
  }

  export type QualiCarriereQuestionUpdateWithWhereUniqueWithoutSectionInfoInput = {
    where: QualiCarriereQuestionWhereUniqueInput
    data: XOR<QualiCarriereQuestionUpdateWithoutSectionInfoInput, QualiCarriereQuestionUncheckedUpdateWithoutSectionInfoInput>
  }

  export type QualiCarriereQuestionUpdateManyWithWhereWithoutSectionInfoInput = {
    where: QualiCarriereQuestionScalarWhereInput
    data: XOR<QualiCarriereQuestionUpdateManyMutationInput, QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoInput>
  }

  export type QualiCarriereResponseUpsertWithWhereUniqueWithoutSectionInfoInput = {
    where: QualiCarriereResponseWhereUniqueInput
    update: XOR<QualiCarriereResponseUpdateWithoutSectionInfoInput, QualiCarriereResponseUncheckedUpdateWithoutSectionInfoInput>
    create: XOR<QualiCarriereResponseCreateWithoutSectionInfoInput, QualiCarriereResponseUncheckedCreateWithoutSectionInfoInput>
  }

  export type QualiCarriereResponseUpdateWithWhereUniqueWithoutSectionInfoInput = {
    where: QualiCarriereResponseWhereUniqueInput
    data: XOR<QualiCarriereResponseUpdateWithoutSectionInfoInput, QualiCarriereResponseUncheckedUpdateWithoutSectionInfoInput>
  }

  export type QualiCarriereResponseUpdateManyWithWhereWithoutSectionInfoInput = {
    where: QualiCarriereResponseScalarWhereInput
    data: XOR<QualiCarriereResponseUpdateManyMutationInput, QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoInput>
  }

  export type QualiCarriereResumeUpsertWithWhereUniqueWithoutSectionInfoInput = {
    where: QualiCarriereResumeWhereUniqueInput
    update: XOR<QualiCarriereResumeUpdateWithoutSectionInfoInput, QualiCarriereResumeUncheckedUpdateWithoutSectionInfoInput>
    create: XOR<QualiCarriereResumeCreateWithoutSectionInfoInput, QualiCarriereResumeUncheckedCreateWithoutSectionInfoInput>
  }

  export type QualiCarriereResumeUpdateWithWhereUniqueWithoutSectionInfoInput = {
    where: QualiCarriereResumeWhereUniqueInput
    data: XOR<QualiCarriereResumeUpdateWithoutSectionInfoInput, QualiCarriereResumeUncheckedUpdateWithoutSectionInfoInput>
  }

  export type QualiCarriereResumeUpdateManyWithWhereWithoutSectionInfoInput = {
    where: QualiCarriereResumeScalarWhereInput
    data: XOR<QualiCarriereResumeUpdateManyMutationInput, QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoInput>
  }

  export type QualiCarriereCompetenceUpsertWithWhereUniqueWithoutSectionInfoInput = {
    where: QualiCarriereCompetenceWhereUniqueInput
    update: XOR<QualiCarriereCompetenceUpdateWithoutSectionInfoInput, QualiCarriereCompetenceUncheckedUpdateWithoutSectionInfoInput>
    create: XOR<QualiCarriereCompetenceCreateWithoutSectionInfoInput, QualiCarriereCompetenceUncheckedCreateWithoutSectionInfoInput>
  }

  export type QualiCarriereCompetenceUpdateWithWhereUniqueWithoutSectionInfoInput = {
    where: QualiCarriereCompetenceWhereUniqueInput
    data: XOR<QualiCarriereCompetenceUpdateWithoutSectionInfoInput, QualiCarriereCompetenceUncheckedUpdateWithoutSectionInfoInput>
  }

  export type QualiCarriereCompetenceUpdateManyWithWhereWithoutSectionInfoInput = {
    where: QualiCarriereCompetenceScalarWhereInput
    data: XOR<QualiCarriereCompetenceUpdateManyMutationInput, QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoInput>
  }

  export type CvMinuteCreateWithoutAdvicesInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutAdvicesInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutAdvicesInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutAdvicesInput, CvMinuteUncheckedCreateWithoutAdvicesInput>
  }

  export type SectionInfoCreateWithoutAdvicesInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileCreateNestedOneWithoutSectionInfoInput
    evaluation?: EvaluationCreateNestedOneWithoutSectionInfoInput
    cvMinuteSection: CvMinuteSectionCreateNestedOneWithoutSectionInfosInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateWithoutAdvicesInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileUncheckedCreateNestedOneWithoutSectionInfoInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoCreateOrConnectWithoutAdvicesInput = {
    where: SectionInfoWhereUniqueInput
    create: XOR<SectionInfoCreateWithoutAdvicesInput, SectionInfoUncheckedCreateWithoutAdvicesInput>
  }

  export type CvMinuteSectionCreateWithoutAdvicesInput = {
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinute: CvMinuteCreateNestedOneWithoutCvMinuteSectionsInput
    section: SectionCreateNestedOneWithoutCvMinuteSectionsInput
    sectionInfos?: SectionInfoCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionUncheckedCreateWithoutAdvicesInput = {
    id?: number
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinuteId: number
    sectionId: number
    sectionInfos?: SectionInfoUncheckedCreateNestedManyWithoutCvMinuteSectionInput
  }

  export type CvMinuteSectionCreateOrConnectWithoutAdvicesInput = {
    where: CvMinuteSectionWhereUniqueInput
    create: XOR<CvMinuteSectionCreateWithoutAdvicesInput, CvMinuteSectionUncheckedCreateWithoutAdvicesInput>
  }

  export type CvMinuteUpsertWithoutAdvicesInput = {
    update: XOR<CvMinuteUpdateWithoutAdvicesInput, CvMinuteUncheckedUpdateWithoutAdvicesInput>
    create: XOR<CvMinuteCreateWithoutAdvicesInput, CvMinuteUncheckedCreateWithoutAdvicesInput>
    where?: CvMinuteWhereInput
  }

  export type CvMinuteUpdateToOneWithWhereWithoutAdvicesInput = {
    where?: CvMinuteWhereInput
    data: XOR<CvMinuteUpdateWithoutAdvicesInput, CvMinuteUncheckedUpdateWithoutAdvicesInput>
  }

  export type CvMinuteUpdateWithoutAdvicesInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutAdvicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type SectionInfoUpsertWithoutAdvicesInput = {
    update: XOR<SectionInfoUpdateWithoutAdvicesInput, SectionInfoUncheckedUpdateWithoutAdvicesInput>
    create: XOR<SectionInfoCreateWithoutAdvicesInput, SectionInfoUncheckedCreateWithoutAdvicesInput>
    where?: SectionInfoWhereInput
  }

  export type SectionInfoUpdateToOneWithWhereWithoutAdvicesInput = {
    where?: SectionInfoWhereInput
    data: XOR<SectionInfoUpdateWithoutAdvicesInput, SectionInfoUncheckedUpdateWithoutAdvicesInput>
  }

  export type SectionInfoUpdateWithoutAdvicesInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUpdateOneWithoutSectionInfoNestedInput
    evaluation?: EvaluationUpdateOneWithoutSectionInfoNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateWithoutAdvicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUncheckedUpdateOneWithoutSectionInfoNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type CvMinuteSectionUpsertWithoutAdvicesInput = {
    update: XOR<CvMinuteSectionUpdateWithoutAdvicesInput, CvMinuteSectionUncheckedUpdateWithoutAdvicesInput>
    create: XOR<CvMinuteSectionCreateWithoutAdvicesInput, CvMinuteSectionUncheckedCreateWithoutAdvicesInput>
    where?: CvMinuteSectionWhereInput
  }

  export type CvMinuteSectionUpdateToOneWithWhereWithoutAdvicesInput = {
    where?: CvMinuteSectionWhereInput
    data: XOR<CvMinuteSectionUpdateWithoutAdvicesInput, CvMinuteSectionUncheckedUpdateWithoutAdvicesInput>
  }

  export type CvMinuteSectionUpdateWithoutAdvicesInput = {
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvMinuteSectionsNestedInput
    section?: SectionUpdateOneRequiredWithoutCvMinuteSectionsNestedInput
    sectionInfos?: SectionInfoUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteSectionUncheckedUpdateWithoutAdvicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    sectionId?: IntFieldUpdateOperationsInput | number
    sectionInfos?: SectionInfoUncheckedUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteCreateWithoutEvaluationInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutEvaluationInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutEvaluationInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutEvaluationInput, CvMinuteUncheckedCreateWithoutEvaluationInput>
  }

  export type SectionInfoCreateWithoutEvaluationInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceCreateNestedManyWithoutSectionInfoInput
    cvMinuteSection: CvMinuteSectionCreateNestedOneWithoutSectionInfosInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateWithoutEvaluationInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileUncheckedCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoCreateOrConnectWithoutEvaluationInput = {
    where: SectionInfoWhereUniqueInput
    create: XOR<SectionInfoCreateWithoutEvaluationInput, SectionInfoUncheckedCreateWithoutEvaluationInput>
  }

  export type CvMinuteUpsertWithoutEvaluationInput = {
    update: XOR<CvMinuteUpdateWithoutEvaluationInput, CvMinuteUncheckedUpdateWithoutEvaluationInput>
    create: XOR<CvMinuteCreateWithoutEvaluationInput, CvMinuteUncheckedCreateWithoutEvaluationInput>
    where?: CvMinuteWhereInput
  }

  export type CvMinuteUpdateToOneWithWhereWithoutEvaluationInput = {
    where?: CvMinuteWhereInput
    data: XOR<CvMinuteUpdateWithoutEvaluationInput, CvMinuteUncheckedUpdateWithoutEvaluationInput>
  }

  export type CvMinuteUpdateWithoutEvaluationInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutEvaluationInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type SectionInfoUpsertWithoutEvaluationInput = {
    update: XOR<SectionInfoUpdateWithoutEvaluationInput, SectionInfoUncheckedUpdateWithoutEvaluationInput>
    create: XOR<SectionInfoCreateWithoutEvaluationInput, SectionInfoUncheckedCreateWithoutEvaluationInput>
    where?: SectionInfoWhereInput
  }

  export type SectionInfoUpdateToOneWithWhereWithoutEvaluationInput = {
    where?: SectionInfoWhereInput
    data: XOR<SectionInfoUpdateWithoutEvaluationInput, SectionInfoUncheckedUpdateWithoutEvaluationInput>
  }

  export type SectionInfoUpdateWithoutEvaluationInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUpdateManyWithoutSectionInfoNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateWithoutEvaluationInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUncheckedUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type CvMinuteCreateWithoutOpenaiResponsesInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutOpenaiResponsesInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutOpenaiResponsesInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutOpenaiResponsesInput, CvMinuteUncheckedCreateWithoutOpenaiResponsesInput>
  }

  export type UserCreateWithoutOpenaiResponsesInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOpenaiResponsesInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOpenaiResponsesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOpenaiResponsesInput, UserUncheckedCreateWithoutOpenaiResponsesInput>
  }

  export type CvThequeCritereCreateWithoutOpenaiResponsesInput = {
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeCriteresInput
    cvThequeCompetences?: CvThequeCompetenceCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereUncheckedCreateWithoutOpenaiResponsesInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereCreateOrConnectWithoutOpenaiResponsesInput = {
    where: CvThequeCritereWhereUniqueInput
    create: XOR<CvThequeCritereCreateWithoutOpenaiResponsesInput, CvThequeCritereUncheckedCreateWithoutOpenaiResponsesInput>
  }

  export type CvMinuteUpsertWithoutOpenaiResponsesInput = {
    update: XOR<CvMinuteUpdateWithoutOpenaiResponsesInput, CvMinuteUncheckedUpdateWithoutOpenaiResponsesInput>
    create: XOR<CvMinuteCreateWithoutOpenaiResponsesInput, CvMinuteUncheckedCreateWithoutOpenaiResponsesInput>
    where?: CvMinuteWhereInput
  }

  export type CvMinuteUpdateToOneWithWhereWithoutOpenaiResponsesInput = {
    where?: CvMinuteWhereInput
    data: XOR<CvMinuteUpdateWithoutOpenaiResponsesInput, CvMinuteUncheckedUpdateWithoutOpenaiResponsesInput>
  }

  export type CvMinuteUpdateWithoutOpenaiResponsesInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutOpenaiResponsesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type UserUpsertWithoutOpenaiResponsesInput = {
    update: XOR<UserUpdateWithoutOpenaiResponsesInput, UserUncheckedUpdateWithoutOpenaiResponsesInput>
    create: XOR<UserCreateWithoutOpenaiResponsesInput, UserUncheckedCreateWithoutOpenaiResponsesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOpenaiResponsesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOpenaiResponsesInput, UserUncheckedUpdateWithoutOpenaiResponsesInput>
  }

  export type UserUpdateWithoutOpenaiResponsesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOpenaiResponsesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CvThequeCritereUpsertWithoutOpenaiResponsesInput = {
    update: XOR<CvThequeCritereUpdateWithoutOpenaiResponsesInput, CvThequeCritereUncheckedUpdateWithoutOpenaiResponsesInput>
    create: XOR<CvThequeCritereCreateWithoutOpenaiResponsesInput, CvThequeCritereUncheckedCreateWithoutOpenaiResponsesInput>
    where?: CvThequeCritereWhereInput
  }

  export type CvThequeCritereUpdateToOneWithWhereWithoutOpenaiResponsesInput = {
    where?: CvThequeCritereWhereInput
    data: XOR<CvThequeCritereUpdateWithoutOpenaiResponsesInput, CvThequeCritereUncheckedUpdateWithoutOpenaiResponsesInput>
  }

  export type CvThequeCritereUpdateWithoutOpenaiResponsesInput = {
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeCriteresNestedInput
    cvThequeCompetences?: CvThequeCompetenceUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereUncheckedUpdateWithoutOpenaiResponsesInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type UserCreateWithoutQualiCarriereQuestionsInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutQualiCarriereQuestionsInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutQualiCarriereQuestionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutQualiCarriereQuestionsInput, UserUncheckedCreateWithoutQualiCarriereQuestionsInput>
  }

  export type SectionInfoCreateWithoutQualiCarriereQuestionsInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationCreateNestedOneWithoutSectionInfoInput
    cvMinuteSection: CvMinuteSectionCreateNestedOneWithoutSectionInfosInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateWithoutQualiCarriereQuestionsInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileUncheckedCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceUncheckedCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoCreateOrConnectWithoutQualiCarriereQuestionsInput = {
    where: SectionInfoWhereUniqueInput
    create: XOR<SectionInfoCreateWithoutQualiCarriereQuestionsInput, SectionInfoUncheckedCreateWithoutQualiCarriereQuestionsInput>
  }

  export type QualiCarriereResponseCreateWithoutQualiCarriereQuestionInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutQualiCarriereResponsesInput
    SectionInfo?: SectionInfoCreateNestedOneWithoutQualiCarriereResponsesInput
  }

  export type QualiCarriereResponseUncheckedCreateWithoutQualiCarriereQuestionInput = {
    id?: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResponseCreateOrConnectWithoutQualiCarriereQuestionInput = {
    where: QualiCarriereResponseWhereUniqueInput
    create: XOR<QualiCarriereResponseCreateWithoutQualiCarriereQuestionInput, QualiCarriereResponseUncheckedCreateWithoutQualiCarriereQuestionInput>
  }

  export type UserUpsertWithoutQualiCarriereQuestionsInput = {
    update: XOR<UserUpdateWithoutQualiCarriereQuestionsInput, UserUncheckedUpdateWithoutQualiCarriereQuestionsInput>
    create: XOR<UserCreateWithoutQualiCarriereQuestionsInput, UserUncheckedCreateWithoutQualiCarriereQuestionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutQualiCarriereQuestionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutQualiCarriereQuestionsInput, UserUncheckedUpdateWithoutQualiCarriereQuestionsInput>
  }

  export type UserUpdateWithoutQualiCarriereQuestionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutQualiCarriereQuestionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SectionInfoUpsertWithoutQualiCarriereQuestionsInput = {
    update: XOR<SectionInfoUpdateWithoutQualiCarriereQuestionsInput, SectionInfoUncheckedUpdateWithoutQualiCarriereQuestionsInput>
    create: XOR<SectionInfoCreateWithoutQualiCarriereQuestionsInput, SectionInfoUncheckedCreateWithoutQualiCarriereQuestionsInput>
    where?: SectionInfoWhereInput
  }

  export type SectionInfoUpdateToOneWithWhereWithoutQualiCarriereQuestionsInput = {
    where?: SectionInfoWhereInput
    data: XOR<SectionInfoUpdateWithoutQualiCarriereQuestionsInput, SectionInfoUncheckedUpdateWithoutQualiCarriereQuestionsInput>
  }

  export type SectionInfoUpdateWithoutQualiCarriereQuestionsInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUpdateOneWithoutSectionInfoNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateWithoutQualiCarriereQuestionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUncheckedUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type QualiCarriereResponseUpsertWithoutQualiCarriereQuestionInput = {
    update: XOR<QualiCarriereResponseUpdateWithoutQualiCarriereQuestionInput, QualiCarriereResponseUncheckedUpdateWithoutQualiCarriereQuestionInput>
    create: XOR<QualiCarriereResponseCreateWithoutQualiCarriereQuestionInput, QualiCarriereResponseUncheckedCreateWithoutQualiCarriereQuestionInput>
    where?: QualiCarriereResponseWhereInput
  }

  export type QualiCarriereResponseUpdateToOneWithWhereWithoutQualiCarriereQuestionInput = {
    where?: QualiCarriereResponseWhereInput
    data: XOR<QualiCarriereResponseUpdateWithoutQualiCarriereQuestionInput, QualiCarriereResponseUncheckedUpdateWithoutQualiCarriereQuestionInput>
  }

  export type QualiCarriereResponseUpdateWithoutQualiCarriereQuestionInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutQualiCarriereResponsesNestedInput
    SectionInfo?: SectionInfoUpdateOneWithoutQualiCarriereResponsesNestedInput
  }

  export type QualiCarriereResponseUncheckedUpdateWithoutQualiCarriereQuestionInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereQuestionCreateWithoutQualiCarriereResponseInput = {
    order: number
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutQualiCarriereQuestionsInput
    sectionInfo: SectionInfoCreateNestedOneWithoutQualiCarriereQuestionsInput
  }

  export type QualiCarriereQuestionUncheckedCreateWithoutQualiCarriereResponseInput = {
    id?: number
    order: number
    content: string
    sectionInfoId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereQuestionCreateOrConnectWithoutQualiCarriereResponseInput = {
    where: QualiCarriereQuestionWhereUniqueInput
    create: XOR<QualiCarriereQuestionCreateWithoutQualiCarriereResponseInput, QualiCarriereQuestionUncheckedCreateWithoutQualiCarriereResponseInput>
  }

  export type UserCreateWithoutQualiCarriereResponsesInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutQualiCarriereResponsesInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutQualiCarriereResponsesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutQualiCarriereResponsesInput, UserUncheckedCreateWithoutQualiCarriereResponsesInput>
  }

  export type SectionInfoCreateWithoutQualiCarriereResponsesInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationCreateNestedOneWithoutSectionInfoInput
    cvMinuteSection: CvMinuteSectionCreateNestedOneWithoutSectionInfosInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateWithoutQualiCarriereResponsesInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileUncheckedCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceUncheckedCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoCreateOrConnectWithoutQualiCarriereResponsesInput = {
    where: SectionInfoWhereUniqueInput
    create: XOR<SectionInfoCreateWithoutQualiCarriereResponsesInput, SectionInfoUncheckedCreateWithoutQualiCarriereResponsesInput>
  }

  export type QualiCarriereQuestionUpsertWithoutQualiCarriereResponseInput = {
    update: XOR<QualiCarriereQuestionUpdateWithoutQualiCarriereResponseInput, QualiCarriereQuestionUncheckedUpdateWithoutQualiCarriereResponseInput>
    create: XOR<QualiCarriereQuestionCreateWithoutQualiCarriereResponseInput, QualiCarriereQuestionUncheckedCreateWithoutQualiCarriereResponseInput>
    where?: QualiCarriereQuestionWhereInput
  }

  export type QualiCarriereQuestionUpdateToOneWithWhereWithoutQualiCarriereResponseInput = {
    where?: QualiCarriereQuestionWhereInput
    data: XOR<QualiCarriereQuestionUpdateWithoutQualiCarriereResponseInput, QualiCarriereQuestionUncheckedUpdateWithoutQualiCarriereResponseInput>
  }

  export type QualiCarriereQuestionUpdateWithoutQualiCarriereResponseInput = {
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutQualiCarriereQuestionsNestedInput
    sectionInfo?: SectionInfoUpdateOneRequiredWithoutQualiCarriereQuestionsNestedInput
  }

  export type QualiCarriereQuestionUncheckedUpdateWithoutQualiCarriereResponseInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpsertWithoutQualiCarriereResponsesInput = {
    update: XOR<UserUpdateWithoutQualiCarriereResponsesInput, UserUncheckedUpdateWithoutQualiCarriereResponsesInput>
    create: XOR<UserCreateWithoutQualiCarriereResponsesInput, UserUncheckedCreateWithoutQualiCarriereResponsesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutQualiCarriereResponsesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutQualiCarriereResponsesInput, UserUncheckedUpdateWithoutQualiCarriereResponsesInput>
  }

  export type UserUpdateWithoutQualiCarriereResponsesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutQualiCarriereResponsesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SectionInfoUpsertWithoutQualiCarriereResponsesInput = {
    update: XOR<SectionInfoUpdateWithoutQualiCarriereResponsesInput, SectionInfoUncheckedUpdateWithoutQualiCarriereResponsesInput>
    create: XOR<SectionInfoCreateWithoutQualiCarriereResponsesInput, SectionInfoUncheckedCreateWithoutQualiCarriereResponsesInput>
    where?: SectionInfoWhereInput
  }

  export type SectionInfoUpdateToOneWithWhereWithoutQualiCarriereResponsesInput = {
    where?: SectionInfoWhereInput
    data: XOR<SectionInfoUpdateWithoutQualiCarriereResponsesInput, SectionInfoUncheckedUpdateWithoutQualiCarriereResponsesInput>
  }

  export type SectionInfoUpdateWithoutQualiCarriereResponsesInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUpdateOneWithoutSectionInfoNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateWithoutQualiCarriereResponsesInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUncheckedUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoCreateWithoutQualiCarriereResumesInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationCreateNestedOneWithoutSectionInfoInput
    cvMinuteSection: CvMinuteSectionCreateNestedOneWithoutSectionInfosInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateWithoutQualiCarriereResumesInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileUncheckedCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceUncheckedCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoCreateOrConnectWithoutQualiCarriereResumesInput = {
    where: SectionInfoWhereUniqueInput
    create: XOR<SectionInfoCreateWithoutQualiCarriereResumesInput, SectionInfoUncheckedCreateWithoutQualiCarriereResumesInput>
  }

  export type UserCreateWithoutQualiCarriereResumesInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutQualiCarriereResumesInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutQualiCarriereResumesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutQualiCarriereResumesInput, UserUncheckedCreateWithoutQualiCarriereResumesInput>
  }

  export type SectionInfoUpsertWithoutQualiCarriereResumesInput = {
    update: XOR<SectionInfoUpdateWithoutQualiCarriereResumesInput, SectionInfoUncheckedUpdateWithoutQualiCarriereResumesInput>
    create: XOR<SectionInfoCreateWithoutQualiCarriereResumesInput, SectionInfoUncheckedCreateWithoutQualiCarriereResumesInput>
    where?: SectionInfoWhereInput
  }

  export type SectionInfoUpdateToOneWithWhereWithoutQualiCarriereResumesInput = {
    where?: SectionInfoWhereInput
    data: XOR<SectionInfoUpdateWithoutQualiCarriereResumesInput, SectionInfoUncheckedUpdateWithoutQualiCarriereResumesInput>
  }

  export type SectionInfoUpdateWithoutQualiCarriereResumesInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUpdateOneWithoutSectionInfoNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateWithoutQualiCarriereResumesInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUncheckedUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type UserUpsertWithoutQualiCarriereResumesInput = {
    update: XOR<UserUpdateWithoutQualiCarriereResumesInput, UserUncheckedUpdateWithoutQualiCarriereResumesInput>
    create: XOR<UserCreateWithoutQualiCarriereResumesInput, UserUncheckedCreateWithoutQualiCarriereResumesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutQualiCarriereResumesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutQualiCarriereResumesInput, UserUncheckedUpdateWithoutQualiCarriereResumesInput>
  }

  export type UserUpdateWithoutQualiCarriereResumesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutQualiCarriereResumesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SectionInfoCreateWithoutQualiCarriereCompetencesInput = {
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationCreateNestedOneWithoutSectionInfoInput
    cvMinuteSection: CvMinuteSectionCreateNestedOneWithoutSectionInfosInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoUncheckedCreateWithoutQualiCarriereCompetencesInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    cvMinuteSectionId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    file?: FileUncheckedCreateNestedOneWithoutSectionInfoInput
    advices?: AdviceUncheckedCreateNestedManyWithoutSectionInfoInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutSectionInfoInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutSectionInfoInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutSectionInfoInput
  }

  export type SectionInfoCreateOrConnectWithoutQualiCarriereCompetencesInput = {
    where: SectionInfoWhereUniqueInput
    create: XOR<SectionInfoCreateWithoutQualiCarriereCompetencesInput, SectionInfoUncheckedCreateWithoutQualiCarriereCompetencesInput>
  }

  export type UserCreateWithoutQualiCarriereCompetencesInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutQualiCarriereCompetencesInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutQualiCarriereCompetencesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutQualiCarriereCompetencesInput, UserUncheckedCreateWithoutQualiCarriereCompetencesInput>
  }

  export type SectionInfoUpsertWithoutQualiCarriereCompetencesInput = {
    update: XOR<SectionInfoUpdateWithoutQualiCarriereCompetencesInput, SectionInfoUncheckedUpdateWithoutQualiCarriereCompetencesInput>
    create: XOR<SectionInfoCreateWithoutQualiCarriereCompetencesInput, SectionInfoUncheckedCreateWithoutQualiCarriereCompetencesInput>
    where?: SectionInfoWhereInput
  }

  export type SectionInfoUpdateToOneWithWhereWithoutQualiCarriereCompetencesInput = {
    where?: SectionInfoWhereInput
    data: XOR<SectionInfoUpdateWithoutQualiCarriereCompetencesInput, SectionInfoUncheckedUpdateWithoutQualiCarriereCompetencesInput>
  }

  export type SectionInfoUpdateWithoutQualiCarriereCompetencesInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUpdateOneWithoutSectionInfoNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneRequiredWithoutSectionInfosNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateWithoutQualiCarriereCompetencesInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUncheckedUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type UserUpsertWithoutQualiCarriereCompetencesInput = {
    update: XOR<UserUpdateWithoutQualiCarriereCompetencesInput, UserUncheckedUpdateWithoutQualiCarriereCompetencesInput>
    create: XOR<UserCreateWithoutQualiCarriereCompetencesInput, UserUncheckedCreateWithoutQualiCarriereCompetencesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutQualiCarriereCompetencesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutQualiCarriereCompetencesInput, UserUncheckedUpdateWithoutQualiCarriereCompetencesInput>
  }

  export type UserUpdateWithoutQualiCarriereCompetencesInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutQualiCarriereCompetencesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutQualiCarriereChatInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutQualiCarriereChatInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutQualiCarriereChatInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutQualiCarriereChatInput, UserUncheckedCreateWithoutQualiCarriereChatInput>
  }

  export type UserUpsertWithoutQualiCarriereChatInput = {
    update: XOR<UserUpdateWithoutQualiCarriereChatInput, UserUncheckedUpdateWithoutQualiCarriereChatInput>
    create: XOR<UserCreateWithoutQualiCarriereChatInput, UserUncheckedCreateWithoutQualiCarriereChatInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutQualiCarriereChatInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutQualiCarriereChatInput, UserUncheckedUpdateWithoutQualiCarriereChatInput>
  }

  export type UserUpdateWithoutQualiCarriereChatInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutQualiCarriereChatInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutCvThequeCriteresInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCvThequeCriteresInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCvThequeCriteresInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCvThequeCriteresInput, UserUncheckedCreateWithoutCvThequeCriteresInput>
  }

  export type CvThequeCompetenceCreateWithoutCvThequeCritereInput = {
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput = {
    id?: number
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeCompetenceCreateOrConnectWithoutCvThequeCritereInput = {
    where: CvThequeCompetenceWhereUniqueInput
    create: XOR<CvThequeCompetenceCreateWithoutCvThequeCritereInput, CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type CvThequeCompetenceCreateManyCvThequeCritereInputEnvelope = {
    data: CvThequeCompetenceCreateManyCvThequeCritereInput | CvThequeCompetenceCreateManyCvThequeCritereInput[]
    skipDuplicates?: boolean
  }

  export type CvThequeViewCreateWithoutCvThequeCritereInput = {
    count: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute: CvMinuteCreateNestedOneWithoutCvThequeViewsInput
  }

  export type CvThequeViewUncheckedCreateWithoutCvThequeCritereInput = {
    id?: number
    count: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeViewCreateOrConnectWithoutCvThequeCritereInput = {
    where: CvThequeViewWhereUniqueInput
    create: XOR<CvThequeViewCreateWithoutCvThequeCritereInput, CvThequeViewUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type CvThequeViewCreateManyCvThequeCritereInputEnvelope = {
    data: CvThequeViewCreateManyCvThequeCritereInput | CvThequeViewCreateManyCvThequeCritereInput[]
    skipDuplicates?: boolean
  }

  export type CvThequeUserCreateWithoutCvThequeCritereInput = {
    score: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeUsersInput
  }

  export type CvThequeUserUncheckedCreateWithoutCvThequeCritereInput = {
    id?: number
    score: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeUserCreateOrConnectWithoutCvThequeCritereInput = {
    where: CvThequeUserWhereUniqueInput
    create: XOR<CvThequeUserCreateWithoutCvThequeCritereInput, CvThequeUserUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type CvThequeUserCreateManyCvThequeCritereInputEnvelope = {
    data: CvThequeUserCreateManyCvThequeCritereInput | CvThequeUserCreateManyCvThequeCritereInput[]
    skipDuplicates?: boolean
  }

  export type CvMinuteCreateWithoutCvThequeCritereInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutCvThequeCritereInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutCvThequeCritereInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutCvThequeCritereInput, CvMinuteUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type CvMinuteCreateManyCvThequeCritereInputEnvelope = {
    data: CvMinuteCreateManyCvThequeCritereInput | CvMinuteCreateManyCvThequeCritereInput[]
    skipDuplicates?: boolean
  }

  export type OpenaiResponseCreateWithoutCvThequeCritereInput = {
    responseId: string
    request: string
    response: string
    index: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvMinute?: CvMinuteCreateNestedOneWithoutOpenaiResponsesInput
    user?: UserCreateNestedOneWithoutOpenaiResponsesInput
  }

  export type OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput = {
    id?: number
    responseId: string
    request: string
    response: string
    index: number
    cvMinuteId?: number | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OpenaiResponseCreateOrConnectWithoutCvThequeCritereInput = {
    where: OpenaiResponseWhereUniqueInput
    create: XOR<OpenaiResponseCreateWithoutCvThequeCritereInput, OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type OpenaiResponseCreateManyCvThequeCritereInputEnvelope = {
    data: OpenaiResponseCreateManyCvThequeCritereInput | OpenaiResponseCreateManyCvThequeCritereInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutCvThequeCriteresInput = {
    update: XOR<UserUpdateWithoutCvThequeCriteresInput, UserUncheckedUpdateWithoutCvThequeCriteresInput>
    create: XOR<UserCreateWithoutCvThequeCriteresInput, UserUncheckedCreateWithoutCvThequeCriteresInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCvThequeCriteresInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCvThequeCriteresInput, UserUncheckedUpdateWithoutCvThequeCriteresInput>
  }

  export type UserUpdateWithoutCvThequeCriteresInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCvThequeCriteresInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CvThequeCompetenceUpsertWithWhereUniqueWithoutCvThequeCritereInput = {
    where: CvThequeCompetenceWhereUniqueInput
    update: XOR<CvThequeCompetenceUpdateWithoutCvThequeCritereInput, CvThequeCompetenceUncheckedUpdateWithoutCvThequeCritereInput>
    create: XOR<CvThequeCompetenceCreateWithoutCvThequeCritereInput, CvThequeCompetenceUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type CvThequeCompetenceUpdateWithWhereUniqueWithoutCvThequeCritereInput = {
    where: CvThequeCompetenceWhereUniqueInput
    data: XOR<CvThequeCompetenceUpdateWithoutCvThequeCritereInput, CvThequeCompetenceUncheckedUpdateWithoutCvThequeCritereInput>
  }

  export type CvThequeCompetenceUpdateManyWithWhereWithoutCvThequeCritereInput = {
    where: CvThequeCompetenceScalarWhereInput
    data: XOR<CvThequeCompetenceUpdateManyMutationInput, CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereInput>
  }

  export type CvThequeCompetenceScalarWhereInput = {
    AND?: CvThequeCompetenceScalarWhereInput | CvThequeCompetenceScalarWhereInput[]
    OR?: CvThequeCompetenceScalarWhereInput[]
    NOT?: CvThequeCompetenceScalarWhereInput | CvThequeCompetenceScalarWhereInput[]
    id?: IntFilter<"CvThequeCompetence"> | number
    content?: StringFilter<"CvThequeCompetence"> | string
    cvThequeCritereId?: IntFilter<"CvThequeCompetence"> | number
    createdAt?: DateTimeFilter<"CvThequeCompetence"> | Date | string
    updatedAt?: DateTimeFilter<"CvThequeCompetence"> | Date | string
  }

  export type CvThequeViewUpsertWithWhereUniqueWithoutCvThequeCritereInput = {
    where: CvThequeViewWhereUniqueInput
    update: XOR<CvThequeViewUpdateWithoutCvThequeCritereInput, CvThequeViewUncheckedUpdateWithoutCvThequeCritereInput>
    create: XOR<CvThequeViewCreateWithoutCvThequeCritereInput, CvThequeViewUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type CvThequeViewUpdateWithWhereUniqueWithoutCvThequeCritereInput = {
    where: CvThequeViewWhereUniqueInput
    data: XOR<CvThequeViewUpdateWithoutCvThequeCritereInput, CvThequeViewUncheckedUpdateWithoutCvThequeCritereInput>
  }

  export type CvThequeViewUpdateManyWithWhereWithoutCvThequeCritereInput = {
    where: CvThequeViewScalarWhereInput
    data: XOR<CvThequeViewUpdateManyMutationInput, CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereInput>
  }

  export type CvThequeUserUpsertWithWhereUniqueWithoutCvThequeCritereInput = {
    where: CvThequeUserWhereUniqueInput
    update: XOR<CvThequeUserUpdateWithoutCvThequeCritereInput, CvThequeUserUncheckedUpdateWithoutCvThequeCritereInput>
    create: XOR<CvThequeUserCreateWithoutCvThequeCritereInput, CvThequeUserUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type CvThequeUserUpdateWithWhereUniqueWithoutCvThequeCritereInput = {
    where: CvThequeUserWhereUniqueInput
    data: XOR<CvThequeUserUpdateWithoutCvThequeCritereInput, CvThequeUserUncheckedUpdateWithoutCvThequeCritereInput>
  }

  export type CvThequeUserUpdateManyWithWhereWithoutCvThequeCritereInput = {
    where: CvThequeUserScalarWhereInput
    data: XOR<CvThequeUserUpdateManyMutationInput, CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereInput>
  }

  export type CvMinuteUpsertWithWhereUniqueWithoutCvThequeCritereInput = {
    where: CvMinuteWhereUniqueInput
    update: XOR<CvMinuteUpdateWithoutCvThequeCritereInput, CvMinuteUncheckedUpdateWithoutCvThequeCritereInput>
    create: XOR<CvMinuteCreateWithoutCvThequeCritereInput, CvMinuteUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type CvMinuteUpdateWithWhereUniqueWithoutCvThequeCritereInput = {
    where: CvMinuteWhereUniqueInput
    data: XOR<CvMinuteUpdateWithoutCvThequeCritereInput, CvMinuteUncheckedUpdateWithoutCvThequeCritereInput>
  }

  export type CvMinuteUpdateManyWithWhereWithoutCvThequeCritereInput = {
    where: CvMinuteScalarWhereInput
    data: XOR<CvMinuteUpdateManyMutationInput, CvMinuteUncheckedUpdateManyWithoutCvThequeCritereInput>
  }

  export type OpenaiResponseUpsertWithWhereUniqueWithoutCvThequeCritereInput = {
    where: OpenaiResponseWhereUniqueInput
    update: XOR<OpenaiResponseUpdateWithoutCvThequeCritereInput, OpenaiResponseUncheckedUpdateWithoutCvThequeCritereInput>
    create: XOR<OpenaiResponseCreateWithoutCvThequeCritereInput, OpenaiResponseUncheckedCreateWithoutCvThequeCritereInput>
  }

  export type OpenaiResponseUpdateWithWhereUniqueWithoutCvThequeCritereInput = {
    where: OpenaiResponseWhereUniqueInput
    data: XOR<OpenaiResponseUpdateWithoutCvThequeCritereInput, OpenaiResponseUncheckedUpdateWithoutCvThequeCritereInput>
  }

  export type OpenaiResponseUpdateManyWithWhereWithoutCvThequeCritereInput = {
    where: OpenaiResponseScalarWhereInput
    data: XOR<OpenaiResponseUpdateManyMutationInput, OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereInput>
  }

  export type CvThequeCritereCreateWithoutCvThequeCompetencesInput = {
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeCriteresInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereUncheckedCreateWithoutCvThequeCompetencesInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereCreateOrConnectWithoutCvThequeCompetencesInput = {
    where: CvThequeCritereWhereUniqueInput
    create: XOR<CvThequeCritereCreateWithoutCvThequeCompetencesInput, CvThequeCritereUncheckedCreateWithoutCvThequeCompetencesInput>
  }

  export type CvThequeCritereUpsertWithoutCvThequeCompetencesInput = {
    update: XOR<CvThequeCritereUpdateWithoutCvThequeCompetencesInput, CvThequeCritereUncheckedUpdateWithoutCvThequeCompetencesInput>
    create: XOR<CvThequeCritereCreateWithoutCvThequeCompetencesInput, CvThequeCritereUncheckedCreateWithoutCvThequeCompetencesInput>
    where?: CvThequeCritereWhereInput
  }

  export type CvThequeCritereUpdateToOneWithWhereWithoutCvThequeCompetencesInput = {
    where?: CvThequeCritereWhereInput
    data: XOR<CvThequeCritereUpdateWithoutCvThequeCompetencesInput, CvThequeCritereUncheckedUpdateWithoutCvThequeCompetencesInput>
  }

  export type CvThequeCritereUpdateWithoutCvThequeCompetencesInput = {
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeCriteresNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereUncheckedUpdateWithoutCvThequeCompetencesInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvMinuteCreateWithoutCvThequeViewsInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutCvThequeViewsInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
    cvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutCvThequeViewsInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutCvThequeViewsInput, CvMinuteUncheckedCreateWithoutCvThequeViewsInput>
  }

  export type CvThequeCritereCreateWithoutCvThequeViewsInput = {
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeCriteresInput
    cvThequeCompetences?: CvThequeCompetenceCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereUncheckedCreateWithoutCvThequeViewsInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereCreateOrConnectWithoutCvThequeViewsInput = {
    where: CvThequeCritereWhereUniqueInput
    create: XOR<CvThequeCritereCreateWithoutCvThequeViewsInput, CvThequeCritereUncheckedCreateWithoutCvThequeViewsInput>
  }

  export type CvMinuteUpsertWithoutCvThequeViewsInput = {
    update: XOR<CvMinuteUpdateWithoutCvThequeViewsInput, CvMinuteUncheckedUpdateWithoutCvThequeViewsInput>
    create: XOR<CvMinuteCreateWithoutCvThequeViewsInput, CvMinuteUncheckedCreateWithoutCvThequeViewsInput>
    where?: CvMinuteWhereInput
  }

  export type CvMinuteUpdateToOneWithWhereWithoutCvThequeViewsInput = {
    where?: CvMinuteWhereInput
    data: XOR<CvMinuteUpdateWithoutCvThequeViewsInput, CvMinuteUncheckedUpdateWithoutCvThequeViewsInput>
  }

  export type CvMinuteUpdateWithoutCvThequeViewsInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutCvThequeViewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvThequeCritereUpsertWithoutCvThequeViewsInput = {
    update: XOR<CvThequeCritereUpdateWithoutCvThequeViewsInput, CvThequeCritereUncheckedUpdateWithoutCvThequeViewsInput>
    create: XOR<CvThequeCritereCreateWithoutCvThequeViewsInput, CvThequeCritereUncheckedCreateWithoutCvThequeViewsInput>
    where?: CvThequeCritereWhereInput
  }

  export type CvThequeCritereUpdateToOneWithWhereWithoutCvThequeViewsInput = {
    where?: CvThequeCritereWhereInput
    data: XOR<CvThequeCritereUpdateWithoutCvThequeViewsInput, CvThequeCritereUncheckedUpdateWithoutCvThequeViewsInput>
  }

  export type CvThequeCritereUpdateWithoutCvThequeViewsInput = {
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeCriteresNestedInput
    cvThequeCompetences?: CvThequeCompetenceUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereUncheckedUpdateWithoutCvThequeViewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type UserCreateWithoutCvThequeUsersInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCvThequeUsersInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCvThequeUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCvThequeUsersInput, UserUncheckedCreateWithoutCvThequeUsersInput>
  }

  export type CvThequeCritereCreateWithoutCvThequeUsersInput = {
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeCriteresInput
    cvThequeCompetences?: CvThequeCompetenceCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereUncheckedCreateWithoutCvThequeUsersInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvThequeCritereInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutCvThequeCritereInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvThequeCritereInput
  }

  export type CvThequeCritereCreateOrConnectWithoutCvThequeUsersInput = {
    where: CvThequeCritereWhereUniqueInput
    create: XOR<CvThequeCritereCreateWithoutCvThequeUsersInput, CvThequeCritereUncheckedCreateWithoutCvThequeUsersInput>
  }

  export type UserUpsertWithoutCvThequeUsersInput = {
    update: XOR<UserUpdateWithoutCvThequeUsersInput, UserUncheckedUpdateWithoutCvThequeUsersInput>
    create: XOR<UserCreateWithoutCvThequeUsersInput, UserUncheckedCreateWithoutCvThequeUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCvThequeUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCvThequeUsersInput, UserUncheckedUpdateWithoutCvThequeUsersInput>
  }

  export type UserUpdateWithoutCvThequeUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCvThequeUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CvThequeCritereUpsertWithoutCvThequeUsersInput = {
    update: XOR<CvThequeCritereUpdateWithoutCvThequeUsersInput, CvThequeCritereUncheckedUpdateWithoutCvThequeUsersInput>
    create: XOR<CvThequeCritereCreateWithoutCvThequeUsersInput, CvThequeCritereUncheckedCreateWithoutCvThequeUsersInput>
    where?: CvThequeCritereWhereInput
  }

  export type CvThequeCritereUpdateToOneWithWhereWithoutCvThequeUsersInput = {
    where?: CvThequeCritereWhereInput
    data: XOR<CvThequeCritereUpdateWithoutCvThequeUsersInput, CvThequeCritereUncheckedUpdateWithoutCvThequeUsersInput>
  }

  export type CvThequeCritereUpdateWithoutCvThequeUsersInput = {
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeCriteresNestedInput
    cvThequeCompetences?: CvThequeCompetenceUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereUncheckedUpdateWithoutCvThequeUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type UserCreateWithoutUserCvThequeContactsInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserCvThequeContactsInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserCvThequeContactsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserCvThequeContactsInput, UserUncheckedCreateWithoutUserCvThequeContactsInput>
  }

  export type UserCreateWithoutRecruiterCvThequeContactsInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    cvThequeContactViews?: CvThequeContactViewCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRecruiterCvThequeContactsInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    cvThequeContactViews?: CvThequeContactViewUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRecruiterCvThequeContactsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRecruiterCvThequeContactsInput, UserUncheckedCreateWithoutRecruiterCvThequeContactsInput>
  }

  export type CvMinuteCreateWithoutCvThequeContactsInput = {
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvMinutesInput
    cvThequeCritere?: CvThequeCritereCreateNestedOneWithoutCvMinutesInput
    files?: FileCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteUncheckedCreateWithoutCvThequeContactsInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutCvMinuteInput
    advices?: AdviceUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteSections?: CvMinuteSectionUncheckedCreateNestedManyWithoutCvMinuteInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutCvMinuteInput
    evaluation?: EvaluationUncheckedCreateNestedOneWithoutCvMinuteInput
    cvThequeViews?: CvThequeViewUncheckedCreateNestedManyWithoutCvMinuteInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutCvMinuteInput
  }

  export type CvMinuteCreateOrConnectWithoutCvThequeContactsInput = {
    where: CvMinuteWhereUniqueInput
    create: XOR<CvMinuteCreateWithoutCvThequeContactsInput, CvMinuteUncheckedCreateWithoutCvThequeContactsInput>
  }

  export type CvThequeContactViewCreateWithoutCvThequeContactInput = {
    count: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCvThequeContactViewsInput
  }

  export type CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput = {
    id?: number
    count: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactViewCreateOrConnectWithoutCvThequeContactInput = {
    where: CvThequeContactViewWhereUniqueInput
    create: XOR<CvThequeContactViewCreateWithoutCvThequeContactInput, CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput>
  }

  export type CvThequeContactViewCreateManyCvThequeContactInputEnvelope = {
    data: CvThequeContactViewCreateManyCvThequeContactInput | CvThequeContactViewCreateManyCvThequeContactInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutUserCvThequeContactsInput = {
    update: XOR<UserUpdateWithoutUserCvThequeContactsInput, UserUncheckedUpdateWithoutUserCvThequeContactsInput>
    create: XOR<UserCreateWithoutUserCvThequeContactsInput, UserUncheckedCreateWithoutUserCvThequeContactsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserCvThequeContactsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserCvThequeContactsInput, UserUncheckedUpdateWithoutUserCvThequeContactsInput>
  }

  export type UserUpdateWithoutUserCvThequeContactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserCvThequeContactsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUpsertWithoutRecruiterCvThequeContactsInput = {
    update: XOR<UserUpdateWithoutRecruiterCvThequeContactsInput, UserUncheckedUpdateWithoutRecruiterCvThequeContactsInput>
    create: XOR<UserCreateWithoutRecruiterCvThequeContactsInput, UserUncheckedCreateWithoutRecruiterCvThequeContactsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRecruiterCvThequeContactsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRecruiterCvThequeContactsInput, UserUncheckedUpdateWithoutRecruiterCvThequeContactsInput>
  }

  export type UserUpdateWithoutRecruiterCvThequeContactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRecruiterCvThequeContactsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CvMinuteUpsertWithoutCvThequeContactsInput = {
    update: XOR<CvMinuteUpdateWithoutCvThequeContactsInput, CvMinuteUncheckedUpdateWithoutCvThequeContactsInput>
    create: XOR<CvMinuteCreateWithoutCvThequeContactsInput, CvMinuteUncheckedCreateWithoutCvThequeContactsInput>
    where?: CvMinuteWhereInput
  }

  export type CvMinuteUpdateToOneWithWhereWithoutCvThequeContactsInput = {
    where?: CvMinuteWhereInput
    data: XOR<CvMinuteUpdateWithoutCvThequeContactsInput, CvMinuteUncheckedUpdateWithoutCvThequeContactsInput>
  }

  export type CvMinuteUpdateWithoutCvThequeContactsInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutCvThequeContactsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvThequeContactViewUpsertWithWhereUniqueWithoutCvThequeContactInput = {
    where: CvThequeContactViewWhereUniqueInput
    update: XOR<CvThequeContactViewUpdateWithoutCvThequeContactInput, CvThequeContactViewUncheckedUpdateWithoutCvThequeContactInput>
    create: XOR<CvThequeContactViewCreateWithoutCvThequeContactInput, CvThequeContactViewUncheckedCreateWithoutCvThequeContactInput>
  }

  export type CvThequeContactViewUpdateWithWhereUniqueWithoutCvThequeContactInput = {
    where: CvThequeContactViewWhereUniqueInput
    data: XOR<CvThequeContactViewUpdateWithoutCvThequeContactInput, CvThequeContactViewUncheckedUpdateWithoutCvThequeContactInput>
  }

  export type CvThequeContactViewUpdateManyWithWhereWithoutCvThequeContactInput = {
    where: CvThequeContactViewScalarWhereInput
    data: XOR<CvThequeContactViewUpdateManyMutationInput, CvThequeContactViewUncheckedUpdateManyWithoutCvThequeContactInput>
  }

  export type UserCreateWithoutCvThequeContactViewsInput = {
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactCreateNestedManyWithoutRecruiterInput
  }

  export type UserUncheckedCreateWithoutCvThequeContactViewsInput = {
    id?: number
    name: string
    email: string
    password: string
    acceptConditions?: boolean
    role?: string
    qualiCarriere?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    files?: FileUncheckedCreateNestedManyWithoutUserInput
    cvMinutes?: CvMinuteUncheckedCreateNestedManyWithoutUserInput
    cvMinuteDomains?: CvMinuteDomainUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedCreateNestedManyWithoutUserInput
    openaiResponses?: OpenaiResponseUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereChat?: QualiCarriereChatUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedCreateNestedManyWithoutUserInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedCreateNestedManyWithoutUserInput
    cvThequeCriteres?: CvThequeCritereUncheckedCreateNestedManyWithoutUserInput
    cvThequeUsers?: CvThequeUserUncheckedCreateNestedManyWithoutUserInput
    userCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutUserInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedCreateNestedManyWithoutRecruiterInput
  }

  export type UserCreateOrConnectWithoutCvThequeContactViewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCvThequeContactViewsInput, UserUncheckedCreateWithoutCvThequeContactViewsInput>
  }

  export type CvThequeContactCreateWithoutCvThequeContactViewsInput = {
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserCvThequeContactsInput
    recruiter: UserCreateNestedOneWithoutRecruiterCvThequeContactsInput
    cvMinute: CvMinuteCreateNestedOneWithoutCvThequeContactsInput
  }

  export type CvThequeContactUncheckedCreateWithoutCvThequeContactViewsInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    userId: number
    recruiterId: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactCreateOrConnectWithoutCvThequeContactViewsInput = {
    where: CvThequeContactWhereUniqueInput
    create: XOR<CvThequeContactCreateWithoutCvThequeContactViewsInput, CvThequeContactUncheckedCreateWithoutCvThequeContactViewsInput>
  }

  export type UserUpsertWithoutCvThequeContactViewsInput = {
    update: XOR<UserUpdateWithoutCvThequeContactViewsInput, UserUncheckedUpdateWithoutCvThequeContactViewsInput>
    create: XOR<UserCreateWithoutCvThequeContactViewsInput, UserUncheckedCreateWithoutCvThequeContactViewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCvThequeContactViewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCvThequeContactViewsInput, UserUncheckedUpdateWithoutCvThequeContactViewsInput>
  }

  export type UserUpdateWithoutCvThequeContactViewsInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUpdateManyWithoutRecruiterNestedInput
  }

  export type UserUncheckedUpdateWithoutCvThequeContactViewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    acceptConditions?: BoolFieldUpdateOperationsInput | boolean
    role?: StringFieldUpdateOperationsInput | string
    qualiCarriere?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutUserNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutUserNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutUserNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereChat?: QualiCarriereChatUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutUserNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutUserNestedInput
    cvThequeCriteres?: CvThequeCritereUncheckedUpdateManyWithoutUserNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutUserNestedInput
    userCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutUserNestedInput
    recruiterCvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutRecruiterNestedInput
  }

  export type CvThequeContactUpsertWithoutCvThequeContactViewsInput = {
    update: XOR<CvThequeContactUpdateWithoutCvThequeContactViewsInput, CvThequeContactUncheckedUpdateWithoutCvThequeContactViewsInput>
    create: XOR<CvThequeContactCreateWithoutCvThequeContactViewsInput, CvThequeContactUncheckedCreateWithoutCvThequeContactViewsInput>
    where?: CvThequeContactWhereInput
  }

  export type CvThequeContactUpdateToOneWithWhereWithoutCvThequeContactViewsInput = {
    where?: CvThequeContactWhereInput
    data: XOR<CvThequeContactUpdateWithoutCvThequeContactViewsInput, CvThequeContactUncheckedUpdateWithoutCvThequeContactViewsInput>
  }

  export type CvThequeContactUpdateWithoutCvThequeContactViewsInput = {
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserCvThequeContactsNestedInput
    recruiter?: UserUpdateOneRequiredWithoutRecruiterCvThequeContactsNestedInput
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvThequeContactsNestedInput
  }

  export type CvThequeContactUncheckedUpdateWithoutCvThequeContactViewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    recruiterId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileCreateManyUserInput = {
    id?: number
    name: string
    originalName: string
    extension: string
    usage: string
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteCreateManyUserInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteDomainCreateManyUserInput = {
    id?: number
    content: string
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereQuestionCreateManyUserInput = {
    id?: number
    order: number
    content: string
    sectionInfoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResponseCreateManyUserInput = {
    id?: number
    content: string
    questionId: number
    sectionInfoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OpenaiResponseCreateManyUserInput = {
    id?: number
    responseId: string
    request: string
    response: string
    index: number
    cvMinuteId?: number | null
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereChatCreateManyUserInput = {
    id?: number
    role: string
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResumeCreateManyUserInput = {
    id?: number
    content: string
    sectionInfoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereCompetenceCreateManyUserInput = {
    id?: number
    content: string
    sectionInfoId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeCritereCreateManyUserInput = {
    id?: number
    position: string
    domain: string
    description?: string
    diplome?: string
    localisation?: string
    distance?: number
    experience?: number | null
    evaluation?: number
    saved?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeUserCreateManyUserInput = {
    id?: number
    score: number
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactCreateManyUserInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    recruiterId: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactCreateManyRecruiterInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    userId: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactViewCreateManyUserInput = {
    id?: number
    count: number
    cvThequeContactId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutFilesNestedInput
    sectionInfo?: SectionInfoUpdateOneWithoutFileNestedInput
  }

  export type FileUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteDomainUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvMinuteDomainsNestedInput
  }

  export type CvMinuteDomainUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteDomainUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereQuestionUpdateWithoutUserInput = {
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sectionInfo?: SectionInfoUpdateOneRequiredWithoutQualiCarriereQuestionsNestedInput
    qualiCarriereResponse?: QualiCarriereResponseUpdateOneWithoutQualiCarriereQuestionNestedInput
  }

  export type QualiCarriereQuestionUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    qualiCarriereResponse?: QualiCarriereResponseUncheckedUpdateOneWithoutQualiCarriereQuestionNestedInput
  }

  export type QualiCarriereQuestionUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResponseUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    qualiCarriereQuestion?: QualiCarriereQuestionUpdateOneRequiredWithoutQualiCarriereResponseNestedInput
    SectionInfo?: SectionInfoUpdateOneWithoutQualiCarriereResponsesNestedInput
  }

  export type QualiCarriereResponseUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    questionId?: IntFieldUpdateOperationsInput | number
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResponseUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    questionId?: IntFieldUpdateOperationsInput | number
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpenaiResponseUpdateWithoutUserInput = {
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutOpenaiResponsesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutOpenaiResponsesNestedInput
  }

  export type OpenaiResponseUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpenaiResponseUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereChatUpdateWithoutUserInput = {
    role?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereChatUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereChatUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResumeUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sectionInfo?: SectionInfoUpdateOneRequiredWithoutQualiCarriereResumesNestedInput
  }

  export type QualiCarriereResumeUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResumeUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereCompetenceUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sectionInfo?: SectionInfoUpdateOneRequiredWithoutQualiCarriereCompetencesNestedInput
  }

  export type QualiCarriereCompetenceUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereCompetenceUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCritereUpdateWithoutUserInput = {
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCompetences?: CvThequeCompetenceUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCompetences?: CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvThequeUsers?: CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    cvMinutes?: CvMinuteUncheckedUpdateManyWithoutCvThequeCritereNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereNestedInput
  }

  export type CvThequeCritereUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    position?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    diplome?: StringFieldUpdateOperationsInput | string
    localisation?: StringFieldUpdateOperationsInput | string
    distance?: IntFieldUpdateOperationsInput | number
    experience?: NullableIntFieldUpdateOperationsInput | number | null
    evaluation?: IntFieldUpdateOperationsInput | number
    saved?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeUserUpdateWithoutUserInput = {
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCritere?: CvThequeCritereUpdateOneRequiredWithoutCvThequeUsersNestedInput
  }

  export type CvThequeUserUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeUserUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactUpdateWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    recruiter?: UserUpdateOneRequiredWithoutRecruiterCvThequeContactsNestedInput
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvThequeContactsNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutCvThequeContactNestedInput
  }

  export type CvThequeContactUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    recruiterId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutCvThequeContactNestedInput
  }

  export type CvThequeContactUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    recruiterId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactUpdateWithoutRecruiterInput = {
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserCvThequeContactsNestedInput
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvThequeContactsNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutCvThequeContactNestedInput
  }

  export type CvThequeContactUncheckedUpdateWithoutRecruiterInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutCvThequeContactNestedInput
  }

  export type CvThequeContactUncheckedUpdateManyWithoutRecruiterInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactViewUpdateWithoutUserInput = {
    count?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeContact?: CvThequeContactUpdateOneRequiredWithoutCvThequeContactViewsNestedInput
  }

  export type CvThequeContactViewUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    cvThequeContactId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactViewUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    cvThequeContactId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileCreateManyCvMinuteInput = {
    id?: number
    name: string
    originalName: string
    extension: string
    usage: string
    userId: number
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdviceCreateManyCvMinuteInput = {
    id?: number
    type: string
    content: string
    sectionInfoId?: number | null
    cvMinuteSectionId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteSectionCreateManyCvMinuteInput = {
    id?: number
    sectionOrder?: number | null
    sectionTitle?: string | null
    sectionId: number
  }

  export type OpenaiResponseCreateManyCvMinuteInput = {
    id?: number
    responseId: string
    request: string
    response: string
    index: number
    userId?: number | null
    cvThequeCritereId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeViewCreateManyCvMinuteInput = {
    id?: number
    count: number
    cvThequeCritereId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteDomainCreateManyCvMinuteInput = {
    id?: number
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactCreateManyCvMinuteInput = {
    id?: number
    type: string
    date: string
    hour: number
    minute: number
    message: string
    status?: string
    userId: number
    recruiterId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FileUpdateWithoutCvMinuteInput = {
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutFilesNestedInput
    sectionInfo?: SectionInfoUpdateOneWithoutFileNestedInput
  }

  export type FileUncheckedUpdateWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileUncheckedUpdateManyWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    extension?: StringFieldUpdateOperationsInput | string
    usage?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceUpdateWithoutCvMinuteInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sectionInfo?: SectionInfoUpdateOneWithoutAdvicesNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneWithoutAdvicesNestedInput
  }

  export type AdviceUncheckedUpdateWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceUncheckedUpdateManyWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteSectionUpdateWithoutCvMinuteInput = {
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    section?: SectionUpdateOneRequiredWithoutCvMinuteSectionsNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteSectionNestedInput
    sectionInfos?: SectionInfoUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteSectionUncheckedUpdateWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    sectionId?: IntFieldUpdateOperationsInput | number
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteSectionNestedInput
    sectionInfos?: SectionInfoUncheckedUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    sectionId?: IntFieldUpdateOperationsInput | number
  }

  export type OpenaiResponseUpdateWithoutCvMinuteInput = {
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOpenaiResponsesNestedInput
    cvThequeCritere?: CvThequeCritereUpdateOneWithoutOpenaiResponsesNestedInput
  }

  export type OpenaiResponseUncheckedUpdateWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpenaiResponseUncheckedUpdateManyWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    cvThequeCritereId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeViewUpdateWithoutCvMinuteInput = {
    count?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeCritere?: CvThequeCritereUpdateOneRequiredWithoutCvThequeViewsNestedInput
  }

  export type CvThequeViewUncheckedUpdateWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeViewUncheckedUpdateManyWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    cvThequeCritereId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteDomainUpdateWithoutCvMinuteInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinuteDomainsNestedInput
  }

  export type CvMinuteDomainUncheckedUpdateWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactUpdateWithoutCvMinuteInput = {
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserCvThequeContactsNestedInput
    recruiter?: UserUpdateOneRequiredWithoutRecruiterCvThequeContactsNestedInput
    cvThequeContactViews?: CvThequeContactViewUpdateManyWithoutCvThequeContactNestedInput
  }

  export type CvThequeContactUncheckedUpdateWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    recruiterId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvThequeContactViews?: CvThequeContactViewUncheckedUpdateManyWithoutCvThequeContactNestedInput
  }

  export type CvThequeContactUncheckedUpdateManyWithoutCvMinuteInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    date?: StringFieldUpdateOperationsInput | string
    hour?: IntFieldUpdateOperationsInput | number
    minute?: IntFieldUpdateOperationsInput | number
    message?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    recruiterId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteSectionCreateManySectionInput = {
    id?: number
    sectionOrder?: number | null
    sectionTitle?: string | null
    cvMinuteId: number
  }

  export type CvMinuteSectionUpdateWithoutSectionInput = {
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvMinuteSectionsNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteSectionNestedInput
    sectionInfos?: SectionInfoUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteSectionUncheckedUpdateWithoutSectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteSectionNestedInput
    sectionInfos?: SectionInfoUncheckedUpdateManyWithoutCvMinuteSectionNestedInput
  }

  export type CvMinuteSectionUncheckedUpdateManyWithoutSectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    sectionOrder?: NullableIntFieldUpdateOperationsInput | number | null
    sectionTitle?: NullableStringFieldUpdateOperationsInput | string | null
    cvMinuteId?: IntFieldUpdateOperationsInput | number
  }

  export type AdviceCreateManyCvMinuteSectionInput = {
    id?: number
    type: string
    content: string
    cvMinuteId?: number | null
    sectionInfoId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SectionInfoCreateManyCvMinuteSectionInput = {
    id?: number
    order?: number | null
    content: string
    title?: string | null
    company?: string | null
    date?: string | null
    contrat?: string | null
    icon?: string | null
    iconSize?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdviceUpdateWithoutCvMinuteSectionInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutAdvicesNestedInput
    sectionInfo?: SectionInfoUpdateOneWithoutAdvicesNestedInput
  }

  export type AdviceUncheckedUpdateWithoutCvMinuteSectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceUncheckedUpdateManyWithoutCvMinuteSectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    sectionInfoId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SectionInfoUpdateWithoutCvMinuteSectionInput = {
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateWithoutCvMinuteSectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    file?: FileUncheckedUpdateOneWithoutSectionInfoNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutSectionInfoNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutSectionInfoNestedInput
    qualiCarriereQuestions?: QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResponses?: QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereResumes?: QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoNestedInput
    qualiCarriereCompetences?: QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoNestedInput
  }

  export type SectionInfoUncheckedUpdateManyWithoutCvMinuteSectionInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: NullableIntFieldUpdateOperationsInput | number | null
    content?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    company?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    contrat?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    iconSize?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceCreateManySectionInfoInput = {
    id?: number
    type: string
    content: string
    cvMinuteId?: number | null
    cvMinuteSectionId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereQuestionCreateManySectionInfoInput = {
    id?: number
    order: number
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResponseCreateManySectionInfoInput = {
    id?: number
    content: string
    questionId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereResumeCreateManySectionInfoInput = {
    id?: number
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type QualiCarriereCompetenceCreateManySectionInfoInput = {
    id?: number
    content: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AdviceUpdateWithoutSectionInfoInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutAdvicesNestedInput
    cvMinuteSection?: CvMinuteSectionUpdateOneWithoutAdvicesNestedInput
  }

  export type AdviceUncheckedUpdateWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AdviceUncheckedUpdateManyWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    cvMinuteSectionId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereQuestionUpdateWithoutSectionInfoInput = {
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutQualiCarriereQuestionsNestedInput
    qualiCarriereResponse?: QualiCarriereResponseUpdateOneWithoutQualiCarriereQuestionNestedInput
  }

  export type QualiCarriereQuestionUncheckedUpdateWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    qualiCarriereResponse?: QualiCarriereResponseUncheckedUpdateOneWithoutQualiCarriereQuestionNestedInput
  }

  export type QualiCarriereQuestionUncheckedUpdateManyWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    order?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResponseUpdateWithoutSectionInfoInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    qualiCarriereQuestion?: QualiCarriereQuestionUpdateOneRequiredWithoutQualiCarriereResponseNestedInput
    user?: UserUpdateOneRequiredWithoutQualiCarriereResponsesNestedInput
  }

  export type QualiCarriereResponseUncheckedUpdateWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    questionId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResponseUncheckedUpdateManyWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    questionId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResumeUpdateWithoutSectionInfoInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutQualiCarriereResumesNestedInput
  }

  export type QualiCarriereResumeUncheckedUpdateWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereResumeUncheckedUpdateManyWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereCompetenceUpdateWithoutSectionInfoInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutQualiCarriereCompetencesNestedInput
  }

  export type QualiCarriereCompetenceUncheckedUpdateWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type QualiCarriereCompetenceUncheckedUpdateManyWithoutSectionInfoInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCompetenceCreateManyCvThequeCritereInput = {
    id?: number
    content: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeViewCreateManyCvThequeCritereInput = {
    id?: number
    count: number
    cvMinuteId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeUserCreateManyCvThequeCritereInput = {
    id?: number
    score: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvMinuteCreateManyCvThequeCritereInput = {
    id?: number
    name?: string
    position: string
    primaryBg?: string
    secondaryBg?: string
    tertiaryBg?: string
    visible?: boolean
    qualiCarriereRef?: boolean
    generated?: string | null
    score?: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OpenaiResponseCreateManyCvThequeCritereInput = {
    id?: number
    responseId: string
    request: string
    response: string
    index: number
    cvMinuteId?: number | null
    userId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeCompetenceUpdateWithoutCvThequeCritereInput = {
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCompetenceUncheckedUpdateWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeCompetenceUncheckedUpdateManyWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeViewUpdateWithoutCvThequeCritereInput = {
    count?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneRequiredWithoutCvThequeViewsNestedInput
  }

  export type CvThequeViewUncheckedUpdateWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeViewUncheckedUpdateManyWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeUserUpdateWithoutCvThequeCritereInput = {
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeUsersNestedInput
  }

  export type CvThequeUserUncheckedUpdateWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeUserUncheckedUpdateManyWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvMinuteUpdateWithoutCvThequeCritereInput = {
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvMinutesNestedInput
    files?: FileUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    files?: FileUncheckedUpdateManyWithoutCvMinuteNestedInput
    advices?: AdviceUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteSections?: CvMinuteSectionUncheckedUpdateManyWithoutCvMinuteNestedInput
    openaiResponses?: OpenaiResponseUncheckedUpdateManyWithoutCvMinuteNestedInput
    evaluation?: EvaluationUncheckedUpdateOneWithoutCvMinuteNestedInput
    cvThequeViews?: CvThequeViewUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvMinuteDomains?: CvMinuteDomainUncheckedUpdateManyWithoutCvMinuteNestedInput
    cvThequeContacts?: CvThequeContactUncheckedUpdateManyWithoutCvMinuteNestedInput
  }

  export type CvMinuteUncheckedUpdateManyWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    primaryBg?: StringFieldUpdateOperationsInput | string
    secondaryBg?: StringFieldUpdateOperationsInput | string
    tertiaryBg?: StringFieldUpdateOperationsInput | string
    visible?: BoolFieldUpdateOperationsInput | boolean
    qualiCarriereRef?: BoolFieldUpdateOperationsInput | boolean
    generated?: NullableStringFieldUpdateOperationsInput | string | null
    score?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpenaiResponseUpdateWithoutCvThequeCritereInput = {
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cvMinute?: CvMinuteUpdateOneWithoutOpenaiResponsesNestedInput
    user?: UserUpdateOneWithoutOpenaiResponsesNestedInput
  }

  export type OpenaiResponseUncheckedUpdateWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OpenaiResponseUncheckedUpdateManyWithoutCvThequeCritereInput = {
    id?: IntFieldUpdateOperationsInput | number
    responseId?: StringFieldUpdateOperationsInput | string
    request?: StringFieldUpdateOperationsInput | string
    response?: StringFieldUpdateOperationsInput | string
    index?: IntFieldUpdateOperationsInput | number
    cvMinuteId?: NullableIntFieldUpdateOperationsInput | number | null
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactViewCreateManyCvThequeContactInput = {
    id?: number
    count: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CvThequeContactViewUpdateWithoutCvThequeContactInput = {
    count?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCvThequeContactViewsNestedInput
  }

  export type CvThequeContactViewUncheckedUpdateWithoutCvThequeContactInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CvThequeContactViewUncheckedUpdateManyWithoutCvThequeContactInput = {
    id?: IntFieldUpdateOperationsInput | number
    count?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}