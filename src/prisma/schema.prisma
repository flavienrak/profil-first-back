generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int     @id @default(autoincrement())
  name             String
  email            String  @unique
  password         String
  acceptConditions Boolean @default(false)
  role             String  @default("user")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  files     File[]
  cvMinutes CvMinute[]
}

model File {
  id            Int    @id @default(autoincrement())
  name          String
  originalName  String
  extension     String
  usage         String
  userId        Int
  cvMinuteId    Int?
  sectionInfoId Int?   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user        User         @relation(fields: [userId], references: [id])
  cvMinute    CvMinute?    @relation(fields: [cvMinuteId], references: [id])
  sectionInfo SectionInfo? @relation(fields: [sectionInfoId], references: [id])
}

model CvMinute {
  id           Int    @id @default(autoincrement())
  position     String
  primaryBg    String @default("#2A7F8B")
  secondaryBg  String @default("#1A5F6B")
  tertiaryBg   String @default("#BEDBFF")
  userId       Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  files            File[]
  advices          Advice[]
  cvMinuteSections CvMinuteSection[]
}

model Section {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  editable Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cvMinuteSections CvMinuteSection[]
}

model CvMinuteSection {
  id           Int     @id @default(autoincrement())
  sectionOrder Int?
  sectionTitle String?
  cvMinuteId   Int
  sectionId    Int

  cvMinute CvMinute @relation(fields: [cvMinuteId], references: [id])
  sections Section  @relation(fields: [sectionId], references: [id])

  advices      Advice[]
  sectionInfos SectionInfo[]

  @@unique([cvMinuteId, sectionId])
}

model SectionInfo {
  id                Int     @id @default(autoincrement())
  order             Int?
  content           String
  title             String?
  company           String?
  date              String?
  contrat           String?
  icon              String?
  iconSize          Int?
  cvMinuteSectionId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  file            File?
  advices         Advice[]
  cvMinuteSection CvMinuteSection @relation(fields: [cvMinuteSectionId], references: [id], onDelete: Cascade)
}

model Advice {
  id                Int     @id @default(autoincrement())
  order             Int?
  role              String?
  content           String
  cvMinuteId        Int?
  sectionInfoId     Int?
  cvMinuteSectionId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cvMinute        CvMinute?        @relation(fields: [cvMinuteId], references: [id])
  sectionInfo     SectionInfo?     @relation(fields: [sectionInfoId], references: [id], onDelete: Cascade)
  cvMinuteSection CvMinuteSection? @relation(fields: [cvMinuteSectionId], references: [id], onDelete: Cascade)
}
